Port of PCL to WCL. The original sources can be obtained
from parcftp.xerox.com.

TO COMPILE: "make install"
TO LOAD: (load "load-script.lisp")

Problems Compiling and loading
--------------------------------
When compiling under gdb, just continue from any error complaining about too
many open files (It's a problem with GDB updating its symbol table).

After PCL is loaded, it's not quite working (I don't know why yet). 
However, the following script seems to fix things:

;;; fix initial make-instance problem. Goes away after it occurs:
(pcl:defclass pcl::fixup () (x))
(pcl:make-instance 'pcl::fixup) ; signals an error. Just abort from it.

(defclass point () (x y))
(make-instance 'point) ; everything seems to work ok from here on...
----------
Things that need fixing:

gdb add-sym problem
add pointer to printed rep
loading pcl should add new inspect methods

Things to fix in WCL to avoid patches:

1) make-symbol problem
	fix WCL: add a unique id to uninterned symbols in dynamic space!
2) Allow (setf (locally ....) ) ??? low.lisp and vector.lisp do this.

3) (defstruct (class-precedence-description
	     (:conc-name nil)
	     (:print-function (lambda (obj str depth)
				(declare (ignore depth))
				(format str
					"#<CPD ~S ~D>"
					(class-name (cpd-class obj))
					(cpd-count obj))))
	     (:constructor make-cpd ()))
  (cpd-class  nil)
  (cpd-supers ())
  (cpd-after  ())
  (cpd-count  0))
  in cpl, (defun make-cpd () ...) prevents init of cpd-count to 0!
  Fix defstruct to init stuff not in the main arg list.

4) allow (typep x 'unknown-type) to compile into runtime call to typep



