
src/misc/system-builder.lisp,1216
(defvar *verbose-build* 24,534
(defvar *system-builder-compiler*)25,584
(defvar *skip-load?*)26,619
(defvar *force-update?*)27,641
(defstruct system-info29,667
(defvar *info*38,785
(defvar *known-systems*42,869
(defmacro sys-dependent-defer-warnings 46,976
(defmacro define-system 51,1146
(defun find-system 54,1238
(defun define-system-internal 57,1299
(defun perform-system-action 85,2310
(defun build-system 92,2571
(defun system-files 99,2839
(defun count-system-lines 102,2927
(defun count-system-characters 105,3023
(defun edit-system 108,3129
(defun print-system 111,3211
(defun build-system-internal 114,3295
(defun build-components 119,3443
(defun build-component 123,3568
(defun sequential-build 137,4088
(defun parallel-build 150,4423
(defun interpreted-build 158,4721
(defun update-and-load-file 163,4875
(defun update-file 168,5049
(defun do-compile-file 176,5328
(defun file-update-needed-p 183,5564
(defun load-file 191,5854
(defun make-full-pathname 218,6840
(defun count-system-lines-internal 234,7288
(defun count-system-characters-internal 250,7810
(defun list-current-system-files 267,8397
(defun count-file-lines 282,8874
(defun count-file-characters 289,9113

src/misc/logical-pathnames.lisp,3835
(defvar *null-vector* 168,7318
(defun get-host-string 170,7351
(defun parse-with-string-delimiter 178,7663
(defun parse-with-string-delimiter* 195,8374
(defun parallel-substitute 215,8966
(defun name-substitution 229,9360
(defvar *logical-pathname-translations-table* 236,9620
(defun canonicalize-logical-hostname 238,9700
(defun logical-pathname-translations 241,9769
(defsetf logical-pathname-translations 247,10025
(defvar *physical-host-table* 253,10205
(defun physical-host-type 257,10405
(defsetf physical-host-type 260,10479
(defconstant local-host-table	264,10579
(defun load-physical-hostab 268,10690
(defun host-type 324,12973
(defstruct translation-rule348,13594
(defvar *permanent-translation-rules* 359,13934
(defvar *default-translation-rule* 362,14039
(defmacro define-translation-rule 364,14100
(defun find-translation-rule 384,14845
(defun choose-case 389,15014
(defun casify 397,15287
(define-translation-rule :vms406,15511
(define-translation-rule :unix409,15585
(define-translation-rule :logical414,15662
(defvar *default-canonical-types* 418,15714
(defvar *canonical-types-alist* 421,15839
(defmacro define-canonical 424,15972
(defun member-or-eq 449,17081
(defun surface-form 453,17201
(defun canonicalize 467,17658
(define-canonical host 485,18225
(define-canonical host 488,18299
(define-canonical device 491,18364
(define-canonical component 493,18406
(define-canonical component 498,18517
(define-canonical component 503,18628
(define-canonical component 504,18667
(define-canonical name 507,18732
(define-canonical type 509,18767
(define-canonical type 510,18819
(define-canonical type 512,18872
(define-canonical type 520,19069
(define-canonical type 525,19179
(define-canonical version 535,19394
(define-canonical version 536,19431
(defstruct (physical-pathname541,19587
(defun %print-physical-pathname 555,19994
(defun make-physical-pathname 559,20149
(defun ensure-physical-pathname 574,20679
(defun physical-pathname-host 580,20884
(defun physical-pathname-device 583,20991
(defun physical-pathname-directory 586,21102
(defun physical-pathname-name 589,21219
(defun physical-pathname-type 592,21326
(defun physical-pathname-version 595,21433
(defstruct (logical-pathname598,21546
(defun %print-logical-pathname 607,21902
(defun make-logical-pathname 611,22054
(defun ensure-logical-pathname 626,22545
(defun logical-pathname-host 629,22650
(defun logical-pathname-directory 632,22770
(defun logical-pathname-name 635,22900
(defun logical-pathname-type 638,23020
(defun logical-pathname-version 641,23140
(defun logical-namestring 644,23266
(defun %directory-string 681,24472
(defun %version-to-string 717,25711
(defun physical-namestring 734,26264
(defun logical-pathname 777,27851
(defun physical-pathname 784,28120
(defun parse-generic-namestring 791,28390
(defun do-generic-pathname-parse 858,30623
(defun parse-generic-pathname 878,31525
(defun parse-vms-pathname 927,33273
(defun parse-explorer-pathname 989,35628
(defvar *translation-output* 1037,37339
(defconstant directory-structure-type 1042,37531
(defun convert-generic-pathname 1044,37577
(defvar *circularity-check-table* 1088,39173
(defun translate-logical-pathname 1094,39465
(defun resolve-logical-pathname 1107,40020
(defun check-logical-pathname 1124,40713
(defun map-logical-pathname 1130,40981
(defun logical-pathname-match-p 1142,41458
(defun translate-logical-pathname-aux 1155,42186
(defun wildcard-wordp 1203,44114
(defun must-match 1206,44167
(defun match-wildcard-word 1211,44274
(defun match-strings 1219,44516
(defun match-directories 1234,45241
(defun map-wildcard-word 1248,45900
(defun map-strings 1276,46903
(defun map-directories 1323,48761
(defun append-logical-directories 1409,51679
(defun pathname-host-type 1490,54837

src/compiler/tree-nsubst.lisp,403
(defun tree-nsubst 3,74
(defun tree-nsubst-list 21,738
(defun tree-nsubst-seq 26,874
(defun tree-nsubst-values 39,1291
(defun tree-nsubst-var-def 43,1390
(defun tree-nsubst-function-call 47,1514
(defun tree-nsubst-if 54,1761
(defun tree-nsubst-switch 60,1990
(defun tree-nsubst-scope-control-transfer 67,2273
(defun tree-nsubst-control-point 75,2582
(defun tree-nsubst-unwind-protect 85,2971

src/compiler/type-dispatch.lisp,542
(defconstant max-no-collision-tries 3,74
(defvar *fixnum-spec* 5,120
(defun duplicates? 7,199
(defun no-collision-hash-size 14,399
(defun no-collision-hash-size-1 19,545
(defun find->hashed-symbol-lookup 33,969
(defun optimize-case 47,1474
(defun optimize-case/fixnums 68,2349
(defun optimize-case/chars 74,2551
(defun optimize-case/symbols 94,3139
(defun flatten-multi-cases 118,3980
(defun optimize-typecase 140,4707
(defun type->type-codes 209,6821
(defun array-type->type-codes 228,7460
(defun optimize-typecase-1 236,7751

src/compiler/emit-code.lisp,2914
(defun emit-code 5,175
(defun emit-c-code 20,826
(defun result-var-name 27,1055
(defun maybe-emit-assignment 34,1177
(defun emit-return-if-tail 37,1264
(defun emit-constant 48,1558
(defun emit-var-ref 54,1699
(defun emit-var-def 67,2048
(defun emit-function-call 84,2530
(defun emit-seq 94,2933
(defun code-mv? 104,3336
(defun emit-proc 107,3398
(defun emit-proc-code 120,3739
(defun emit-inline-mv-call 151,4836
(defun emit-values 171,5641
(defun inner-proc-needs-oe? 194,6483
(defun setup-oe-if-needed 198,6602
(defun emit-cons-closure 212,7053
(defun emit-spec-bind-seq 220,7274
(defun emit-body 237,7931
(defun emit-binder-body 247,8199
(defun emit-named-local 256,8512
(defun add-external-proc 263,8770
(defun emit-named-call 269,8967
(defun emit-unnamed-call 300,10110
(defun emit-primitive-call 327,11154
(defun emit-foreign-call 356,12213
(defun code-with-side-effects? 388,13341
(defun emit-branch 391,13412
(defun emit-if 396,13548
(defun emit-switch 406,13883
(defun emit-full-if 423,14532
(defun emit-partial-if 435,14923
(defun emit-scope-seq 449,15394
(defun emit-tag-seq 478,16497
(defun emit-control-transfer 494,17040
(defun emit-scope-control-transfer 499,17221
(defun emit-tag-control-transfer 526,18287
(defun emit-tag-control-point 538,18696
(defun emit-unwind-protect 541,18787
(defun lookup-outer-environment-offset 549,19134
(defun genstring 556,19380
(defun tmp-var-name 559,19479
(defun emit-proc-extern-declaration 562,19575
(defun emit-ansi-proc-prototype 571,19846
(defun emit-required-argc-check 581,20236
(defun emit-misc-storage-decls 587,20470
(defun emit-hairy-arg-code 595,20801
(defun emit-hairy-value-code 619,21622
(defun emit-hairy-var-code 626,21871
(defun emit-optional-arg-code 637,22273
(defun emit-rest-arg-code 655,22951
(defun emit-restv-arg-code 667,23322
(defun emit-keyword-arg-code 676,23614
(defun inline-array-op? 697,24445
(defun emit-inline-array-op 713,25087
(defun emit-inline-array-ref 718,25295
(defun emit-inline-array-def 743,26232
(defun lisp-array-type->c-type-object 770,27220
(defun emit-source-line 783,27754
(defun emit-c-struct-op 796,28284
(defun emit-c-struct-ref 801,28457
(defun emit-c-struct-def 819,29100
(defun record-c-info-reference 838,29763
(defun record-c-struct-reference 841,29840
(defun record-foreign-function-reference 844,29915
(defun emit-referenced-c-definitions 848,30034
(defun emit-c-definition 853,30155
(defun emit-c-struct-definition 858,30310
(defun emit-foreign-definition 867,30605
(defun convert-lisp->c 877,30953
(defun c->lisp-converter 896,31682
(defun c-type-spec 919,32563
(defun c-type-decl 929,32925
(defun c-type-name->c-type-object 945,33539
(defun lookup-named-c-type 979,34674
(defun define-c-type-name 983,34794
(defun define-c-structure 987,34909
(defun parse-c-struct-info 993,35091
(defun lookup-c-struct-field 1000,35292

src/compiler/globals.lisp,4446
(defvar *current-line* 3,74
(defstruct code5,103
(defstruct (c-code 12,195
(defstruct (seq 15,242
(defstruct (values-seq 19,369
(defstruct (progn 22,419
(defstruct (scope-seq 24,455
(defstruct (tag-seq 27,529
(defstruct (control-point 31,672
(defstruct (scope-control-point 37,796
(defstruct (static-scope-control-point 40,870
(defstruct (dynamic-scope-control-point 44,999
(defstruct (dynamic-block-control-point47,1084
(defstruct (catch-control-point 50,1172
(defstruct (tag-control-point 52,1246
(defstruct (static-tag-control-point 55,1313
(defstruct (dynamic-tag-control-point 58,1393
(defstruct (control-transfer 61,1474
(defstruct (scope-control-transfer 65,1558
(defstruct (tag-control-transfer 68,1637
(defstruct (unwind-protect 70,1701
(defstruct (spec-bind-seq 74,1779
(defstruct (proc 77,1841
(defstruct (inner-proc 88,2085
(defstruct (top-level-proc 93,2166
(defstruct var-info96,2246
(defstruct basic-optional107,2370
(defstruct (optional 113,2461
(defstruct (key 115,2513
(defstruct var	118,2570
(defstruct (function-var 130,2882
(defstruct (variable-var 132,2925
(defstruct (var-op 134,2968
(defstruct (var-ref 138,3029
(defstruct (var-def 140,3070
(defstruct (constant 143,3119
(defstruct (branch 146,3166
(defstruct (if 150,3226
(defstruct (switch 154,3276
(defstruct (inline-mv-call 159,3347
(defstruct (mvalues 163,3423
(defstruct (named-local 166,3469
(defstruct (function-call 170,3555
(defstruct (named-call 175,3621
(defstruct (foreign-call 178,3688
(defstruct (unnamed-call 180,3741
(defstruct (primitive-call 184,3825
(defstruct (c-struct-op 186,3880
(defstruct (c-struct-ref 190,3954
(defstruct (c-struct-def 192,4023
(defvar *c-stream*)194,4098
(defvar *win-stream*)195,4118
(defvar *k-stream*)196,4140
(defvar *package-stream*)197,4160
(defvar *string-counter* 198,4186
(defvar *const-labels*)199,4215
(defvar *delay-proc-emit?* 200,4239
(defvar *tmp-var-counter*)201,4271
(defvar *name-id-counter*)202,4298
(defvar *proc-chain* 203,4325
(defstruct foreign-symbol205,4352
(defvar *undefined-functions* 208,4387
(defstruct function-info210,4458
(defstruct (function-and-method-info 219,4571
(defstruct (proc-info 222,4646
(defstruct (foreign-info 228,4756
(defstruct (compiler-method 233,4872
(defstruct (primitive-info 237,4955
(defstruct lex-env 240,5020
(defvar *env*)248,5107
(defvar *compiler-macro-env* 250,5123
(defvar *standard-type-specifier-symbols*252,5171
(defvar *ok-foreign-declarations* 265,5940
(defstruct decls 268,6038
(defstruct variable-info	279,6196
(defstruct library286,6347
(defvar *primary-function-info* 299,6514
(defvar *new-function-info* 301,6552
(defvar *variable-info* 303,6586
(defvar *structure-info* 306,6696
(defvar *c-named-types* 308,6751
(defvar *referenced-c-info* 310,6805
(defvar *external-procs* 312,6839
(defconstant argc-var-name 314,6870
(defvar *emitting-proc?* 316,6906
(defvar *inner-procs*)318,6937
(defvar *analysis-errors*)320,6961
(defvar *node-id*)322,6989
(defvar *dynamic-control-points*)324,7009
(defvar *break-on-compiler-warn?* 326,7044
(defvar *keyword-package* 328,7086
(defvar *compile-file-pathname*)330,7139
(defvar *compile-verbose* 332,7173
(defvar *compile-print* 334,7203
(defvar *libraries* 336,7233
(defvar *compiler-initialized?* 338,7287
(defvar *compiler-package* 340,7325
(defvar *line-number-readtable* 342,7369
(defvar *source-table* 344,7432
(defvar *link-start-time*)346,7461
(defvar *char-conversions*348,7489
(defstruct (application-package360,8203
(defstruct application-symbol370,8456
(defvar *tmp-file-counter* 380,8615
(defvar *default-libraries* 382,8646
(defvar *pic?* 384,8683
(defvar *emit-symbol-data-function* 386,8704
(defstruct c-type-info388,8746
(defstruct c-constant-type-info395,8836
(defstruct c-array-info	398,8877
(defstruct c-struct-info402,8956
(defstruct c-struct-slot406,8998
(defvar c-type-int8411,9076
(defvar c-type-uint8418,9253
(defvar c-type-int16425,9441
(defvar c-type-uint16432,9621
(defvar c-type-int31440,9814
(defvar c-type-uint31448,10000
(defvar c-type-int32456,10190
(defvar c-type-uint32463,10378
(defvar c-type-long470,10579
(defvar c-type-ulong477,10766
(defvar c-type-char484,10964
(defvar c-type-double490,11105
(defvar c-type-lptr496,11254
(defvar c-type-fptr502,11377
(defvar c-type-void508,11514
(defvar c-type-if-test515,11681
(defvar c-type-char-string521,11815

src/compiler/macros.lisp,132
(defmacro defprimitive 3,74
(defmacro emit-c 13,422
(defmacro emit-lc 16,499
(defmacro emit-k 20,619
(defmacro emit-win 23,696

src/compiler/beta.lisp,548
(defun beta 3,74
(defun beta-list 18,604
(defun beta-body 23,718
(defun beta-seq 28,816
(defun beta-progn 40,1218
(defun beta-named-local 47,1440
(defun collect-beta-pairs 64,2063
(defun propagate-out-type 93,3030
(defun beta-value? 100,3257
(defun beta-values 118,3910
(defun beta-var-ref 122,3987
(defun beta-var-def 133,4375
(defun beta-function-call 137,4477
(defun beta-if 144,4691
(defun beta-switch 150,4876
(defun beta-scope-control-transfer 156,5114
(defun beta-control-point 163,5389
(defun beta-unwind-protect 173,5749

src/compiler/function-info.lisp,1006
(defmacro define-compiler-method 3,74
(defmacro define-meta-eval 10,362
(defun add-meta-eval-method 13,471
(defun add-compiler-method 23,931
(defun get-proc-info 43,1639
(defun new-function-info-table 49,1834
(defun initialize-function-info-table 52,1922
(defun get-or-create-proc-info 56,2071
(defun add-proc-definition 64,2337
(defun proclaim-ftype-info 79,2956
(defun proclaim-inline-function 85,3165
(defun proclaim-notinline-function 89,3275
(defun delete-proc-info 94,3396
(defun validate-function-call 99,3548
(defun add-undefined-function 102,3594
(defun delete-undefined-function 105,3693
(defun add-function-call-info 108,3774
(defun clear-undefined-functions 112,3844
(defun list-undefined-functions 115,3916
(defun write-procedure-info 120,4087
(defun write-c-type-info 148,4966
(defun read-procedure-info 164,5482
(defun read-procedure-info-line 183,6076
(defun read-foreign-info-line 195,6586
(defun define-foreign-function 210,7220
(defun define-primitive 229,7820

src/compiler/configurations.lisp,759
(defvar *root-directory* 3,74
(defstruct (config 5,105
(defun print-config 22,432
(defparameter *default-config*26,557
(defparameter *fastest-config*42,985
(defparameter *debug-library-config*58,1417
(defparameter *standard-library-config*74,1857
(defparameter *delivery-library-config*90,2305
(defparameter *config* 106,2759
(defvar *link-every-symbol?* 108,2801
(defvar *profile?* 110,2834
(defstruct c-compiler112,2859
(defparameter *gcc*119,2990
(defstruct machine126,3205
(defparameter *linux-gcc*135,3338
(defvar *target-machine* 145,3588
(defvar *compiler-version*147,3619
(defvar *compiler-build-date*150,3692
(defun root-load 155,3799
(defun load-pprint 158,3880
(defun load-clos 168,4209
(defun load-logical-pathnames 182,4789

src/compiler/symbol-table.lisp,1208
(defun new-symbol-table 3,74
(defun new-structure-table 6,151
(defun clear-symbol-table 9,224
(defun find-application-package 15,425
(defun find-or-make-application-package 22,647
(defun find-application-symbol-in-symbol-table 35,1079
(defun find-application-symbol-in-libraries 44,1420
(defun find-application-symbol 51,1676
(defun intern-application-symbol 55,1872
(defun intern-application-symbol-in-symbol-table 61,2115
(defun make-new-application-symbol-in-symbol-table 65,2329
(defun intern-application-symbol-used-as-data 76,2736
(defun set-application-symbol-flag 81,2944
(defun set-application-symbol-value 85,3098
(defun set-application-symbol-function 91,3391
(defun setup-application-symbols 96,3638
(defun symbol-init->c-code 170,6277
(defun add-application-structure 194,7116
(defun transitive-structure-children 204,7511
(defun application-structure-predicate 211,7757
(defun emit-application-proc 223,8211
(defun emit-application-symbol 234,8578
(defun link-application-symbol? 255,9334
(defun emit-symbol-table-symbols 259,9459
(defun emit-symbol-table-symbol-arrays 267,9773
(defun emit-symbol-table-registration-code 280,10282
(defun emit-symbol-table 291,10756

src/compiler/library.lisp,597
(defun lookup-library 3,74
(defun lookup-initialized-library 6,142
(defun set-lookup-library 12,330
(defsetf lookup-library 15,421
(defun library-info-file 17,466
(defun library-unix-name 23,635
(defun write-library-info 30,808
(defun write-library-symbols 47,1503
(defun write-library-proclaims 62,1988
(defun read-library-link-info 72,2290
(defun read-library-symbols 93,3167
(defun read-library-proclaims 106,3669
(defun read-all-libraries-compiler-info 112,3868
(defun read-library-compiler-info 116,3983
(defun define-library 125,4338
(defun library-all-object-files 144,4961

src/compiler/improve.lisp,647
(defun improve 3,74
(defun improve-constant 19,698
(defun improve-list 22,759
(defun improve-seq 32,967
(defun improve-values 45,1335
(defun improve-var-ref 49,1422
(defun improve-var-def 52,1482
(defun improve-function-call 56,1582
(defun function-call-rewrite-method 108,3434
(defun call-matches-method-type-signature? 117,3777
(defun improve-if 128,4255
(defun improve-switch 176,5949
(defun improve-scope-control-transfer 183,6202
(defun improve-control-point 190,6474
(defun improve-unwind-protect 200,6827
(defun tail-leaves 207,7069
(defun clear-tree-leaves-tail-slots 226,7751
(defun function-call-side-effects? 247,8645

src/compiler/name-mangle.lisp,452
(defun symbol-package-abbrev 3,74
(defun proc-package-abbrev 6,153
(defun macro-package-abbrev 9,230
(defun legal-c-var-char? 12,308
(defun decimal-integer-length 15,389
(defun lisp->c-name 21,510
(defun lisp->c-field-name 57,1806
(defun lisp->c-function-name 60,1870
(defun lisp->c-variable-name 63,1941
(defun lisp->c-block-name 66,2012
(defun lisp->c-tag-name 69,2080
(defun lisp->c-symbol-name 72,2146
(defun lisp->c-proc-name 75,2234

src/compiler/emit-data.lisp,668
(defun emit-data 5,181
(defun emit-lref 38,1254
(defun emit-foreign-symbol 43,1379
(defun emit-float 46,1430
(defun emit-ratio 49,1502
(defun emit-complex 54,1688
(defun emit-cons 59,1850
(defun emit-null-oe-proc 64,1994
(defun emit-vector 67,2091
(defun emit-multi-array 72,2272
(defun emit-string-using-c-syntax 77,2415
(defun emit-simple-string 87,2747
(defun emit-simple-1d-array 102,3294
(defun bit-vector->word-list 139,4767
(defun emit-complex-1d-array 147,5049
(defun emit-complex-multi-array 151,5143
(defun emit-simple-multi-array 155,5243
(defun emit-compiled-function 167,5659
(defun emit-structure 172,5862
(defun emit-bignum 191,6555

src/compiler/compiler-init.lisp,731
(defun installation-parameter 3,74
(defun configuration-file-name 13,491
(defmacro def-nary-optimizer 17,619
(defmacro def-integer-arith-op/2 25,827
(defmacro def-float-arith-op/2 29,980
(defmacro def-integer-arith-predicate/2 33,1143
(defmacro def-float-arith-predicate/2 37,1300
(defun dyadicize-rl 41,1469
(defun dyadicize-lr 46,1630
(defun test-function 51,1796
(defun simple-eq-version? 56,1901
(defun simple-eql-version? 61,2091
(defun rewrite-mapping-form 66,2284
(defun improve-writer 80,2751
(defun optimize-simple-member 102,3573
(defun initialize-compiler-macros 107,3665
(defun initialize-compiler-methods 335,10742
(defun initialize-primitives 400,13579
(defun initialize-function-methods 618,21423

src/compiler/compile.lisp,1604
(defun comf 3,74
(defun comf-begin 59,2046
(defun comf-loop 63,2134
(defun comf-finish 86,2915
(defun emit-configuration-info 96,3249
(defun comf-top-level-form 109,3780
(defun compile-top-level-add-winfo 135,4866
(defun compile-top-level-package-related-form 140,4961
(defun compile-top-level-progn 145,5086
(defun compile-top-level-eval-when 152,5269
(defun compile-top-level-define-c-type-name 162,5529
(defun compile-top-level-define-foreign-function 169,5785
(defun compile-define-function 173,5863
(defun compile-define-macro 197,6687
(defun compile-define-type 208,7023
(defun compile-define-compiler-macro-1 212,7087
(defun compile-top-level-define-setf 216,7164
(defun compile-top-level-define-structure 221,7269
(defun compile-top-level-define-c-structure 232,7544
(defun compile-define-var 240,7772
(defun simple-constant? 252,8202
(defun com-1 258,8436
(defun back-end 268,8732
(defun compile-top-level-proclaim 274,8846
(defun proclaim-w 281,9054
(defun get-variable-info 322,10578
(defun get-or-create-variable-info 325,10645
(defun proclaim-variable-type 330,10802
(defun special-var-p 334,10925
(defun compiler-warn 337,11004
(defun w-warn 347,11360
(defun form-name 351,11448
(defun initialize-compiler 360,11754
(defun default-target-machine 372,12255
(defun tmp-file-name 381,12525
(defun del-files 388,12722
(defun del-derived-files 393,12820
(defun append-files 399,12983
(defun file-init-thunk-name 404,13123
(defun compile-file 407,13240
(defun compile 410,13297
(defun compile-and-load-def 421,13655
(defun find-root-directory 432,14049

src/compiler/format-compiler.lisp,30
(defun compile-format 15,502

src/compiler/link.lisp,595
(defun link-library 5,155
(defun create-library-aux-files 21,801
(defun link-executable 47,1842
(defun create-executable-aux-files 78,2929
(defun compile-predicates-file 96,3646
(defun compile-library-data-file 116,4345
(defun compile-executable-data-file 140,5242
(defun ld-shared-library 165,6221
(defun ld-executable 174,6545
(defun invoke-c-compiler 189,7030
(defun basic-cc-string 203,7431
(defun invoke-linker 223,8031
(defun successful-status? 234,8361
(defun elapsed-link-time 237,8403
(defun link-msg 240,8478
(defun c-pathname 243,8558
(defun binary-pathname 246,8617

src/compiler/analyze.lisp,3869
(defun analyze 4,135
(defun analyze-1 18,683
(defun analyze-2 32,1143
(defun analyze-dispatch 43,1568
(defun macroexpand-fully 81,3083
(defun update-tmp-var-count 89,3340
(defun analyze-c-code 93,3460
(defun analyze-c-struct-ref 97,3582
(defun analyze-c-struct-def 107,3961
(defun analyze-eval-when 118,4403
(defun analyze-quote 129,4698
(defun analyze-constant 134,4828
(defun analyze-atom 138,4935
(defun constant-expression? 160,5792
(defun quoted-constant? 166,5949
(defun constant-expression-value 169,6019
(defun analyze-special-ref 174,6111
(defun analyze-special-def 181,6347
(defun analyze-setq 188,6585
(defun analyze-if 220,7662
(defun analyze-switch 237,8329
(defun dynamic-transfer-method? 255,9022
(defun add-reanalysis-info 258,9110
(defun analyze-block 261,9222
(defun analyze-static-block 271,9603
(defun analyze-dynamic-block 295,10463
(defun analyze-catch 303,10770
(defun analyze-dynamic-scope 311,11044
(defun analyze-return-from 324,11483
(defun analyze-throw 352,12457
(defun analyze-tagbody 364,12899
(defun analyze-go 405,14278
(defun analyze-function 421,14864
(defun local-proc-name 434,15379
(defun analyze-named-function 444,15653
(defun analyze-spec-bind 450,15836
(defun spec-bind-body 463,16366
(defun analyze-proc 470,16543
(defun analyze-macrolet 525,18489
(defun analyze-symbol-macrolet 546,19170
(defun analyze-local-function-def 555,19534
(defun analyze-unwind-protect 594,20748
(defun analyze-mv-bind 607,21298
(defun analyze-multiple-value-call 615,21574
(defun analyze-inline-mv-call 628,22026
(defun analyze-values 653,23039
(defun analyze-progn 660,23236
(defun analyze-function-call 672,23606
(defun analyze-named-function-call 681,23958
(defun add-ftype-info 724,25327
(defun print-call-types 742,25891
(defun merge-types 748,26069
(defun merge-out-type 753,26213
(defun maybe-remove-tail-recursion 757,26320
(defun analyze-funcall/apply 767,26642
(defun analyze-inline-function-call 780,27229
(defun analyze-simple-inline-function-call 789,27615
(defun analyze-hairy-inline-function-call 823,28699
(defun simple-keyword-arg-list 847,29526
(defun hairy->fixed-arg-list 856,29764
(defun var-lookup 919,31907
(defun cp-lookup 927,32179
(defun lookup-block 941,32654
(defun lookup-tag 944,32725
(defun lookup-function 947,32792
(defun lookup-variable 950,32870
(defun new-label 953,32948
(defun current-proc 956,32988
(defun top-level-proc 959,33036
(defun declare-vars-volatile 965,33264
(defun update-var-extent 969,33369
(defun analyze-lambda-list 981,33710
(defun create-required-var 1042,35908
(defun create-rest-var 1049,36114
(defun create-optional 1054,36222
(defun create-key 1061,36446
(defun push-basic-opt-vars-onto-env 1082,37053
(defun list-basic-optional-vars 1087,37265
(defun fill-basic-optional-slots 1092,37431
(defun create-aux 1104,37786
(defun parse-decls 1107,37846
(defun new-decl-env 1147,39387
(defun add-type-decls 1152,39520
(defun legal-shorthand-type-decl-p 1159,39749
(defun lookup-special-decl 1165,39908
(defun lookup-type-decl 1170,40081
(defun lookup-dynamic-extent-decl 1176,40258
(defun lookup-ignore-decl 1181,40412
(defun lookup-inline-decl 1189,40721
(defun lookup-notinline-decl 1194,40861
(defun inline-function? 1199,41007
(defun ok-foreign-declaration-p 1205,41269
(defun analyze-the 1208,41352
(defun new-var 1215,41575
(defun new-fvar 1230,42040
(defun hairy-lambda-list? 1242,42376
(defun proc-required-vars 1247,42516
(defun collect-specials 1250,42589
(defun anonymous-function-expr? 1259,42897
(defun lambda-expr? 1262,42981
(defun new-var-ref 1266,43064
(defun new-name-id 1273,43268
(defun c-type->lisp-type 1277,43349
(defun flatten 1285,43493
(defun dynamic-control-point-p 1292,43654
(defun unique-control-point-tag 1295,43763
(defun make-progn-if-needed 1298,43865

src/compiler/line-numbers.lisp,383
(defprimitive %boundp 21,537
(defprimitive %fboundp 26,753
(defprimitive %makunbound 29,878
(defprimitive %symref 32,974
(defprimitive %symdef 35,1112
(defun skip-to-next-form 47,1483
(defun skip-to-next-form-1 50,1580
(defun char-macro-open-paren-with-lines 60,1972
(defun read-list-with-lines 71,2356
(defun make-line-number-readtable 90,3053
(defun source-line 95,3211

src/pcl/fin.lisp,8369
(defmacro funcallable-instance-data-position 117,5044
(defun called-fin-without-function 127,5503
(defconstant procedure-is-funcallable-instance-bit-position 147,6120
(defconstant fin-trampoline-fun-index 149,6185
(defconstant fin-size 151,6251
(defun make-trampoline 161,6634
(defun binary-assemble 171,6822
(defvar *mattress-pad-code* 190,7403
(lucid::defsubst funcallable-instance-p 214,8057
(lucid::defsubst set-funcallable-instance-p 219,8277
(defun allocate-funcallable-instance-1 228,8615
(defun set-funcallable-instance-function 262,10155
(defmacro funcallable-instance-data-1 277,10704
(defvar *funcallable-instance-marker* 309,12003
(defun allocate-funcallable-instance-1 311,12080
(scl:defsubst funcallable-instance-p 331,12885
(defun set-funcallable-instance-function 338,13176
(defun make-trampoline 358,14048
(defmacro funcallable-instance-data-1 364,14244
(defsetf funcallable-instance-data-1 368,14383
(defvar *print-lexical-closure* 376,14612
(defun pcl-print-lexical-closure 378,14650
(defvar *function-name-level* 400,15512
(defun pcl-function-name 402,15546
(defun pcl-arglist 418,16195
(defvar *old-frame-function*)446,17031
(defvar *inside-new-frame-function* 448,17062
(defun new-frame-function 450,17104
(defun pcl::doctor-dfun-for-the-debugger 461,17516
(defun last2 470,17832
(defun pcl-funcallable-instance-trampoline 514,19023
(defun allocate-funcallable-instance-1 519,19204
(scl:defsubst funcallable-instance-p 529,19676
(defun set-funcallable-instance-function 534,19863
(defmacro funcallable-instance-data-1 537,19973
(defsetf funcallable-instance-data-1 541,20129
(clos:defmethod clos:print-object 546,20315
(clos:defmethod clos-internals:debugging-information-function 549,20419
(clos:defmethod clos-internals:function-name-object 552,20522
(clos:defmethod clos-internals:arglist-object 559,20758
(defconstant funcallable-instance-closure-slots 573,21053
(defconstant funcallable-instance-closure-size574,21104
(defun allocate-funcallable-instance-1 579,21260
(defun funcallable-instance-p 592,21740
(defun set-funcallable-instance-function 598,21996
(defmacro funcallable-instance-data-1 625,22944
(defsetf funcallable-instance-data-1 629,23121
(defun allocate-funcallable-instance-1 638,23356
(defun funcallable-instance-p 649,23806
(defun set-funcallable-instance-function 654,24024
(defmacro funcallable-instance-data-1 679,24899
(defsetf funcallable-instance-data-1 683,25067
(defconstant funcallable-instance-closure-size 713,26102
(defvar *fin-env-type*716,26196
(defstruct fin-env-pointer721,26372
(defun fin-env-fin 724,26439
(defun |set 728,26567
(defsetf fin-env-fin 733,26740
(defun finalize-fin 739,27087
(defun allocate-funcallable-instance-1 756,27789
(xcl:definline funcallable-instance-p 767,28224
(defun set-funcallable-instance-function 771,28374
(defun make-trampoline 802,29646
(defmacro funcallable-instance-data-1 807,29745
(defsetf funcallable-instance-data-1 815,30050
(defconstant funcallable-instance-flag-bit 836,30511
(defun funcallable-instance-p 838,30560
(defun make-trampoline 844,30766
(defun init-fin-fun 850,30978
(defun allocate-funcallable-instance-1 876,32007
(defun funcallable-instance-mattress-pad 896,32840
(defun funcallable-instance-data-1 948,34313
(defsetf funcallable-instance-data-1 952,34478
(defun set-funcallable-instance-data-1 954,34549
(defun set-funcallable-instance-function 959,34755
(defun allocate-funcallable-instance-1 982,35386
(defun set-funcallable-instance-function 993,35862
(defmacro funcallable-instance-data-1 1037,37940
(defun init-fin-fun 1063,38841
(defun allocate-funcallable-instance-1 1067,38938
(defun funcallable-instance-mattress-pad 1087,39778
(defmacro funcallable-instance-data-1 1114,40457
(defun set-funcallable-instance-function 1120,40641
(defun allocate-funcallable-instance-1 1137,41163
(defun set-funcallable-instance-function 1146,41591
(defun add-instance-vars 1174,43192
(defun funcallable-instance-data-1 1194,44004
(defsetf funcallable-instance-data-1 1199,44220
(defun set-funcallable-instance-data-1 1201,44291
(defun allocate-funcallable-instance-1 1223,44833
(defun funcallable-instance-p 1232,45128
(defun set-funcallable-instance-function 1237,45260
(defun make-trampoline 1248,45767
(defmacro funcallable-instance-data-1 1254,45904
(defun allocate-funcallable-instance-1 1267,46221
(defun funcallable-instance-p 1276,46491
(defun set-funcallable-instance-function 1281,46621
(defun make-trampoline 1292,47042
(defmacro funcallable-instance-data-1 1298,47179
(defvar *funcallable-instance-marker* 1321,47876
(defconstant funcallable-instance-closure-size 1323,47953
(defconstant funcallable-instance-closure-size11325,48005
(defconstant funcallable-instance-available-size1328,48096
(defmacro funcallable-instance-marker 1332,48228
(defun allocate-funcallable-instance-1 1335,48341
(defun allocate-funcallable-instance-2 1343,48678
(defun funcallable-instance-p 1351,48968
(si:define-compiler-macro funcallable-instance-p 1354,49073
(defun set-funcallable-instance-function 1357,49199
(defmacro funcallable-instance-data-1 1371,49776
(defentry make-trampoline 1421,51290
(defvar *funcallable-instance-marker* 1427,51393
(defconstant funcallable-instance-closure-size 1429,51470
(defun allocate-funcallable-instance-1 1431,51522
(defun allocate-funcallable-instance-2 1441,51894
(defun funcallable-instance-p 1449,52156
(defun set-funcallable-instance-function 1456,52389
(defun make-trampoline 1506,54429
(defmacro funcallable-instance-data-1 1512,54616
(defmacro fin-closure-size 1539,55409
(defmacro fin-set-mem-hword 1541,55475
(defun allocate-funcallable-instance-1(1547,55665
(defmacro funcallable-instance-p 1561,56116
(defun set-funcallable-instance-function 1564,56226
(defmacro funcallable-instance-data-1 1572,56512
(defsetf funcallable-instance-data-1 1576,56667
(defun funcallable-instance-name 1581,56859
(defsetf funcallable-instance-name 1584,56952
(defun set-funcallable-instance-name 1586,57019
(defstruct (%funcallable-instance1605,57539
(defun set-funcallable-instance-function 1621,58144
(defmacro funcallable-instance-data-1 1624,58259
(defmacro lexical-closure-environment 1640,58576
(defmacro lexical-closure-environment 1645,58732
(defmacro lexical-closure-function 1649,58863
(defvar *funcallable-instance-marker* 1653,58948
(defconstant funcallable-instance-closure-size 1655,59025
(defmacro allocate-funcallable-instance-2 1657,59138
(defun allocate-funcallable-instance-1 1667,59522
(defun funcallable-instance-p 1677,59886
(defun set-funcallable-instance-function 1684,60155
(defun make-trampoline 1715,61217
(defmacro funcallable-instance-data-1 1722,61372
(defsetf funcallable-instance-data-1 1730,61589
(defun make-trampoline 1752,62203
(defun un-initialized-fin 1755,62289
(defun allocate-funcallable-instance-1 1763,62479
(defun funcallable-instance-p 1768,62652
(clc::deftransform funcallable-instance-p 1771,62738
(defun set-funcallable-instance-function 1774,62852
(defun funcallable-instance-data-1 1785,63269
(defun set-funcallable-instance-data-1 1789,63401
(defsetf funcallable-instance-data-1 1794,63552
(defconstant ccl::$v_istruct 1805,63692
(defvar ccl::initial-fin-slots 1806,63725
(defconstant ccl::fin-function 1807,63804
(defconstant ccl::fin-data 1808,63838
(defun allocate-funcallable-instance-1 1810,63891
(defun print-uvector-object 1823,64282
(defun funcallable-instance-p 1834,64588
(defun set-funcallable-instance-function 1838,64737
(defmacro funcallable-instance-data-1 1845,65015
(defsetf funcallable-instance-data-1 1850,65181
(lisp::defun-inline fin-ref 1860,65404
(lisp::defun-inline set-fin-ref 1863,65469
(defsetf fin-ref 1867,65558
(lisp::defun-inline funcallable-instance-p 1869,65589
(defun default-funcallable-instance-function 1873,65759
(defun allocate-funcallable-instance-1 1877,65900
(defun make-trampoline 1886,66240
(lisp::defun-inline copy-procedure-code-pointer 1890,66330
(defun set-funcallable-instance-function 1893,66464
(defmacro funcallable-instance-data-1 1904,66888
(defmacro fsc-instance-p 1919,67236
(defmacro fsc-instance-class 1922,67302
(defmacro fsc-instance-wrapper 1925,67402
(defmacro fsc-instance-slots 1928,67488
(defun allocate-funcallable-instance 1931,67570

src/pcl/ctypes.lisp,365
(define-method-combination + 36,1336
(define-method-combination and 37,1401
(define-method-combination append 38,1466
(define-method-combination list 39,1533
(define-method-combination max 40,1600
(define-method-combination min 41,1665
(define-method-combination nconc 42,1730
(define-method-combination or 43,1795
(define-method-combination progn 44,1860

src/pcl/fsc.lisp,301
(defmethod wrapper-fetcher 43,1801
(defmethod slots-fetcher 46,1891
(defmethod raw-instance-allocator 49,1977
(defmethod check-super-metaclass-compatibility56,2098
(defmethod allocate-instance62,2278
(defmethod make-reader-method-function 70,2601
(defmethod make-writer-method-function 74,2740

src/pcl/quadlap.lisp,647
(defvar *arg-to-treg* 12,204
(defvar *cvar-to-index* 13,231
(defvar *reg-array* 14,260
(defvar *closure-treg* 15,285
(defvar *nargs-treg* 16,313
(defvar *debug-sparc* 18,340
(defmacro pcl-make-lambda 20,368
(defmacro pcl-make-varrec 26,591
(defmacro pcl-make-lap 29,758
(defstruct preg 33,895
(defun pcl::excl-lap-closure-generator 41,1061
(defun pcl::excl-lap-closure-gen57,1441
(defun qe-slot-access 242,6088
(defun get-treg-of 251,6331
(defun simple-get-treg-of 296,7848
(defun index-p 314,8339
(defun gen-index-treg 326,8763
(defun vector-preg-p 342,9197
(defun excl-gen-quads 349,9370
(defun insert-closure-vals 594,16435

src/pcl/iterate.lisp,887
(defvar *iterate-warnings* 37,1522
(defmacro iterate 44,1791
(defparameter *iterate-temp-vars-list*92,3915
(defun expand-into-let 345,17176
(defun variables-from-let 437,22510
(defun iterate-transform-body 446,22822
(defun extract-special-bindings 565,29435
(defun function-lambda-p 577,29946
(defun rename-variables 656,34016
(defun variable-same-p 717,36753
(defun maybe-warn 721,36877
(defmacro list-elements 784,39226
(defmacro list-tails 792,39538
(defun sequence-accessor 852,41955
(defmacro eachtime 872,42533
(defmacro while 877,42655
(defmacro until 881,42757
(defmacro gathering 888,42924
(defmacro with-gathering 892,43098
(defvar *active-gatherers* 931,44826
(defvar *anonymous-gathering-site* 934,44937
(defun rename-and-capture-variables 1052,51143
(defmacro joining 1216,59949
(defmacro summing 1256,61606
(define-walker-template prog1 1266,61977

src/pcl/dlap.lisp,1095
(defun emit-one-class-reader 32,1164
(defun emit-one-class-writer 33,1253
(defun emit-two-class-reader 35,1343
(defun emit-two-class-writer 36,1432
(defun emit-reader/writer 40,1524
(defun emit-one-index-readers 110,4209
(defun emit-one-index-writers 130,4837
(defun emit-n-n-readers 152,5522
(defun emit-n-n-writers 168,5932
(defun emit-checking 187,6420
(defun emit-caching 205,7034
(defun emit-check-1-class-wrapper 223,7593
(defun emit-check-2-class-wrapper 229,7849
(defun emit-get-slot 238,8283
(defun emit-set-slot 246,8651
(defun emit-get-class-slot 253,8972
(defun emit-set-class-slot 261,9267
(defun emit-miss 268,9539
(defun dlap-wrappers 276,9757
(defun dlap-wrapper-moves 280,9876
(defun emit-dlap 290,10242
(defun emit-dlap-internal 302,10676
(defun emit-1-nil-dlap 315,11085
(defun emit-1-t-dlap 348,12374
(defun emit-greater-than-1-dlap 388,13973
(defun emit-check-1-wrapper-in-cache 427,15422
(defun emit-check-cache-entry 437,15852
(defun emit-check-cache-line 443,16088
(defun emit-lock-count-test 459,16654
(defun emit-adjust-location 470,17028

src/pcl/macros.lisp,1246
(defmacro memq 62,2291
(defmacro assq 63,2352
(defmacro rassq 64,2412
(defmacro delq 65,2474
(defmacro posq 66,2535
(defmacro neq 67,2598
(defun make-caxr 70,2639
(defun make-cdxr 75,2773
(defun true 81,2933
(defun false 82,2989
(defun zero 83,3048
(defun make-plist 85,3105
(defun remtail 92,3248
(defmacro once-only 99,3599
(defun extract-declarations 125,4488
(defvar *keyword-package* 158,5494
(defun make-keyword 160,5546
(defun string-append 165,5659
(defun symbol-append 174,5959
(defmacro check-member 177,6069
(defmacro alist-entry 183,6316
(defmacro destructuring-bind 199,6903
(defun destructure 212,7252
(defun destructure-internal 223,7650
(defmacro collecting-once 284,9632
(defmacro doplist 295,10040
(defmacro if* 308,10522
(defmacro printing-random-thing 317,10755
(defun printing-random-thing-internal 325,10982
(defun capitalize-words 333,11099
(defvar *find-class* 359,11818
(defun legal-class-name-p 361,11870
(defun find-class 365,11948
(defsetf find-class 374,12253
(defun SETF\ 378,12415
(defun find-wrapper 383,12606
(defun reduce-constant 387,12730
(defmacro gathering1 396,12877
(defmacro vectorizing 404,13050
(defmacro *list-elements 422,13611
(defmacro *list-tails 430,13821

src/pcl/construct.lisp,1751
(defmacro defconstructor108,4948
(defun expand-defconstructor 115,5132
(defun load-constructor 156,6836
(defclass constructor 181,7683
(defun set-constructor-code 221,9231
(defmethod print-object 227,9456
(defmethod describe-object 235,9756
(defun make-constructor 250,10339
(defmethod add-constructor 261,10728
(defmethod remove-constructor 266,10892
(defmethod get-constructor 272,11098
(defmethod load-constructor-internal285,11616
(defmethod install-lazy-constructor-installer 294,12003
(defvar *constructor-code-types* 385,16008
(defmacro define-constructor-code-type 387,16046
(defun load-define-constructor-code-type 397,16396
(defmethod make-constructor-code-generators404,16634
(defmethod compute-constructor-code 418,17060
(defun map-constructors 469,19064
(defun reset-constructors 482,19456
(defun disable-constructors 487,19650
(defun enable-constructors 501,20074
(defvar *standard-initialize-instance-method*510,20278
(defvar *standard-shared-initialize-method*515,20419
(defun non-pcl-initialize-instance-methods-p 520,20570
(defun non-pcl-shared-initialize-methods-p 524,20713
(defun non-pcl-or-after-initialize-instance-methods-p 528,20852
(defun non-pcl-or-after-shared-initialize-methods-p 533,21058
(defun check-initargs 542,21328
(defun compute-constant-vector 577,22689
(defmacro copy-constant-vector 605,23608
(defun compute-initarg-positions 617,24132
(define-constructor-code-type fallback655,25514
(define-constructor-code-type general678,26250
(defun general-generator-internal742,28346
(define-constructor-code-type no-methods850,32414
(defun no-methods-generator-internal894,33980
(define-constructor-code-type simple-slots991,37540
(defun simple-slots-generator-internal1028,38876

src/pcl/init.lisp,413
(defmethod make-instance 33,1234
(defmethod make-instance 51,1979
(defvar *default-initargs-flag* 54,2102
(defmethod default-initargs 56,2147
(defmethod initialize-instance 78,2888
(defmethod reinitialize-instance 81,3015
(defmethod update-instance-for-different-class 94,3507
(defmethod update-instance-for-redefined-class 117,4602
(defmethod shared-initialize133,5264
(defun check-initargs-1 188,7208

src/pcl/methods.lisp,5692
(defclass method 41,1438
(defclass standard-method 43,1473
(defclass standard-accessor-method 69,2089
(defmethod accessor-method-slot-name 79,2493
(defclass standard-reader-method 82,2591
(defclass standard-writer-method 83,2655
(defmethod print-object 86,2721
(defmethod print-object 96,3154
(defmethod reinitialize-instance 115,3833
(defmethod legal-documentation-p 121,4053
(defmethod legal-lambda-list-p 126,4183
(defmethod legal-method-function-p 130,4272
(defmethod legal-qualifiers-p 135,4386
(defmethod legal-qualifier-p 145,4737
(defmethod legal-slot-name-p 150,4860
(defmethod legal-specializers-p 156,5095
(defvar *allow-experimental-specializers-p* 166,5454
(defmethod legal-specializer-p 168,5504
(defmethod shared-initialize 176,5747
(defmethod shared-initialize 205,6981
(defmethod shared-initialize 213,7280
(defmethod method-qualifiers 216,7425
(defclass generic-function 221,7521
(defclass standard-generic-function 227,7678
(define-gf-predicate generic-function-p 264,8630
(define-gf-predicate method-p 265,8696
(define-gf-predicate standard-accessor-method-p 266,8752
(define-gf-predicate standard-reader-method-p 267,8826
(define-gf-predicate standard-writer-method-p 268,8898
(defvar *the-class-method* 270,8971
(defvar *the-class-standard-method* 271,9039
(defvar *the-class-generic-function* 272,9116
(defvar *the-class-standard-generic-function* 273,9194
(defmethod print-object 277,9285
(defmethod shared-initialize 284,9485
(defmethod initialize-instance 331,11131
(defmethod reinitialize-instance 337,11385
(defmethod remove-named-method 367,12527
(defun real-add-named-method 389,13283
(defun make-specializable 414,14235
(defun real-get-method 455,15716
(defmethod compute-discriminating-function-arglist-info485,16929
(defun compute-discriminating-function-arglist-info-internal500,17622
(defun make-discriminating-function-arglist 531,19111
(defun make-arg-info 543,19511
(defun check-arg-info 558,20012
(defun arg-info-precedence 565,20178
(defun arg-info-metatypes 569,20267
(defun arg-info-number-optional 573,20355
(defun arg-info-key/rest-p 577,20449
(defun arg-info-keywords 581,20538
(defun arg-info-applyp 585,20625
(defun arg-info-number-required 590,20777
(defun arg-info-nkeys 594,20891
(defun new-arg-info-from-generic-function 598,20996
(defun new-arg-info-from-method 610,21461
(defun add-arg-info 619,21802
(defun remove-arg-info 659,23419
(defun compute-precedence 666,23547
(defmethod no-applicable-method 677,23875
(defun real-add-method 689,24274
(defun real-remove-method 721,25675
(defvar *magic-generic-functions*775,27989
(defvar *magic-generic-functions-1* 903,33721
(defun add-magic-magic-generic-function 907,33925
(defun lookup-magic-magic-generic-function 913,34165
(defun fixup-magic-generic-function 917,34317
(defun get-secondary-dispatch-function 951,35331
(defun get-magic-secondary-dispatch-function 959,35691
(defmacro protect-cache-miss-code 975,36238
(defmethod compute-applicable-methods989,36794
(defmethod compute-applicable-methods-using-classes994,37006
(defmethod compute-applicable-methods-using-types999,37232
(defmethod same-specializer-p 1043,39216
(defmethod order-specializers-using-class 1046,39301
(defmethod specializer-class 1051,39497
(defclass specializer-with-object 1054,39564
(defmethod same-specializer-p 1057,39671
(defclass exact-class-specializer 1061,39844
(defclass class-eq-specializer 1063,39903
(defclass eql-specializer 1066,40041
(defmethod specializer-class 1069,40124
(defmethod order-specializers-using-class 1072,40233
(defmethod order-specializers-using-class 1078,40402
(defmethod order-specializers-using-class 1084,40564
(define-gf-predicate specializerp 1090,40726
(define-gf-predicate class-specializer-p 1091,40773
(define-gf-predicate exact-class-specializer-p 1092,40833
(define-gf-predicate class-eq-specializer-p 1093,40905
(define-gf-predicate eql-specializer-p 1094,40971
(defmethod specializer-type-p 1104,41372
(defmethod specializer-applicable-using-type-p 1107,41482
(defmethod specializer-type-p 1118,41914
(defmethod specializer-applicable-using-type-p 1121,42033
(defmethod specializer-type-p 1135,42544
(defmethod specializer-applicable-using-type-p 1138,42649
(defun outcome-implies-p 1147,43000
(defmethod specializer-from-type 1156,43274
(defmethod specializer-from-type 1159,43373
(defmethod specializer-from-type 1163,43505
(defmethod specializer-from-type 1167,43605
(defmethod specializer-from-type 1170,43734
(defun specializer-from-type 1174,43858
(defmethod type-from-specializer 1185,44228
(defmethod type-from-specializer 1188,44281
(defmethod type-from-specializer 1191,44361
(defmethod type-from-specializer 1194,44466
(defmethod compute-argument-test-form1200,44647
(defmethod compute-argument-test-form1208,44888
(defmethod compute-argument-test-form1213,45093
(defun get-normal-secondary-dispatch-function 1219,45285
(defun get-effective-method-function 1252,46679
(defun generate-discrimination-net 1276,47818
(defvar *uncompiled-discriminating-function-table*1418,54105
(defmethod compute-discriminating-function 1421,54188
(defun invalidate-uncompiled-discriminating-functions 1435,54663
(defun update-dfun 1445,55003
(defvar *generate-random-code-segments* 1451,55316
(defun invalidate-discriminating-function 1453,55362
(defun invalidate-dfun-internal 1463,55856
(defun invalid-dfun 1486,56714
(defmethod function-keywords 1497,56990
(defun analyze-lambda-list 1503,57266
(defun method-ll->generic-function-ll 1547,58550
(defmethod generic-function-pretty-arglist1563,59171
(defmethod method-pretty-arglist 1592,60216

src/pcl/plap.lisp,1259
(defmacro lap-case 47,1731
(defvar *lap-args*)56,1972
(defvar *lap-rest-p*)57,1992
(defvar *lap-i-regs*)58,2014
(defvar *lap-v-regs*)59,2036
(defvar *lap-t-regs*)60,2058
(defvar *lap-optimize-declaration*62,2081
(defun make-lap-closure-generator-lambda 84,2836
(defun make-lap-prog 95,3300
(defun make-lap-prog-internal 100,3471
(defconstant *empty-vector* 114,3969
(defun lap-reg-initial-value-form 116,4005
(defun lap-opcode 123,4242
(defun lap-operand 170,5651
(defun lap-operands 203,6990
(defun lap-reg 206,7068
(defmacro RUNTIME\ 219,7509
(defmacro RUNTIME\ 222,7578
(defmacro RUNTIME\ 224,7641
(defmacro RUNTIME\ 227,7707
(defmacro RUNTIME\ 230,7773
(defmacro RUNTIME\ 233,7843
(defmacro RUNTIME\ 236,7898
(defmacro RUNTIME\ 239,7979
(defmacro RUNTIME\ 242,8041
(defmacro RUNTIME\ 245,8104
(defmacro RUNTIME\ 248,8167
(defmacro RUNTIME\ 251,8226
(defmacro RUNTIME\ 262,8609
(defmacro RUNTIME\ 265,8709
(defmacro RUNTIME\ 268,8829
(defmacro RUNTIME\ 271,8932
(defmacro RUNTIME\ 274,9034
(defmacro RUNTIME\ 277,9138
(defmacro RUNTIME\ 280,9212
(defmacro RUNTIME\ 284,9369
(defconstant index-value-limit 291,9553
(defun index-value->index 293,9607
(defun index->index-value 294,9660
(defun make-index-mask 296,9702

src/pcl/pcl-env.lisp,2465
(defun il:print-closure 45,1552
(defun gf-named 68,2381
(defun generic-function-method-names 81,2754
(defun full-method-name 94,3254
(defun make-full-method-name 118,4208
(defun parse-full-method-name 138,4855
(defun prompt-for-full-method-name 145,5077
(defmacro make-defdefiner 174,5949
(defun unmake-defdefiner 214,7751
(defun source-manager-method-edit-fn 224,8092
(defun source-manager-method-hasdef-fn 238,8591
(defun initialize-pcl-env 265,9512
(defun pcl-object-p 328,11972
(defun \\internal-inspect-object 333,12080
(defun \\internal-inspect-slot-names 336,12162
(defun \\internal-inspect-slot-value 339,12230
(defun \\internal-inspect-setf-slot-value 342,12318
(defun \\internal-inspect-slot-name-command 345,12428
(defun \\internal-inspect-title 348,12544
(defmethod inspect-object 351,12606
(defmethod inspect-slot-names 362,13073
(defmethod inspect-slot-value 368,13289
(defmethod inspect-setf-slot-value 373,13489
(defmethod inspect-slot-name-command 381,13777
(defmethod inspect-title 422,15382
(defmethod inspect-title 426,15538
(defun xcl::interesting-frame-p 452,16332
(cl:defstruct (frame-prop-name 509,18121
(defun il:debugger-stack-frame-prop-names 524,18499
(defun il:debugger-stack-frame-fetchfn 633,22722
(defun il:debugger-stack-frame-storefn 637,22880
(defun il:debugger-stack-frame-value-command 641,23061
(defun il:debugger-stack-frame-title 646,23279
(defun il:debugger-stack-frame-property 650,23440
(defvar xcl::*function-types* 657,23697
(defun il:attach-backtrace-menu 665,23886
(defun il:backtrace-item-selected 733,26343
(defun il:collect-backtrace-items 798,28675
(defun dbg::attach-backtrace-menu 877,34110
(defun dbg::collect-backtrace-items 964,37371
(defun dbg::backtrace-menu-buttoneventfn 1055,41082
(defun dbg::backtrace-item-selected 1089,42586
(defun il:select.fns.editor 1145,44890
(defmethod il:inspect/as/function 1179,45936
(defmethod il:inspect/as/function 1217,47616
(defmethod il:inspect/as/function 1222,47809
(defun interesting-frame-p 1237,48401
(defun defclass-prettyprint 1422,55958
(defun binder-prettyprint 1449,56913
(defvar *pfi-class-type* 1545,60093
(defvar *pfi-method-type* 1547,60154
(defvar *pfi-index-accessors* 1550,60258
(defvar *pfi-method-index* 1553,60351
(defun pfi-add-class-type 1556,60424
(defun pfi-add-method-type 1559,60499
(defun pfi-class-namer 1562,60576
(defun pfi-method-namer 1597,62009
(defun pfi-install-pcl 1621,63091

src/pcl/pcl-env-internal.lisp,360
(DEFINE-FILE-INFO PACKAGE 1,0
(defun stack-eql 202,5077
(defun stack-pointer-frame 212,5798
(defun stack-frame-valid-p 215,5900
(defun stack-frame-fn-header 218,5991
(defun stack-frame-pc 221,6078
(defun fnheader-debugging-info 224,6152
(defun stack-frame-name 248,7871
(defun compiled-closure-fnheader 251,7954
(defun compiled-closure-env 255,8152

src/pcl/defs.lisp,2702
(defvar *setf-function-names* 43,1650
(defun get-setf-function-name 45,1721
(defmacro do-standard-defsetf 70,2886
(defun do-standard-defsetfs-for-defclass 74,3049
(defun do-standard-defsetf-1 77,3161
(defun setfboundp 155,5731
(defsetf slot-value 200,7232
(defmacro parse-gspec 216,7907
(defun unencapsulated-fdefinition 240,8797
(defun fdefine-carefully 253,9292
(defun gboundp 274,10227
(defun gmakunbound 279,10349
(defun gdefinition 284,10483
(defun SETF\ 290,10686
(defun type-class 296,10875
(defun class-type-p 307,11177
(defun exact-class-type-p 314,11369
(defun make-class-eq-predicate 319,11521
(deftype class-eq 323,11670
(defun class-eq-type-p 326,11746
(defun make-eql-predicate 331,11872
(deftype eql 334,11959
(defun eql-type-p 337,12037
(defun type-object 342,12142
(defun not-type-p 348,12247
(defun not-type 351,12316
(defun *typep 358,12484
(defun *subtypep 368,12765
(defun do-satisfies-deftype 378,13116
(defun make-type-predicate-name 401,13979
(defvar *built-in-class-symbols* 444,15477
(defvar *built-in-wrapper-symbols* 445,15514
(defun get-built-in-class-symbol 447,15554
(defun get-built-in-wrapper-symbol 456,15853
(defun variable-class 471,16263
(defvar *boot-state* 475,16346
(defvar *next-methods* 497,17206
(defvar *not-an-eql-specializer* 499,17235
(defvar *umi-gfs*)501,17296
(defvar *umi-complete-classes*)502,17315
(defvar *umi-reorder*)503,17347
(defvar *invalidate-discriminating-function-force-p* 505,17371
(defvar *invalid-dfuns-on-stack* 506,17428
(defvar *standard-method-combination*)509,17467
(defvar *slotd-unsupplied* 511,17507
(defmacro define-gf-predicate 514,17570
(defmacro plist-value 519,17752
(defsetf plist-value 522,17841
(defvar *built-in-classes*531,18052
(defclass t 561,19310
(defclass standard-object 564,19360
(defclass metaobject 566,19395
(defclass specializer 568,19439
(defclass class-specializer 570,19479
(defclass definition-source-mixin 572,19526
(defclass plist-mixin 578,19679
(defclass documentation-mixin 582,19750
(defclass dependent-update-mixin 585,19804
(defclass class 593,20075
(defclass pcl-class 612,20589
(defclass std-class 622,20842
(defclass standard-class 635,21136
(defclass funcallable-standard-class 638,21183
(defclass forward-referenced-class 641,21246
(defclass built-in-class 643,21298
(defclass slot-definition 651,21451
(defclass direct-slot-definition 653,21495
(defclass effective-slot-definition 654,21553
(defclass standard-slot-definition 656,21612
(defclass standard-direct-slot-definition 691,22359
(defclass standard-effective-slot-definition 697,22555
(defclass eql-specializer 705,22762
(defmacro dolist-carefully 713,22879

src/pcl/dfun.lisp,1665
(defvar *dfun-states* 90,3841
(defun notice-dfun-state 92,3894
(defvar *dfun-constructors* 102,4290
(defvar *enable-dfun-constructor-caching* 107,4488
(defun show-dfun-constructors 112,4703
(defun get-dfun-constructor 122,5071
(defun load-precompiled-dfun-constructor 134,5614
(defmacro precompile-dfun-constructors 142,6015
(defun make-initial-dfun 171,6943
(defun update-to-one-class-readers-dfun 217,8816
(defun update-to-one-class-writers-dfun 230,9284
(defun one-class-readers-miss 243,9772
(defun one-class-writers-miss 247,9933
(defun update-to-two-class-readers-dfun255,10131
(defun update-to-two-class-writers-dfun269,10642
(defun two-class-readers-miss 283,11172
(defun two-class-writers-miss 287,11325
(defun update-to-one-index-readers-dfun296,11527
(defun update-to-one-index-writers-dfun314,12214
(defun one-index-readers-miss 332,12922
(defun one-index-writers-miss 336,13059
(defun one-index-limit-fn 341,13201
(defun update-to-n-n-readers-dfun 346,13269
(defun update-to-n-n-writers-dfun 363,13876
(defun n-n-readers-miss 380,14491
(defun n-n-writers-miss 383,14604
(defun n-n-accessors-limit-fn 387,14722
(defun update-to-checking-dfun 394,14805
(defun checking-limit-fn 420,15843
(defun update-to-caching-dfun 427,15921
(defun caching-limit-fn 448,16706
(defun initial-dfun 466,17329
(defun accessor-miss 489,18229
(defun checking-miss 579,21007
(defun caching-miss 602,21884
(defun cache-miss-values 665,24501
(defun get-wrappers 675,24923
(defun cache-miss-values-function 699,25722
(defun generate-random-code-segments 710,26135
(defun generate-arglists 715,26353
(defun accessor-miss-values 721,26602

src/pcl/wcl-low.lisp,98
(defmacro %svref 32,1288
(defsetf %svref 35,1381
(defun printing-random-thing-internal 39,1507

src/pcl/pkg.lisp,59
(defun wcl-make-symbol 58,1855
(defvar *exports* 74,2144

src/pcl/test.lisp,330
(defclass rectangle 3,29
(defclass color-rectangle 11,214
(defclass color-mixin 20,412
(defclass color-rectangle-2 25,504
(defparameter r1 31,652
(defparameter r2 34,736
(defparameter r3 37,826
(defgeneric paint 40,918
(defmethod paint 42,953
(defmethod paint 45,1005
(defmethod paint 48,1063
(defmethod paint 51,1123

src/pcl/vector.lisp,1586
(defmacro instance-slot-index 32,1190
(defmacro %isl-cache 43,1419
(defmacro %isl-field 44,1474
(defmacro %isl-mask 45,1529
(defmacro %isl-size 46,1584
(defmacro %isl-slot-name-lists 47,1639
(defun make-isl 49,1695
(defun make-isl-internal 58,1948
(defun make-isl-type-declaration 68,2293
(defun islp 71,2363
(defvar *slot-name-lists-inner* 76,2473
(defvar *slot-name-lists-outer* 77,2538
(defun intern-slot-name-lists 79,2604
(defvar *pvs* 90,2972
(defvar *original-methods-table* 92,3020
(defun optimize-method-call-p 94,3084
(defun optimize-slot-value-by-class-p 106,3643
(defun lookup-pv 123,4384
(defun make-permutation-vector 150,5462
(defun make-pv-type-declaration 153,5563
(defmacro pvref 156,5632
(defun can-optimize-access 161,5686
(defun optimize-slot-value 167,5924
(defun optimize-set-slot-value 172,6112
(defun optimize-slot-boundp 177,6321
(defun optimize-instance-access 188,6786
(define-walker-template instance-read)214,7728
(define-walker-template instance-write)215,7767
(define-walker-template instance-boundp)216,7807
(defmacro instance-read 219,7850
(defmacro instance-write 231,8295
(defmacro instance-boundp 241,8741
(defun slot-name-lists-from-slots 268,9991
(defun mutate-slots 272,10136
(defun sort-slots 282,10404
(defun add-pv-binding 296,10807
(defun emit-pv-dlap 327,11926
(defun compute-primary-pv-cache-size 351,12997
(defun pv-cache-limit-fn 356,13158
(defun primary-pv-cache-miss 359,13222
(defmethod wrapper-fetcher 388,14284
(defmethod slots-fetcher 391,14362
(defmethod raw-instance-allocator 394,14436

src/pcl/env.lisp,714
(defvar *old-arglist*)35,1216
(defun pcl-arglist 37,1240
(defgeneric describe-object 62,1862
(defvar *old-describe* 66,1925
(defmethod describe-object 82,2404
(defmethod describe-object 87,2524
(defmethod slots-to-inspect 136,4338
(defmethod describe-object 142,4447
(defclass traced-method 184,6106
(defmethod method-lambda-list 191,6312
(defmethod method-specializers 194,6418
(defmethod method-qualifiers 197,6526
(defmethod method-qualifiers 200,6630
(defmethod accessor-method-slot-name 203,6734
(defvar *traced-methods* 206,6854
(defun trace-method 208,6884
(defun untrace-method 222,7324
(defun trace-method-internal 238,7877
(defmacro undefmethod 254,8305
(defun undefmethod-1 259,8458

src/pcl/braid.lisp,1294
(defun early-class-definition 39,1525
(defun canonical-slot-name 43,1718
(defun early-collect-inheritance 46,1794
(defun early-collect-cpl 57,2234
(defun early-collect-slots 65,2546
(defun early-collect-default-initargs 80,3168
(defun bootstrap-get-slot 110,4467
(defun bootstrap-set-slot 114,4621
(defvar *std-class-slots*118,4802
(defvar *bin-class-slots*122,4908
(defvar *std-slotd-slots*126,5014
(defun bootstrap-slot-index 130,5130
(defun bootstrap-meta-braid 143,5488
(defun bootstrap-accessor-definitions 239,9333
(defun bootstrap-initialize-std-class268,10257
(defun bootstrap-initialize-bin-class297,11327
(defun bootstrap-make-slot-definitions 312,11920
(defun bootstrap-make-slot-definition 320,12159
(defun bootstrap-built-in-classes 343,13293
(defun class-of 393,14824
(defun wrapper-of 395,14877
(defun make-built-in-class-subs 406,15129
(defun make-built-in-class-tree 415,15401
(defun make-built-in-wrapper-of-body 421,15598
(defun make-built-in-wrapper-of-body-1 426,15750
(defun make-built-in-wrapper-of-body-2 432,16005
(defun built-in-wrapper-of 446,16406
(defmethod print-object 466,16849
(defmethod print-object 473,17064
(defmethod print-object 476,17158
(defun named-object-print-function 479,17271
(defmethod shared-initialize 511,18145

src/pcl/walk.lisp,6739
(defun unbound-lexical-function 122,5040
(defmacro with-augmented-environment151,6208
(defun with-augmented-environment-internal 158,6417
(defun environment-function 165,6634
(defun environment-macro 171,6781
(defmacro with-augmented-environment182,6959
(defun with-augmented-environment-internal 189,7168
(defun environment-function 209,8004
(defun environment-macro 213,8099
(defmacro with-augmented-environment251,9231
(defun with-augmented-environment-internal 258,9440
(defun environment-function 265,9676
(defun environment-macro 272,9878
(defun %alphalex-p 298,10397
(defun lucid::augment-lexenv-fvars-dummy 305,10555
(defconstant function-contour 308,10680
(defconstant macrolet-contour 309,10713
(defstruct lucid::contour311,10747
(defun add-contour-to-env-shape 315,10793
(defstruct (variable 320,10942
(defconstant function-sfc-contour 325,11054
(defconstant macrolet-sfc-contour 326,11091
(defconstant function-variable-type 327,11128
(defun make-function-variable 329,11168
(defun make-sfc-contour 332,11253
(defun sfc-contour-type 335,11318
(defun sfc-contour-elements 338,11378
(defun add-sfc-contour 341,11442
(defun add-function-contour 344,11557
(defun add-macrolet-contour 347,11682
(defun find-variable-in-contour 350,11791
(defun find-alist-element-in-contour 355,11964
(defun find-macrolet-in-contour 358,12070
(defmacro do-sfc-contours 361,12166
(defmacro with-augmented-environment366,12312
(defun with-augmented-environment-internal 377,12644
(defun environment-function 411,13680
(defun environment-macro 430,14232
(defmacro with-augmented-environment480,15855
(defun environment-function 508,16681
(defun environment-macro 518,17005
(defmacro with-augmented-environment533,17348
(defun with-augmented-environment-internal 538,17543
(defun environment-function 544,17718
(defun environment-macro 547,17763
(defmacro with-augmented-environment565,18207
(defun with-augmented-environment-internal 579,18800
(defun environment-function 605,19787
(defun environment-macro 611,20003
(defmacro with-augmented-environment637,20734
(defun with-augmented-environment-internal 644,20947
(defun environment-function 656,21339
(defun environment-macro 663,21505
(DEFMACRO MACRO-DEF? 710,23171
(DEFMACRO FIND-LOCAL-DEFINITION 718,23516
(defun environment-macro 730,23951
(defun environment-function 740,24351
(defun with-augmented-environment-internal 757,24884
(defmacro with-augmented-environment776,25559
(defmacro with-augmented-environment789,25809
(defun with-augmented-environment-internal 796,26018
(defun lookup-macro-function 806,26431
(defun environment-macro 813,26677
(defmacro with-augmented-environment845,27706
(defun with-augmented-environment-internal 852,27915
(defun environment-function 868,28437
(defun environment-macro 874,28585
(defmacro with-new-definition-in-environment888,28869
(defun convert-macro-to-lambda 910,29565
(defun convert-macro-to-lambda 916,29766
(defmacro walker-environment-bind 934,30395
(defvar *key-to-walker-environment* 940,30592
(defun env-lock 942,30639
(defun walker-environment-bind-1 945,30717
(defun env-walk-function 957,31197
(defun env-walk-form 960,31253
(defun env-declarations 963,31306
(defun env-lexical-variables 966,31363
(defun note-declaration 970,31427
(defun note-lexical-binding 975,31562
(defun VARIABLE-LEXICAL-P 981,31692
(defvar *VARIABLE-DECLARATIONS* 984,31773
(defun VARIABLE-DECLARATION 986,31818
(defun VARIABLE-SPECIAL-P 995,32201
(defvar *globally-special-variables* 1017,33098
(defun variable-globally-special-p 1019,33140
(defmacro get-walker-template-internal 1101,36864
(defmacro define-walker-template1106,37079
(defun get-walker-template 1112,37256
(defun get-implementation-dependent-walker-template 1121,37518
(define-walker-template BLOCK 1130,37651
(define-walker-template CATCH 1131,37721
(define-walker-template COMPILER-LET 1132,37792
(define-walker-template DECLARE 1133,37856
(define-walker-template EVAL-WHEN 1134,37926
(define-walker-template FLET 1135,37998
(define-walker-template FUNCTION 1136,38054
(define-walker-template GO 1137,38111
(define-walker-template IF 1138,38169
(define-walker-template LABELS 1139,38223
(define-walker-template LAMBDA 1140,38281
(define-walker-template LET 1141,38339
(define-walker-template LET* 1142,38394
(define-walker-template MACROLET 1143,38450
(define-walker-template MULTIPLE-VALUE-CALL 1144,38510
(define-walker-template MULTIPLE-VALUE-PROG1 1145,38581
(define-walker-template MULTIPLE-VALUE-SETQ 1146,38654
(define-walker-template MULTIPLE-VALUE-BIND 1147,38726
(define-walker-template PROGN 1148,38797
(define-walker-template PROGV 1149,38863
(define-walker-template QUOTE 1150,38939
(define-walker-template RETURN-FROM 1151,38997
(define-walker-template SETQ 1152,39071
(define-walker-template TAGBODY 1153,39141
(define-walker-template THE 1154,39200
(define-walker-template THROW 1155,39263
(define-walker-template UNWIND-PROTECT 1156,39325
(define-walker-template DO 1164,39528
(define-walker-template DO* 1165,39569
(define-walker-template PROG 1166,39611
(define-walker-template PROG* 1167,39654
(define-walker-template COND 1168,39698
(defun WALK-FORM 1210,40624
(defun NESTED-WALK-FORM 1238,41965
(defun walk-form-internal 1302,44249
(defun walk-template 1341,45803
(defun walk-template-handle-repeat 1388,47276
(defun walk-template-handle-repeat-1 1398,47566
(defun walk-repeat-eval 1419,48334
(defun recons 1425,48497
(defun relist 1431,48622
(defun relist* 1434,48684
(defun relist-internal 1437,48746
(defun walk-declarations 1449,48972
(defun walk-unexpected-declare 1496,50764
(defun walk-arglist 1502,50941
(defun walk-let 1534,52285
(defun walk-let* 1537,52361
(defun walk-prog 1540,52436
(defun walk-prog* 1543,52515
(defun walk-do 1546,52593
(defun walk-do* 1549,52666
(defun walk-let/let* 1552,52738
(defun walk-prog/prog* 1568,53190
(defun walk-do/do* 1595,54087
(defun walk-let-if 1614,54696
(defun walk-multiple-value-bind 1629,55086
(defun walk-bindings-1 1650,55688
(defun walk-bindings-2 1675,56511
(defun walk-lambda 1694,57033
(defun walk-named-lambda 1706,57442
(defun walk-tagbody 1720,57897
(defun walk-tagbody-1 1723,58005
(defun walk-compiler-let 1731,58243
(defun walk-macrolet 1745,58655
(defun walk-flet 1771,59560
(defun walk-labels 1787,60042
(defun walk-if 1803,60542
(defmacro with-lexical-macros 1853,62532
(defun expand-rpush 1857,62725
(defmacro with-rpush 1860,62795
(defmacro take-it-out-for-a-test-walk 1869,63074
(defun take-it-out-for-a-test-walk-1 1872,63163
(defmacro foo 1899,63992
(defmacro bar 1901,64036
(defmacro flet-1 2034,68863
(defmacro labels-1 2035,68895

src/pcl/defsys.lisp,1139
(defvar *the-pcl-package* 60,2557
(defvar *pcl-system-date* 62,2605
(defsystem my-very-own-system147,5164
(defvar *system-directory*)190,6912
(defvar *port*198,7193
(defvar *pathname-extensions*253,9354
(defun get-system 289,11288
(defun set-system 292,11347
(defmacro defsystem 295,11433
(defstruct (module 306,11670
(defun make-modules 316,11956
(defun make-transformations 347,13319
(defun make-compile-transformation 353,13552
(defvar *being-loaded* 364,13998
(defun make-load-transformation 366,14026
(defun make-load-without-dependencies-transformation 378,14564
(defun compile-filter 385,14839
(defun operate-on-system 396,15355
(defun make-source-pathname 501,18717
(defun make-binary-pathname 502,18791
(defun make-pathname-internal 504,18866
(defun load-truename 549,20672
(defvar *pcl-directory*567,21420
(defvar *pcl-directory*574,21697
(defvar *pcl-directory* 589,22200
(defsystem pcl	591,22257
(defun compile-pcl 668,27081
(defun load-pcl 682,27744
(defun bug-report-info 710,28918
(defun rename-pcl 726,29328
(defun edit-pcl 736,29632
(defun hardcopy-pcl 742,29805
(defun mail-pcl 766,30556

src/pcl/cpl.lisp,548
(defmethod compute-class-precedence-list 83,3616
(defstruct (class-precedence-description86,3743
(defun compute-std-cpl 103,4192
(defvar *compute-std-cpl-class->entry-table-size* 116,4673
(defun compute-std-cpl-phase-1 118,4728
(defun compute-std-cpl-phase-2 141,5540
(defun compute-std-cpl-phase-3 153,5903
(defun cpl-error 207,7709
(defun cpl-forward-referenced-class-error 215,7987
(defun find-superclass-chain 241,8917
(defun cpl-inconsistent-error 250,9189
(defun format-cycle-reasons 260,9638
(defun find-cycle-reasons 284,10276

src/pcl/boot.lisp,2566
(defvar *early-functions*82,3442
(defvar *generic-function-fixups*118,4574
(defmacro defgeneric 148,5442
(defun expand-defgeneric 151,5573
(defun load-defgeneric 201,7475
(defmacro DEFMETHOD 214,7826
(defun method-prototype-for-gf 239,8878
(defun expand-defmethod 253,9322
(defun expand-defmethod 280,10221
(defun expand-defmethod-internal311,11255
(defun add-lexical-functions-to-method-lambda 508,18070
(defun make-parameter-references 640,22834
(defvar *method-function-plist* 665,23602
(defun method-function-plist 667,23665
(defun SETF\ 670,23766
(defun method-function-get 673,23893
(defun SETF\ 676,23997
(defun method-function-isl 680,24129
(defun method-function-needs-next-methods-p 683,24221
(defun load-defmethod689,24351
(defun load-defmethod-internal698,24746
(defun make-method-spec 736,26210
(defvar *early-generic-functions* 744,26383
(defun ensure-generic-function 746,26422
(defun generic-clobbers-function 759,26911
(zl:defflavor generic-clobbers-function 769,27436
(zl:defmethod #+Genera 773,27535
(zl:defmethod (sys:proceed 782,27790
(defun ensure-generic-function-using-class 804,28622
(defun early-gf-p 814,28957
(defmacro early-gf-methods 818,29046
(defmacro early-gf-discriminator-code 821,29181
(defmacro real-ensure-gf-internal 825,29277
(defun real-ensure-gf-using-class--generic-function844,29974
(defun real-ensure-gf-using-class--null858,30492
(defun early-make-a-method 872,30912
(defun real-make-a-method911,32350
(defun early-method-function 923,32751
(defun early-method-specializers 940,33582
(defun early-method-qualifiers 951,33986
(defun early-add-named-method 954,34065
(defun add-method 981,34891
(defun remove-method 992,35340
(defun get-method 1004,35837
(defun early-update-discriminator-code 1019,36389
(defun early-get-cpl 1041,37329
(defun early-sort-methods 1046,37480
(defun early-dfun 1060,37934
(defvar *fegf-debug-p* 1105,39558
(defun fix-early-generic-functions 1107,39587
(defun parse-defmethod 1207,43064
(defun parse-specializers 1218,43485
(defun unparse-specializers 1230,43876
(defun parse-method-or-spec 1241,44238
(defun specialized-lambda-list-parameters 1274,45335
(defun specialized-lambda-list-lambda-list 1280,45574
(defun specialized-lambda-list-specializers 1286,45816
(defun specialized-lambda-list-required-parameters 1292,46061
(defun parse-specialized-lambda-list 1298,46343
(defmacro symbol-macrolet 1346,48355
(defmacro with-slots 1357,48701
(defmacro with-accessors 1376,49271
(defun expand-symbol-macrolet-internal 1389,49708

src/pcl/defcombin.lisp,916
(defmacro define-method-combination 34,1189
(defmethod find-method-combination 55,1939
(defclass short-method-combination 74,2503
(define-gf-predicate short-method-combination-p 82,2771
(defun expand-short-defcombin 84,2846
(defun load-short-defcombin 97,3280
(defun do-short-method-combination 120,4115
(defmethod compute-effective-method 138,4774
(defclass long-method-combination 189,6428
(defun expand-long-defcombin 193,6574
(defvar *long-method-combination-functions* 212,7298
(defun load-long-defcombin 214,7373
(defmethod compute-effective-method 238,8296
(defun make-long-method-combination-function250,8606
(defun wrap-method-group-specifier-bindings281,9674
(defun parse-method-group-specifier 332,11584
(defun parse-qualifier-pattern 354,12403
(defun qualifier-check-runtime 363,12761
(defun make-default-method-group-description 372,13075
(defun deal-with-arguments-option 393,13782

src/pcl/slots.lisp,867
(defun get-wrapper 39,1529
(defun get-slots 44,1717
(defun set-wrapper 49,1899
(defun set-slots 57,2119
(defmacro get-slot-value-2 68,2337
(defmacro set-slot-value-2 74,2552
(defun get-class-slot-value-1 79,2711
(defun set-class-slot-value-1 87,3042
(defmethod class-slot-value 97,3333
(defmethod (setf 102,3529
(defun find-slot-definition 108,3740
(defun slot-value 120,4217
(defun set-slot-value 134,4855
(defun slot-boundp 149,5545
(defun slot-makunbound 156,5842
(defun slot-exists-p 163,6151
(defun slot-value-or-default 173,6515
(defmethod slot-value-using-class 182,6699
(defmethod (setf 193,7191
(defmethod slot-boundp-using-class205,7670
(defmethod slot-makunbound-using-class220,8226
(defmethod slot-exists-p-using-class238,8829
(defmethod slot-missing246,8977
(defmethod slot-unbound 259,9463
(defmethod allocate-instance 266,9597

src/pcl/defclass.lisp,687
(defvar *defclass-times* 32,1184
(defvar *defmethod-times* 34,1289
(defvar *defgeneric-times* 35,1330
(defun make-top-level-form 54,2052
(defun make-progn 107,3686
(defmacro DEFCLASS 132,4582
(defun expand-defclass 136,4757
(defun make-initfunction 176,6165
(defun canonicalize-slot-specification 196,6707
(defun canonicalize-defclass-option 238,8092
(defparameter *early-class-definitions* 264,8842
(defun make-early-class-definition266,8887
(defun ecd-class-name 273,9111
(defun ecd-source 274,9159
(defun ecd-metaclass 275,9207
(defun ecd-superclass-names 276,9255
(defun ecd-canonical-slots 277,9303
(defun ecd-other-initargs 278,9351
(defun load-defclass281,9438

src/pcl/std-class.lisp,3918
(define-gf-predicate classp 30,1149
(define-gf-predicate standard-class-p 31,1184
(define-gf-predicate forward-referenced-class-p 32,1238
(defmethod shared-initialize 36,1316
(defmethod documentation 43,1525
(defmethod (setf 46,1619
(defmethod documentation 51,1789
(defmethod (setf 55,1934
(defmethod documentation 60,2114
(defmethod (setf 64,2261
(defmethod class-wrapper 73,2581
(defmethod class-precedence-list 83,2871
(defmethod class-finalized-p 87,3059
(defmethod class-prototype 90,3162
(defmethod class-direct-default-initargs 94,3306
(defmethod class-default-initargs 97,3416
(defmethod class-constructors 100,3512
(defmethod class-slot-cells 103,3600
(defmethod add-direct-subclass 117,4027
(defmethod remove-direct-subclass 122,4188
(defmethod add-method-on-specializer 145,5021
(defmethod remove-method-on-specializer 151,5253
(defmethod specializer-methods 157,5482
(defmethod specializer-generic-functions 161,5606
(defvar *specializer-with-object-methods* 175,6050
(defmethod add-method-on-specializer 177,6124
(defmethod remove-method-on-specializer 188,6533
(defmethod specializer-methods 196,6846
(defmethod specializer-generic-functions 199,7006
(defun real-load-defclass 211,7374
(defun ensure-class 220,7728
(defmethod ensure-class-using-class 223,7835
(defmethod ensure-class-using-class 231,8160
(defun ensure-class-values 239,8514
(defmethod shared-initialize 278,9783
(defmethod shared-initialize 285,9959
(defmethod reinitialize-instance 316,11260
(defmethod reinitialize-instance 324,11592
(defun add-slot-accessors 332,11827
(defun remove-slot-accessors 335,11913
(defun fix-slot-accessors 338,12005
(defun add-direct-subclasses 354,12598
(defun remove-direct-subclasses 359,12754
(defmethod finalize-inheritance 368,12945
(defun update-class 376,13156
(defun update-cpl 392,13789
(defun update-slots 398,14000
(defun compute-storage-info 440,15664
(defun compute-layout 450,16005
(defun compute-class-slots 468,16543
(defun update-inits 475,16738
(defmethod compute-default-initargs 482,16841
(defmethod direct-slot-definition-class 501,17301
(defun make-direct-slotd 505,17450
(defmethod compute-slots 512,17640
(defmethod compute-effective-slot-definition 534,18516
(defmethod effective-slot-definition-class 539,18774
(defmethod compute-effective-slot-definition-initargs543,18929
(defmethod add-reader-method 586,20114
(defmethod add-writer-method 597,20491
(defmethod remove-reader-method 609,20894
(defmethod remove-writer-method 613,21092
(defmethod make-reader-method-function 634,22100
(defmethod make-writer-method-function 637,22222
(defun make-std-reader-method-function 640,22344
(defun make-std-writer-method-function 644,22459
(defmethod inform-type-system-about-class 660,23060
(defun make-type-predicate 665,23306
(defvar *initialization-generic-functions*682,23880
(defmethod maybe-update-constructors689,24058
(defmethod update-constructors 700,24482
(defmethod update-constructors 704,24626
(defmethod compatible-meta-class-change-p 709,24683
(defmethod check-super-metaclass-compatibility 712,24802
(defun force-cache-flushes 722,25144
(defun flush-cache-trap 743,26001
(defmethod make-instances-obsolete 754,26334
(defmethod make-instances-obsolete 766,26776
(defun obsolete-instance-trap 790,27821
(defmacro change-class-internal 857,29797
(defmethod change-class 901,31463
(defmethod change-class 913,31845
(defmethod change-class 925,32251
(defmethod shared-initialize 940,32714
(defmethod class-direct-slots 945,32908
(defmethod class-slots 946,32978
(defmethod class-direct-default-initargs 947,33048
(defmethod class-default-initargs 948,33118
(defmethod check-super-metaclass-compatibility 950,33189
(defmethod check-super-metaclass-compatibility 962,33502
(defmethod add-dependent 971,33622
(defmethod remove-dependent 974,33756
(defmethod map-dependents 978,33937

src/pcl/cache.lisp,2244
(defmacro cache-ref 92,3706
(defun emit-cache-ref 95,3806
(defun cache-size 99,3913
(defun allocate-cache 102,3989
(defmacro cache-lock-count 105,4056
(defun flush-cache-internal 108,4117
(defmacro modify-cache 114,4267
(defvar *free-caches* 130,4814
(defun get-cache 137,5039
(defun free-cache 151,5472
(defun show-free-caches 169,6085
(defconstant wrapper-cache-number-adds-ok 209,7259
(defconstant wrapper-cache-number-length211,7305
(defconstant wrapper-cache-number-mask215,7427
(defvar *get-wrapper-cache-number* 219,7517
(defun get-wrapper-cache-number 221,7574
(defconstant wrapper-layout261,9159
(defun wrapper-field 278,9422
(defun next-wrapper-field 281,9485
(defmacro wrapper-ref 288,9638
(defun emit-wrapper-ref 291,9697
(defmacro wrapper-state 295,9811
(defmacro wrapper-instance-slots-layout 298,9897
(defmacro wrapper-class-slots 301,10015
(defmacro wrapper-class 304,10113
(defmacro make-wrapper-internal 308,10200
(defun make-wrapper 321,10656
(defun invalid-wrapper-p 339,11471
(defvar *previous-nwrappers* 342,11543
(defun invalidate-wrapper 344,11592
(defun check-wrapper-validity 372,12728
(defun compute-line-size 400,13700
(defun compute-cache-parameters 402,13776
(defun compute-primary-cache-location 447,15234
(defun compute-primary-cache-location-from-location 482,16569
(defun emit-1-wrapper-compute-primary-cache-location 496,17051
(defun emit-n-wrapper-compute-primary-cache-location 505,17483
(defun raise-metatype 541,18982
(defun emit-fetch-wrapper 572,20307
(defvar *dfun-arg-symbols* 636,23255
(defun dfun-arg-symbol 638,23315
(defvar *slot-vector-symbols* 642,23474
(defun slot-vector-symbol 644,23545
(defun make-dfun-lambda-list 648,23712
(defun make-dlap-lambda-list 658,23992
(defun make-dfun-call 667,24239
(defun fill-cache 690,24879
(defun default-limit-fn 694,25066
(defvar *local-cache-functions*717,25729
(defmacro with-local-cache-functions 877,31425
(defun pickup-local-cache-functions 888,31936
(defun fill-cache-internal 917,32897
(defun fill-cache-p 940,33698
(defun fill-cache-from-cache-p 947,34047
(defun entry-in-cache-p 956,34390
(defun adjust-cache 974,35043
(defun expand-cache 995,35805
(defun find-free-cache-line 1031,37145

src/pcl/lap.lisp,2491
(defvar *make-lap-closure-generator*)46,2001
(defvar *precompile-lap-closure-generator*)47,2039
(defvar *lap-in-lisp*)48,2083
(defun make-lap-closure-generator 50,2107
(defmacro precompile-lap-closure-generator 54,2300
(defmacro lap-in-lisp 57,2466
(defmacro generating-lap 89,3382
(defmacro generating-lap-in-lisp 93,3577
(defmacro with-lap-registers 102,3880
(defun allocate-register 122,4607
(defun deallocate-register 134,5042
(defvar *precompiling-lap* 140,5316
(defun finalize-lap-generation 142,5349
(defun flatten-lap 160,6048
(defmacro flattening-lap 169,6442
(defvar *lap-operands* 188,7027
(defvar *lap-opcodes* 189,7054
(defvar *lap-emitters* 190,7081
(defun opcode 192,7144
(defun operand 198,7303
(defmacro defopcode 204,7464
(defmacro defoperand 214,7869
(defun load-defopcode 224,8279
(defun load-defoperand 230,8509
(defun defopcode-1 236,8740
(defun defoperand-1 242,8944
(defun check-opcode-arg 248,9150
(defun check-operand-arg 263,9700
(defopcode :break 283,10274
(defopcode :beep 284,10325
(defopcode :print 285,10377
(defopcode :move 288,10424
(defopcode :eq 290,10490
(defopcode :neq 291,10559
(defopcode :fix=292,10628
(defopcode :izerop 293,10697
(defopcode :std-instance-p 295,10732
(defopcode :fsc-instance-p 296,10780
(defopcode :built-in-instance-p 297,10828
(defopcode :structure-instance-p 298,10876
(defopcode :jmp 300,10925
(defopcode :label 302,10968
(defopcode :go 303,10997
(defopcode :return 305,11027
(defopcode :exit-lap-in-lisp 307,11070
(defoperand :reg 312,11137
(defoperand :cvar 313,11175
(defoperand :arg 314,11204
(defoperand :cdr 316,11234
(defoperand :constant 318,11261
(defoperand :std-wrapper 320,11290
(defoperand :fsc-wrapper 321,11329
(defoperand :built-in-wrapper 322,11368
(defoperand :structure-wrapper 323,11407
(defoperand :other-wrapper 324,11446
(defoperand :std-slots 326,11486
(defoperand :fsc-slots 327,11517
(defoperand :cref 329,11549
(defoperand :iref 331,11584
(defoperand :iset 332,11615
(defoperand :i1+ 334,11652
(defoperand :i+ 335,11681
(defoperand :i- 336,11715
(defoperand :ilogand 337,11749
(defoperand :ilogxor 338,11783
(defoperand :ishift 339,11817
(defoperand :lisp 341,11855
(defoperand :lisp-variable 342,11879
(defun make-lap-test-closure-1 350,11985
(defun make-lap-test-closure-2 356,12122
(defun lap-test-1 371,12517
(defun lap-test-2 401,13432
(defun lap-test-3 431,14351
(defun lap-test-4 448,14860
(defun lap-test-5 464,15424

src/pcl/fngen.lisp,731
(defun get-function 41,1680
(defun default-test-converter 48,2018
(defun default-code-converter 51,2104
(defun default-constant-converter 56,2247
(defvar *fgens* 68,2710
(defun store-fgen 70,2731
(defun lookup-fgen 73,2803
(defun make-fgen 76,2895
(defun fgen-test 85,3142
(defun fgen-gensyms 86,3194
(defun fgen-generator 87,3246
(defun fgen-generator-lambda 88,3298
(defun fgen-system 89,3350
(defun get-function-generator 93,3406
(defun get-new-function-generator 100,3654
(defun get-new-function-generator-internal 108,4002
(defun compute-test 114,4211
(defun compute-code 124,4468
(defun compute-constants 138,4868
(defmacro precompile-function-generators 159,5364
(defun load-function-generator 174,5873

src/pcl/combin.lisp,667
(defun make-effective-method-function 30,1150
(defvar *global-effective-method-gensyms* 78,3281
(defvar *rebound-effective-method-gensyms*)79,3327
(defun get-effective-method-gensym 81,3372
(defun make-effective-method-function-internal 91,3697
(defvar *invalid-method-error*141,5672
(defvar *method-combination-error*150,6035
(defun invalid-method-error 173,7060
(defun method-combination-error 177,7207
(defclass method-combination 195,7913
(define-gf-predicate method-combination-p 197,7950
(defclass standard-method-combination199,8013
(defmethod print-object 208,8368
(defun make-call-methods 232,9125
(defmethod compute-effective-method 235,9227

src/pcl/fixup.lisp,35
(defun print-std-instance 38,1354

src/pcl/low.lisp,1104
(defmacro %svref 67,2925
(defsetf %svref 72,3097
(defmacro without-interrupts 97,4012
(defstruct (std-instance 106,4234
(defmacro std-instance-wrapper 113,4442
(defmacro std-instance-slots 114,4506
(defun print-std-instance 116,4569
(defmacro %allocate-instance--class 121,4836
(defmacro %allocate-instance--class-1 126,5010
(defvar *slot-unbound* 141,5715
(defmacro %allocate-static-slot-storage--class 143,5758
(defmacro std-instance-class 147,5883
(defun function-pretty-arglist 163,6466
(defsetf function-pretty-arglist 167,6545
(defun set-function-pretty-arglist 169,6608
(defun set-function-name 189,7457
(defun set-function-name-1 195,7661
(defun intern-function-name 199,7783
(defvar *compiler-present-p* 235,9171
(defvar *compiler-speed*237,9204
(defvar *compiler-reentrant-p*241,9291
(defun in-the-compiler-p 245,9398
(defun compile-lambda 250,9560
(defun compile-lambda-uncompiled 267,10094
(defun compile-lambda-deferred 270,10192
(defmacro precompile-random-code-segments 280,10471
(defun record-definition 287,10638
(defun doctor-dfun-for-the-debugger 291,10729

src/build/library-definitions.lisp,745
(defun make-cl-library 3,74
(defun make-compiler-library 11,289
(defun make-clx-library 18,498
(defun make-eval-bin 25,697
(defun make-development-bin 33,958
(defun make-clx-bin 40,1171
(defun make-hello-bin 47,1381
(defparameter *decl-files*53,1554
(defparameter *function-files*67,1905
(defparameter *cl-other-files*94,2809
(defparameter *compiler-files*115,3371
(defparameter *clx-files*135,3913
(defun compile-cl 160,4442
(defun compile-compiler 175,4896
(defun compile-clx 180,5026
(defun compile-src-files 193,5383
(defun source-newer? 201,5628
(defun newer-file? 204,5724
(define-library :cl 209,5853
(define-library :clx 213,5971
(define-library :com 216,6024
(defun lib-config 219,6082
(defun bin-config 222,6164

src/build/compute-root.lisp,76
(defun compute-root-directory 4,110
(defparameter *root-directory* 12,295

src/clx/package.lisp,69
(defvar *clx-version* 167,10284
(defvar *clx-build-date* 169,10362

src/clx/image.lisp,2607
(defmacro with-image-data-buffer 21,576
(def-clx-class (image 32,995
(defmacro image-name 40,1257
(defmacro image-x-hot 41,1322
(defmacro image-y-hot 42,1389
(defmacro image-red-mask 43,1456
(defmacro image-blue-mask 44,1529
(defmacro image-green-mask 45,1604
(defun print-image 47,1682
(defconstant *empty-data-x* 60,2121
(defconstant *empty-data-z*62,2191
(def-clx-class (image-x 65,2289
(def-clx-class (image-xy 79,3002
(def-clx-class (image-z 85,3209
(defun create-image 92,3458
(defun image-noswap211,7743
(defun image-swap-two-bytes233,8541
(defun image-swap-three-bytes266,9839
(defun image-swap-four-bytes304,11357
(defun image-swap-words352,13279
(defun image-swap-nibbles400,15196
(defun image-swap-nibbles-left429,16214
(defun image-swap-bits488,18535
(defun image-swap-bits-and-two-bytes515,19578
(defun image-swap-bits-and-four-bytes552,21071
(defun image-swap-bits-and-words604,23159
(defun image-swap-function753,28679
(defun read-pixarray-1 793,30040
(defun read-pixarray-4 924,34892
(defun read-pixarray-8 966,36492
(defun read-pixarray-16 991,37322
(defun read-pixarray-24 1018,38237
(defun read-pixarray-32 1046,39186
(defun read-pixarray-internal1075,40169
(defun read-pixarray1111,41637
(defun read-xy-format-image-x1137,42638
(defun read-z-format-image-x1174,44103
(defun read-image-xy 1205,45437
(defun read-image-z 1245,46946
(defun get-image 1282,48417
(defun write-pixarray-1 1404,52811
(defun write-pixarray-4 1465,54716
(defun write-pixarray-8 1501,55998
(defun write-pixarray-16 1524,56807
(defun write-pixarray-24 1552,57816
(defun write-pixarray-32 1582,58903
(defun write-pixarray-internal1614,60072
(defun write-pixarray1651,61581
(defun write-xy-format-image-x-data1677,62590
(defun write-xy-format-image-x1732,65055
(defun write-z-format-image-x-data1774,66539
(defun write-z-format-image-x 1823,68818
(defun write-image-xy 1855,70030
(defun write-image-z 1890,71247
(defun put-image 1925,72579
(defun xy-format-image-x->image-x 2095,79582
(defun z-format-image-x->image-x 2140,81392
(defun image-x->image-x 2181,83115
(defun image-x->image-xy 2191,83447
(defun image-x->image-z 2209,84220
(defun copy-pixarray 2227,84960
(defun image-xy->image-x 2266,86522
(defun image-xy->image-xy 2295,87813
(defun image-xy->image-z 2307,88189
(defun image-z->image-x 2314,88426
(defun image-z->image-xy 2343,89707
(defun image-z->image-z 2350,89944
(defun copy-image 2360,90269
(defun read-bitmap-file 2407,92327
(defun write-bitmap-file 2511,96103
(defun bitmap-image 2595,99499
(defun image-pixmap 2619,100431

src/clx/fonts.lisp,337
(deftype char-info-vec 48,1576
(defun open-font 144,4420
(defun open-font-internal 169,5380
(defun discard-font-info 186,5935
(defun query-font 193,6211
(defun close-font 241,7918
(defun list-font-names 256,8487
(defun list-fonts 270,9029
(defun font-path 331,11286
(defun set-font-path 341,11673
(defsetf font-path 366,12513

src/clx/macros.lisp,7735
(defvar *required-arg-dummy*)31,1147
(defmacro required-arg 34,1260
(defmacro lround 38,1372
(defmacro wround 42,1492
(defmacro define-accessor 74,2510
(define-accessor card32 100,3877
(define-accessor card29 104,3990
(define-accessor card16 108,4103
(define-accessor card8 112,4216
(define-accessor integer 116,4325
(define-accessor int16 120,4437
(define-accessor rgb-val 124,4547
(define-accessor angle 129,4719
(define-accessor bit 134,4890
(define-accessor boolean 144,5238
(define-accessor drawable 149,5369
(define-accessor window 154,5555
(define-accessor pixmap 159,5735
(define-accessor gcontext 164,5915
(define-accessor cursor 169,6101
(define-accessor colormap 174,6281
(define-accessor font 179,6467
(define-accessor keyword 189,6942
(define-accessor resource-id 196,7214
(define-accessor resource-id-or-nil 200,7332
(defmacro char-info-get 206,7530
(define-accessor member8 215,7836
(define-accessor member16 234,8512
(define-accessor member 253,9196
(deftype member-vector 274,9983
(define-accessor member-vector 276,10066
(define-accessor member16-vector 284,10418
(define-accessor member8-vector 292,10778
(define-accessor boole-constant 300,11133
(define-accessor null 314,11661
(define-accessor pad8 318,11830
(define-accessor pad16 322,11953
(define-accessor bit-vector256 326,12077
(define-accessor string 336,12550
(define-accessor sequence 352,13259
(defmacro client-message-event-get-sequence 388,14525
(defmacro client-message-event-put-sequence 404,14976
(define-accessor client-message-sequence 420,15465
(define-accessor code 430,15797
(define-accessor length 435,16012
(deftype data 440,16232
(define-accessor data 442,16258
(defmacro or-expand 469,17234
(define-accessor or 479,17457
(defun mask-get 529,19077
(defun mask-put 563,20171
(define-accessor progn 592,21274
(defmacro type-check 602,21591
(defmacro check-put 608,21733
(defun get-put-items 627,22435
(defmacro with-buffer-request-internal677,24316
(defmacro with-buffer-request694,25051
(defmacro with-buffer-request-and-reply718,26031
(defmacro compare-request 773,28223
(defmacro put-items 785,28908
(defmacro decode-type 788,28993
(defmacro encode-type 803,29485
(defmacro set-decode-type 819,30114
(defsetf decode-type 821,30210
(defconstant *x-createwindow* 828,30279
(defconstant *x-changewindowattributes* 829,30329
(defconstant *x-getwindowattributes* 830,30379
(defconstant *x-destroywindow* 831,30429
(defconstant *x-destroysubwindows* 832,30479
(defconstant *x-changesaveset* 833,30531
(defconstant *x-reparentwindow* 834,30581
(defconstant *x-mapwindow* 835,30631
(defconstant *x-mapsubwindows* 836,30681
(defconstant *x-unmapwindow* 837,30731
(defconstant *x-unmapsubwindows* 838,30781
(defconstant *x-configurewindow* 839,30832
(defconstant *x-circulatewindow* 840,30882
(defconstant *x-getgeometry* 841,30932
(defconstant *x-querytree* 842,30982
(defconstant *x-internatom* 843,31032
(defconstant *x-getatomname* 844,31082
(defconstant *x-changeproperty* 845,31132
(defconstant *x-deleteproperty* 846,31182
(defconstant *x-getproperty* 847,31232
(defconstant *x-listproperties* 848,31282
(defconstant *x-setselectionowner* 849,31332
(defconstant *x-getselectionowner* 850,31384
(defconstant *x-convertselection* 851,31435
(defconstant *x-sendevent* 852,31485
(defconstant *x-grabpointer* 853,31535
(defconstant *x-ungrabpointer* 854,31585
(defconstant *x-grabbutton* 855,31635
(defconstant *x-ungrabbutton* 856,31685
(defconstant *x-changeactivepointergrab* 857,31735
(defconstant *x-grabkeyboard* 858,31794
(defconstant *x-ungrabkeyboard* 859,31844
(defconstant *x-grabkey* 860,31894
(defconstant *x-ungrabkey* 861,31944
(defconstant *x-allowevents* 862,31994
(defconstant *x-grabserver* 863,32044
(defconstant *x-ungrabserver* 864,32099
(defconstant *x-querypointer* 865,32156
(defconstant *x-getmotionevents* 866,32213
(defconstant *x-translatecoords* 867,32273
(defconstant *x-warppointer* 868,32338
(defconstant *x-setinputfocus* 869,32394
(defconstant *x-getinputfocus* 870,32452
(defconstant *x-querykeymap* 871,32510
(defconstant *x-openfont* 872,32566
(defconstant *x-closefont* 873,32619
(defconstant *x-queryfont* 874,32673
(defconstant *x-querytextextents* 875,32723
(defconstant *x-listfonts* 876,32777
(defconstant *x-listfontswithinfo* 877,32828
(defconstant *x-setfontpath* 878,32877
(defconstant *x-getfontpath* 879,32927
(defconstant *x-createpixmap* 880,32977
(defconstant *x-freepixmap* 881,33033
(defconstant *x-creategc* 882,33086
(defconstant *x-changegc* 883,33136
(defconstant *x-copygc* 884,33186
(defconstant *x-setdashes* 885,33236
(defconstant *x-setcliprectangles* 886,33288
(defconstant *x-freegc* 887,33347
(defconstant *x-cleartobackground* 888,33397
(defconstant *x-copyarea* 889,33457
(defconstant *x-copyplane* 890,33507
(defconstant *x-polypoint* 891,33557
(defconstant *x-polyline* 892,33607
(defconstant *x-polysegment* 893,33657
(defconstant *x-polyrectangle* 894,33709
(defconstant *x-polyarc* 895,33762
(defconstant *x-fillpoly* 896,33812
(defconstant *x-polyfillrectangle* 897,33862
(defconstant *x-polyfillarc* 898,33920
(defconstant *x-putimage* 899,33971
(defconstant *x-getimage* 900,34021
(defconstant *x-polytext8* 901,34071
(defconstant *x-polytext16* 902,34124
(defconstant *x-imagetext8* 903,34177
(defconstant *x-imagetext16* 904,34229
(defconstant *x-createcolormap* 905,34281
(defconstant *x-freecolormap* 906,34335
(defconstant *x-copycolormapandfree* 907,34386
(defconstant *x-installcolormap* 908,34443
(defconstant *x-uninstallcolormap* 909,34495
(defconstant *x-listinstalledcolormaps* 910,34548
(defconstant *x-alloccolor* 911,34605
(defconstant *x-allocnamedcolor* 912,34655
(defconstant *x-alloccolorcells* 913,34709
(defconstant *x-alloccolorplanes* 914,34762
(defconstant *x-freecolors* 915,34815
(defconstant *x-storecolors* 916,34865
(defconstant *x-storenamedcolor* 917,34915
(defconstant *x-querycolors* 918,34968
(defconstant *x-lookupcolor* 919,35018
(defconstant *x-createcursor* 920,35068
(defconstant *x-createglyphcursor* 921,35118
(defconstant *x-freecursor* 922,35172
(defconstant *x-recolorcursor* 923,35222
(defconstant *x-querybestsize* 924,35274
(defconstant *x-queryextension* 925,35325
(defconstant *x-listextensions* 926,35376
(defconstant *x-setkeyboardmapping* 927,35426
(defconstant *x-getkeyboardmapping* 928,35477
(defconstant *x-changekeyboardcontrol* 929,35528
(defconstant *x-getkeyboardcontrol* 930,35594
(defconstant *x-bell* 931,35656
(defconstant *x-changepointercontrol* 932,35707
(defconstant *x-getpointercontrol* 933,35758
(defconstant *x-setscreensaver* 934,35809
(defconstant *x-getscreensaver* 935,35869
(defconstant *x-changehosts* 936,35928
(defconstant *x-listhosts* 937,35983
(defconstant *x-changeaccesscontrol* 938,36035
(defconstant *x-changeclosedownmode* 939,36096
(defconstant *x-killclient* 940,36147
(defconstant *x-rotateproperties*	941,36198
(defconstant *x-forcescreensaver*	942,36243
(defconstant *x-setpointermapping* 943,36288
(defconstant *x-getpointermapping* 944,36339
(defconstant *x-setmodifiermapping*	945,36390
(defconstant *x-getmodifiermapping*	946,36437
(defconstant *x-nooperation* 947,36484
(defmacro threaded-atomic-push 951,36572
(defmacro threaded-atomic-pop 964,36920
(defmacro threaded-nconc 976,37261
(defmacro threaded-push 996,37752
(defmacro threaded-pop 1004,37960
(defmacro threaded-enqueue 1013,38197
(defmacro threaded-dequeue 1023,38517
(defmacro threaded-requeue 1034,38820
(defmacro threaded-dolist 1044,39089
(defmacro threaded-delete 1051,39318
(defmacro threaded-length 1074,39925

src/clx/attributes.lisp,3161
(defconstant *attribute-size* 46,1955
(defconstant *geometry-size* 47,1989
(defconstant *context-size* 48,2022
(defvar *window-attributes* 50,2101
(defvar *context-free-list* 53,2238
(defun allocate-context 55,2306
(defun deallocate-context 59,2449
(defmacro state-attributes 63,2604
(defmacro state-attribute-changes 64,2657
(defmacro state-geometry 65,2716
(defmacro state-geometry-changes 66,2767
(defmacro drawable-equal-function 68,2827
(defmacro window-equal-function 73,3014
(defmacro with-state 78,3126
(defun cleanup-state-entry 121,5605
(defun change-window-attribute 138,6178
(defun change-drawable-geometry 165,7368
(defun get-window-attributes-buffer 190,8437
(defun get-drawable-geometry-buffer 220,9728
(defun put-window-attribute-changes 246,10873
(defun put-drawable-geometry-changes 273,11946
(defmacro with-attributes 298,12903
(defmacro with-geometry 309,13420
(defun window-visual 321,14006
(defun window-visual-info 327,14167
(defun window-class 333,14371
(defun set-window-background 339,14584
(defsetf window-background 354,15318
(defun set-window-border 356,15369
(defsetf window-border 369,15889
(defun window-bit-gravity 371,15932
(defun set-window-bit-gravity 378,16137
(defsetf window-bit-gravity 383,16296
(defun window-gravity 385,16349
(defun set-window-gravity 392,16550
(defsetf window-gravity 397,16705
(defun window-backing-store 399,16750
(defun set-window-backing-store 406,16991
(defsetf window-backing-store 411,17148
(defun window-backing-planes 413,17205
(defun set-window-backing-planes 420,17379
(defsetf window-backing-planes 424,17504
(defun window-backing-pixel 426,17563
(defun set-window-backing-pixel 433,17736
(defsetf window-backing-pixel 437,17857
(defun window-save-under 439,17914
(defun set-window-save-under 446,18105
(defsetf window-save-under 450,18232
(defun window-override-redirect 452,18283
(defun set-window-override-redirect 459,18481
(defsetf window-override-redirect 463,18614
(defun window-event-mask 465,18679
(defsetf window-event-mask 472,18850
(defun window-do-not-propagate-mask 479,19074
(defsetf window-do-not-propagate-mask 486,19256
(defun window-colormap 493,19519
(defun set-window-colormap 501,19775
(defsetf window-colormap 506,19927
(defun window-cursor 508,19974
(defun set-window-cursor 514,20122
(defsetf window-cursor 519,20264
(defun window-colormap-installed-p 521,20307
(defun window-all-event-masks 527,20474
(defun window-map-state 533,20635
(defun drawable-root 544,21052
(defun drawable-x 550,21237
(defun set-drawable-x 557,21405
(defsetf drawable-x 561,21508
(defun drawable-y 563,21545
(defun set-drawable-y 570,21713
(defsetf drawable-y 574,21816
(defun drawable-width 576,21853
(defun set-drawable-width 584,22064
(defsetf drawable-width 588,22184
(defun drawable-height 590,22229
(defun set-drawable-height 598,22442
(defsetf drawable-height 602,22566
(defun drawable-depth 604,22613
(defun drawable-border-width 610,22768
(defun set-drawable-border-width 617,22950
(defsetf drawable-border-width 621,23077
(defun set-window-priority 623,23136
(defsetf window-priority 636,23639

src/clx/bufmac.lisp,408
(defmacro write-card8 26,826
(defmacro write-int8 29,950
(defmacro write-card16 34,1079
(defmacro write-int16 42,1363
(defmacro write-card32 50,1654
(defmacro write-int32 58,1938
(defmacro write-card29 66,2229
(defmacro write-char2b 76,2647
(defmacro set-buffer-offset 85,3085
(defmacro advance-buffer-offset 99,3588
(defmacro with-buffer-output 102,3684
(defmacro writing-buffer-chunks 156,5716

src/clx/clx.lisp,3589
(defparameter *version* 84,2821
(defparameter *protocol-major-version* 88,2924
(defparameter *protocol-minor-version* 89,2968
(defparameter *x-tcp-port* 91,3011
(deftype boolean 142,5323
(deftype card32 144,5367
(deftype card29 146,5408
(deftype card24 148,5449
(deftype int32 150,5490
(deftype card16 152,5528
(deftype int16 154,5569
(deftype card8 156,5607
(deftype int8 158,5646
(deftype card4 160,5682
(deftype real 163,5744
(deftype base-char 173,6110
(deftype rgb-val 179,6270
(deftype angle 184,6427
(deftype mask32 186,6478
(deftype mask16 188,6507
(deftype pixel 190,6536
(deftype image-depth 191,6575
(deftype resource-id 193,6617
(deftype keysym 195,6651
(def-clx-class (color 203,6936
(defun print-color 209,7146
(defun make-color 219,7463
(defun color-rgb 224,7649
(def-clx-class (bitmap-format 229,7811
(def-clx-class (pixmap-format 234,7959
(defparameter *atom-cache-size* 239,8129
(defparameter *resource-id-map-size* 240,8166
(def-clx-class (display 242,8209
(defun print-display-name 330,12804
(defun print-display 341,13154
(def-clx-class (drawable 354,13592
(defun print-drawable 360,13781
(def-clx-class (window 368,14071
(def-clx-class (pixmap 372,14176
(def-clx-class (visual-info 376,14281
(defun print-visual-info 389,14752
(def-clx-class (colormap 401,15242
(defun print-colormap 407,15435
(def-clx-class (cursor 418,15873
(defun print-cursor 423,16014
(deftype xatom 434,16451
(defconstant *predefined-atoms*436,16491
(deftype stringable 458,17487
(deftype fontable 460,17532
(deftype timestamp 464,17608
(defconstant *bit-gravity-vector*466,17650
(deftype bit-gravity 471,17798
(defconstant *win-gravity-vector*475,17938
(deftype win-gravity 480,18085
(deftype grab-status 484,18224
(deftype alist 489,18340
(deftype repeat-seq 496,18584
(deftype point-seq 498,18634
(deftype seg-seq 500,18692
(deftype rect-seq 502,18772
(deftype arc-seq 504,18860
(deftype gcontext-state 508,18987
(def-clx-class (gcontext 510,19031
(defun print-gcontext 522,19523
(defconstant *event-mask-vector*530,19813
(deftype event-mask-class 538,20276
(deftype event-mask 546,20747
(defconstant *pointer-event-mask-vector*549,20832
(deftype pointer-event-mask-class 555,21114
(deftype pointer-event-mask 561,21386
(defconstant *device-event-mask-vector*564,21490
(deftype device-event-mask-class 569,21716
(deftype device-event-mask 574,21944
(defconstant *state-mask-vector*577,22046
(deftype modifier-key 581,22200
(deftype modifier-mask 584,22296
(deftype state-mask-key 587,22411
(defconstant *gcontext-components*590,22520
(deftype gcontext-key 597,22832
(deftype event-key 604,23121
(deftype error-key 614,23692
(deftype draw-direction 618,23885
(defconstant *boole-vector*621,23956
(deftype boole-constant 627,24195
(def-clx-class (screen 633,24425
(defun print-screen 653,25206
(defun screen-root-visual 671,25922
(deftype font-props 677,26125
(def-clx-class (font-info 679,26156
(def-clx-class (font 695,26839
(defun print-font 707,27412
(defun font-id 720,27835
(defun font-font-info 725,27963
(defun font-char-infos 729,28056
(defun make-font 734,28197
(defun font-property 783,29559
(defun encode-mask 815,30619
(defun decode-mask 832,31331
(defun encode-event-mask 847,31767
(defun make-event-mask 853,31990
(defun make-event-keys 860,32294
(defun encode-device-event-mask 866,32504
(defun encode-modifier-mask 873,32795
(defun encode-state-mask 880,33103
(defun make-state-mask 886,33378
(defun make-state-keys 892,33611
(defun encode-pointer-event-mask 897,33776

src/clx/input2.lisp,2473
(defun make-error 51,1816
(defun report-error 64,2338
(defun request-name 95,3717
(defun report-request-error 103,3999
(define-condition request-error 115,4643
(define-condition resource-error 125,5185
(define-condition unknown-error 132,5475
(define-condition access-error 139,5763
(define-condition alloc-error 141,5815
(define-condition atom-error 143,5866
(define-condition colormap-error 150,6131
(define-condition cursor-error 152,6186
(define-condition drawable-error 154,6239
(define-condition font-error 156,6294
(define-condition gcontext-error 158,6345
(define-condition id-choice-error 160,6400
(define-condition illegal-request-error 162,6456
(define-condition length-error 164,6517
(define-condition match-error 166,6569
(define-condition name-error 168,6620
(define-condition pixmap-error 170,6670
(define-condition value-error 172,6723
(define-condition window-error 179,6980
(define-condition implementation-error 181,7032
(define-condition x-type-error 186,7218
(define-condition closed-display 195,7551
(define-condition lookup-error 202,7800
(define-condition connection-failure 215,8332
(define-condition reply-length-error 230,9096
(define-condition reply-timeout 241,9665
(define-condition sequence-error 250,10042
(define-condition unexpected-reply 261,10569
(define-condition missing-parameter 275,11286
(define-condition invalid-font 286,11746
(define-condition device-busy 292,11958
(define-condition unimplemented-event 299,12192
(define-condition undefined-event 308,12594
(define-condition absent-extension 317,12970
(define-condition inconsistent-parameters 326,13330
(defun get-error-key 333,13614
(defmacro define-error 352,14377
(defun decode-core-error 372,15343
(defun decode-resource-error 398,16274
(define-error unknown-error401,16370
(define-error request-error 406,16518
(define-error value-error	408,16588
(define-error window-error 412,16729
(define-error pixmap-error 414,16808
(define-error atom-error	416,16887
(define-error cursor-error 420,17020
(define-error font-error 422,17099
(define-error match-error 424,17174
(define-error drawable-error 426,17244
(define-error access-error 428,17335
(define-error alloc-error 430,17423
(define-error colormap-error 432,17497
(define-error gcontext-error 434,17572
(define-error id-choice-error 436,17655
(define-error name-error 438,17754
(define-error length-error 440,17838
(define-error implementation-error 443,17946

src/clx/buffer.lisp,4015
(defconstant *requestsize* 55,2131
(defmacro with-buffer 59,2283
(defun with-buffer-function 86,3441
(defmacro read-card8 100,3936
(defmacro read-int8 103,4036
(defmacro read-card16 106,4134
(defmacro read-int16 112,4370
(defmacro read-card32 118,4603
(defmacro read-int32 124,4839
(defmacro read-card29 130,5072
(defmacro event-code 136,5308
(defmacro reading-event 141,5475
(defmacro with-buffer-input 149,5858
(defun make-buffer 205,8009
(defun make-reply-buffer 227,8702
(defun buffer-ensure-size 247,9279
(defun buffer-pad-request 267,10007
(defun buffer-new-request-number 280,10425
(defun with-buffer-request-function 285,10597
(defun with-buffer-request-function-nolock 300,11179
(defstruct (pending-command 314,11736
(defun with-buffer-request-and-reply-function320,11959
(defun buffer-write 355,13330
(defun buffer-flush 366,13737
(defmacro with-buffer-flush-inhibited 379,14251
(defun buffer-force-output 389,14676
(defun close-buffer 400,15043
(defun buffer-input 413,15498
(defun buffer-input-wait 434,16221
(defun buffer-listen 451,16777
(defun read-sequence-string 464,17270
(defun read-sequence-char 490,18180
(defun read-list-card8 516,19108
(defun read-list-card8-with-transform 529,19576
(defun read-simple-array-card8 547,20277
(defun read-simple-array-card8-with-transform 555,20649
(defun read-vector-card8 573,21417
(defun read-vector-card8-with-transform 586,21893
(defun read-sequence-card8 604,22603
(defun read-sequence-int8 637,23841
(defun read-list-card16 663,24765
(defun read-list-card16-with-transform 676,25235
(defun read-simple-array-card16 694,25940
(defun read-simple-array-card16-with-transform 710,26628
(defun read-vector-card16 728,27404
(defun read-vector-card16-with-transform 744,28035
(defun read-sequence-card16 762,28749
(defun read-sequence-int16 794,29992
(defun read-list-card32 820,30932
(defun read-list-card32-with-transform 833,31402
(defun read-simple-array-card32 851,32107
(defun read-simple-array-card32-with-transform 867,32795
(defun read-vector-card32 885,33571
(defun read-vector-card32-with-transform 901,34202
(defun read-sequence-card32 919,34916
(defun read-sequence-int32 951,36157
(defun write-sequence-char977,37094
(defun write-list-card8 998,37890
(defun write-list-card8-with-transform 1012,38331
(defun write-simple-array-card8 1030,38980
(defun write-simple-array-card8-with-transform 1044,39440
(defun write-vector-card8 1063,40126
(defun write-vector-card8-with-transform 1077,40532
(defun write-sequence-card81096,41172
(defun write-sequence-int81123,42189
(defun write-list-card16 1144,42978
(defun write-list-card16-with-transform 1158,43416
(defun write-simple-array-card16 1177,44089
(defun write-simple-array-card16-with-transform 1200,44840
(defun write-vector-card16 1221,45634
(defun write-vector-card16-with-transform 1244,46341
(defun write-sequence-card161265,47086
(defun write-list-int16 1292,48083
(defun write-list-int16-with-transform 1306,48517
(defun write-simple-array-int16 1325,49185
(defun write-simple-array-int16-with-transform 1348,49930
(defun write-vector-int16 1369,50716
(defun write-vector-int16-with-transform 1392,51419
(defun write-sequence-int161413,52159
(defun write-list-card32 1440,53148
(defun write-list-card32-with-transform 1454,53586
(defun write-simple-array-card32 1473,54259
(defun write-simple-array-card32-with-transform 1496,55010
(defun write-vector-card32 1517,55804
(defun write-vector-card32-with-transform 1540,56511
(defun write-sequence-card321561,57256
(defun write-sequence-int321587,58270
(defun read-bitvector256 1606,59037
(defun write-bitvector256 1631,59950
(defun write-list-char2b 1650,60593
(defun write-list-char2b-with-transform 1663,60981
(defun write-simple-array-char2b 1681,61604
(defun write-simple-array-char2b-with-transform 1696,62106
(defun write-vector-char2b 1716,62848
(defun write-vector-char2b-with-transform 1731,63306
(defun write-sequence-char2b1751,63999

src/clx/translate.lisp,1716
(defvar *keysym-sets* 21,628
(defun define-keysym-set 23,700
(defun keysym-set 41,1450
(defmacro keysym 51,1727
(defvar *keysym->character-map*70,2464
(defmacro keysym-mapping-object 76,2725
(defmacro keysym-mapping-translate 80,2831
(defmacro keysym-mapping-lowercase 85,3046
(defmacro keysym-mapping-modifiers 90,3236
(defmacro keysym-mapping-mask 96,3475
(defvar *default-keysym-translate-mask*102,3741
(defun define-keysym 107,3980
(defun undefine-keysym 185,7606
(defun keysym-downcase 209,8682
(defun keysym-uppercase-alphabetic-p 216,9006
(defun character->keysyms 225,9358
(defconstant character-set-switch-keysym 247,10243
(defconstant left-shift-keysym 248,10302
(defconstant right-shift-keysym 249,10351
(defconstant left-control-keysym 250,10401
(defconstant right-control-keysym 251,10452
(defconstant caps-lock-keysym 252,10504
(defconstant shift-lock-keysym 253,10552
(defconstant left-meta-keysym 254,10601
(defconstant right-meta-keysym 255,10649
(defconstant left-alt-keysym 256,10698
(defconstant right-alt-keysym 257,10745
(defconstant left-super-keysym 258,10793
(defconstant right-super-keysym 259,10842
(defconstant left-hyper-keysym 260,10892
(defconstant right-hyper-keysym 261,10941
(defun display-keyboard-mapping 268,11122
(defun keycode->keysym 274,11399
(defun keysym->character 294,12244
(defun mapping-matches-p 315,13176
(defun default-keysym-index 359,14989
(defun keysym-shift-p 380,15834
(defun keycode->character 435,18384
(defun get-display-modifier-mapping 460,19533
(defun state-keysymp 477,20486
(defun mapping-notify 487,20859
(defun keysym-in-map-p 501,21381
(defun character-in-map-p 522,22120
(defun keysym->keycodes 543,22885

src/clx/depdefs.lisp,1814
(defmacro with-vector 47,1738
(defmacro within-definition 55,1968
(defconstant *clx-cached-types*72,2916
(defmacro resource-id-map-test 81,3026
(defmacro atom-cache-map-test 83,3069
(defmacro keysym->character-map-test 85,3110
(deftype overlap16 109,4052
(deftype overlap32 110,4095
(deftype overlap16 115,4203
(deftype overlap32 116,4246
(deftype buffer-bytes 119,4292
(deftype buffer-words 123,4389
(deftype buffer-longs 124,4435
(deftype array-index 131,4723
(defun make-index-typed 136,4830
(defun make-index-op 139,4917
(defmacro index+ 154,5327
(defmacro index-logand 155,5388
(defmacro index-logior 156,5460
(defmacro index- 157,5532
(defmacro index* 158,5593
(defmacro index1+ 160,5655
(defmacro index1- 161,5717
(defmacro index-incf 163,5780
(defmacro index-decf 165,5873
(defmacro index-min 168,5967
(defmacro index-max 169,6033
(defmacro index-floor 171,6100
(defmacro index-ceiling 173,6187
(defmacro index-truncate 175,6278
(defmacro index-mod 178,6372
(defmacro index-ash 181,6456
(defmacro index-plusp 184,6536
(defmacro index-zerop 185,6603
(defmacro index-evenp 186,6670
(defmacro index-oddp 187,6737
(defmacro index> 189,6805
(defmacro index=191,6884
(defmacro index< 193,6963
(defmacro index>=195,7042
(defmacro index<=197,7123
(defconstant *replysize* 203,7240
(defvar *empty-bytes* 206,7335
(defvar *empty-words* 210,7466
(defvar *empty-longs* 215,7599
(defstruct (reply-buffer 219,7701
(defconstant *buffer-text16-size* 234,8249
(deftype buffer-text16 235,8288
(defvar *def-clx-class-use-defclass* 254,8798
(defmacro def-clx-class 262,9145
(def-clx-class (buffer 376,12985
(defconstant *image-bit-lsb-first-p*427,15107
(defconstant *image-byte-lsb-first-p*431,15204
(defconstant *image-unit* 435,15302
(defconstant *image-pad* 437,15333

src/clx/input1.lisp,3295
(defvar *event-free-list* 20,566
(defconstant *max-events* 23,666
(defvar *event-key-vector* 24,770
(defvar *event-macro-vector* 27,891
(defvar *event-handler-vector* 29,1026
(defvar *event-send-vector* 31,1163
(defun allocate-event 34,1298
(defun deallocate-event 38,1434
(defparameter *first-extension-event-code* 70,2797
(defvar *extensions* 72,2845
(defmacro define-extension 74,2922
(defun canonicalize-event-name 91,3744
(defun allocate-extension-event-code 99,3987
(defun get-internal-event-code 119,4870
(defun get-external-event-code 141,5787
(defmacro extension-opcode 154,6294
(defun initialize-extensions 163,6735
(defvar *pending-command-free-list* 203,8350
(defun start-pending-command 205,8392
(defun stop-pending-command 222,9213
(defvar *reply-buffer-free-lists* 248,10200
(defun allocate-reply-buffer 250,10273
(defun deallocate-reply-buffer 260,10647
(defun read-error-input 273,11095
(defun read-reply-input 306,12488
(defun read-event-input 345,14017
(defun note-input-complete 355,14354
(defun report-asynchronous-errors 371,15089
(defun wait-for-event 400,16090
(defun read-reply 430,17239
(defun event-listen 455,18118
(defun queue-event 485,19363
(defun enqueue-event 523,20900
(defmacro define-event 545,21732
(define-event :key-press 554,22101
(define-event :key-release 555,22129
(define-event :button-press 556,22159
(define-event :button-release 557,22190
(define-event :motion-notify 558,22223
(define-event :enter-notify 559,22255
(define-event :leave-notify 560,22286
(define-event :focus-in 561,22317
(define-event :focus-out 562,22344
(define-event :keymap-notify 563,22373
(define-event :exposure 564,22406
(define-event :graphics-exposure 565,22434
(define-event :no-exposure 566,22471
(define-event :visibility-notify 567,22502
(define-event :create-notify 568,22539
(define-event :destroy-notify 569,22572
(define-event :unmap-notify 570,22606
(define-event :map-notify 571,22638
(define-event :map-request 572,22668
(define-event :reparent-notify 573,22699
(define-event :configure-notify 574,22734
(define-event :configure-request 575,22770
(define-event :gravity-notify 576,22807
(define-event :resize-request 577,22841
(define-event :circulate-notify 578,22875
(define-event :circulate-request 579,22911
(define-event :property-notify 580,22948
(define-event :selection-clear 581,22983
(define-event :selection-request 582,23018
(define-event :selection-notify 583,23055
(define-event :colormap-notify 584,23091
(define-event :client-message 585,23126
(define-event :mapping-notify 586,23160
(defmacro declare-event 589,23197
(defun check-consistency 691,27391
(defun event-loop-setup 895,32523
(defun event-loop-step-before 919,33487
(defun dequeue-event 937,34313
(defun event-loop-step-after966,35415
(defmacro event-loop 985,36207
(defun discard-current-event 1021,37654
(defun process-event 1051,38852
(defun make-event-handlers 1101,41416
(defun event-handler 1108,41737
(defun set-event-handler 1115,41976
(defsetf event-handler 1122,42232
(defmacro event-case 1128,42298
(defmacro event-cond 1159,44120
(defun get-event-code 1211,46365
(defun universal-event-get-macro 1218,46575
(defmacro event-dispatch 1225,46859
(defmacro binding-event-values 1282,49097

src/clx/debug/event-test.lisp,85
(defstruct event5,142
(defun process-input 52,682
(defun event-case-test 222,6195

src/clx/debug/debug.lisp,168
(defun display-listen 32,817
(defun readflush 35,893
(defun check-buffer 43,1227
(defun check-finish 65,1865
(defun check-force 69,1956
(defun clear-next 73,2045

src/clx/debug/trace.lisp,719
(defun trace-display 50,1851
(defun suspend-display-tracing 60,2191
(defun resume-display-tracing 68,2523
(defun untrace-display 76,2824
(defun bind-io-hooks 85,3164
(defun unbind-io-hooks 104,4046
(defun byte-ref16 115,4499
(defun byte-ref32 127,4818
(defun trace-write-hook 153,5532
(defun trace-read-hook 198,7366
(defun trace-more-info 225,8503
(defun show-trace 231,8655
(defun display-trace 275,10081
(defun find-trace 278,10144
(defun describe-error 286,10469
(defun trace-error-print 295,10761
(defun describe-request 345,12311
(defun describe-reply 359,12865
(defun event-number 368,13144
(defun describe-event 376,13391
(defun trace-event-print 401,14393
(defun describe-trace 420,15029

src/clx/debug/util.lisp,314
(defun display-root 37,874
(defun display-black 38,952
(defun display-white 39,1038
(defun report-events 41,1125
(defun describe-window 47,1303
(defun describe-gc 84,2510
(defun degree 115,3260
(defun radian 118,3311
(defun display-refresh 121,3370
(defun root-tree 136,3977
(defun window-tree 143,4167

src/clx/debug/keytrans.lisp,504
(defun list-missing-keysyms 23,668
(defun list-multiple-keysyms 29,880
(defun check-lowercase-keysyms 37,1228
(defun print-all-keysyms 71,2633
(defun keysym-mappings 85,3094
(defun print-keysym-mappings 109,4214
(defun print-keysym-mappings 116,4468
(defun keysym-test 135,5137
(defun keysym-echo 180,6536
(defun print-keymap 234,8446
(defun define-keysym-test 244,8698
(define-keysym-test :modifiers 263,9636
(define-keysym-test :modifiers 264,9699
(define-keysym-test :modifiers 265,9774

src/clx/debug/describe.lisp,217
(defparameter *request-parameters* 25,710
(defmacro x-request 27,785
(defun print-history-description 35,1140
(defun print-value 87,2713
(defparameter *create-bitmask*136,4166
(defconstant *gc-bitmask*609,13344

src/clx/manager.lisp,1764
(defun wm-name 23,665
(defsetf wm-name 28,845
(defun set-string-property 31,928
(defun wm-icon-name 38,1168
(defsetf wm-icon-name 44,1360
(defun wm-client-machine 47,1453
(defsetf wm-client-machine 53,1655
(defun get-wm-class 56,1758
(defun set-wm-class 71,2363
(defun wm-command 86,2839
(defsetf wm-command 101,3391
(defun set-wm-command 102,3427
(def-clx-class (wm-hints)122,4111
(defun wm-hints 135,4652
(defsetf wm-hints 142,4897
(defun set-wm-hints 143,4929
(defun decode-wm-hints 150,5149
(defun encode-wm-hints 188,6601
(def-clx-class (wm-size-hints)233,8566
(defun wm-normal-hints 256,9612
(defsetf wm-normal-hints 261,9820
(defun set-wm-normal-hints 262,9866
(defun wm-zoom-hints 270,10121
(defsetf wm-zoom-hints 276,10338
(defun set-wm-zoom-hints 278,10393
(defun decode-wm-size-hints 285,10631
(defun encode-wm-size-hints 327,12650
(defun icon-sizes 393,15630
(defsetf icon-sizes 407,16097
(defun set-icon-sizes 408,16133
(defun wm-protocols 423,16720
(defsetf wm-protocols 427,16875
(defun set-wm-protocols 428,16915
(defun wm-colormap-windows 438,17222
(defsetf wm-colormap-windows 443,17412
(defun set-wm-colormap-windows 444,17466
(defun transient-for 452,17746
(defsetf transient-for 456,17934
(defun set-transient-for 457,17976
(defun set-wm-properties 465,18264
(defun set-standard-properties 568,23671
(defun iconify-window 575,23904
(defun withdraw-window 583,24224
(def-clx-class (standard-colormap 596,24649
(defun rgb-colormaps 605,25025
(defsetf rgb-colormaps 629,26141
(defun set-rgb-colormaps 630,26183
(defun get-standard-colormap 671,27863
(defun set-standard-colormap 689,28705
(defun cut-buffer 709,29585
(define-setf-method cut-buffer 733,30705
(defun rotate-cut-buffers 774,32149

src/clx/resource.lisp,1214
(defstruct (resource-database 26,830
(defun print-resource-database 37,1228
(defun make-resource-database 49,1700
(defun resource-database-timestamp 53,1856
(defun incf-resource-database-timestamp 57,1987
(defun print-db 67,2343
(defun print-search-table 83,2888
(defparameter *uppercase-resource-symbols* 99,3346
(defun resource-key 101,3395
(defun stringable-equal 115,3851
(defun add-resource 147,4808
(defun delete-resource 185,6209
(defun delete-resource-internal 191,6421
(defun get-resource 229,7840
(defun get-entry-lookup 245,8590
(defun get-entry 261,9118
(defun get-search-resource 294,10185
(defvar *get-table-result*)319,11282
(defun get-search-table 321,11311
(defun get-tables-lookup 352,12522
(defun get-tables 376,13405
(defun map-resource 404,14347
(defun merge-resources 446,16046
(defun char-memq 456,16332
(defmacro resource-with-open-file 461,16458
(defun read-resources 476,16954
(defun parse-resource 522,18906
(defun write-resources 560,20046
(defun wm-resources 592,21325
(defun set-wm-resources 613,22294
(defun root-resources 630,23065
(defun set-root-resources 655,24209
(defsetf root-resources 677,25169
(defun initialize-resource-database 679,25214

src/clx/display.lisp,1028
(defun initialize-resource-allocator 25,681
(defun resourcealloc 37,1168
(defmacro allocate-resource-id 45,1447
(defmacro deallocate-resource-id 53,1745
(defun deallocate-resource-id-internal 58,1951
(defun lookup-resource-id 61,2054
(defun save-id 65,2193
(defun id-atom 115,3823
(defun atom-id 122,4041
(defun set-atom-id 130,4318
(defsetf atom-id 141,4711
(defun initialize-predefined-atoms 143,4742
(defun visual-info 148,4928
(defmacro with-display 168,5593
(defmacro with-event-queue 184,6489
(defun with-event-queue-function 206,7402
(defmacro with-event-queue-internal 217,7782
(defun open-display 225,8193
(defun display-force-output 262,9703
(defun close-display 268,9919
(defun display-connect 273,10078
(defun display-protocol-version 420,16212
(defun display-vendor 426,16420
(defun display-nscreens 432,16600
(defsetf display-error-handler 437,16752
(defvar *inside-display-after-function* 467,18140
(defun display-invoke-after-function 469,18186
(defun display-finish-output 477,18549

src/clx/graphics.lisp,456
(defvar *inhibit-appending* 23,659
(defun draw-point 25,693
(defun draw-points 76,2479
(defun draw-line 87,2915
(defun draw-lines 139,4798
(defun fill-polygon 154,5444
(defun draw-segments 168,6049
(defun draw-rectangle 178,6447
(defun draw-rectangles 232,8404
(defun draw-arc 245,8899
(defun draw-arcs-list 302,10936
(defun draw-arcs-vector 333,12101
(defun draw-arcs 365,13405
(defun put-raw-image 379,13989
(defun get-raw-image 410,15209

src/clx/requests2.lisp,1877
(defun set-input-focus 21,634
(defun input-focus 31,1070
(defun query-keymap 40,1378
(defun create-pixmap 49,1689
(defun free-pixmap 71,2432
(defun clear-area 78,2676
(defun copy-area 92,3242
(defun copy-plane 103,3644
(defun create-colormap 116,4096
(defun free-colormap 134,4796
(defun copy-colormap-and-free 141,5064
(defun install-colormap 154,5556
(defun uninstall-colormap 159,5728
(defun installed-colormaps 164,5904
(defun alloc-color 177,6424
(defun alloc-color-cells 213,7508
(defun alloc-color-planes 231,8294
(defun free-colors 251,9100
(defun store-color 260,9419
(defun store-colors 293,10361
(defun query-colors 311,11141
(defun lookup-color 329,11849
(defun create-cursor 349,12453
(defun create-glyph-cursor 378,13430
(defun free-cursor 410,14627
(defun recolor-cursor 417,14871
(defun query-best-cursor 430,15287
(defun query-best-tile 447,15885
(defun query-best-stipple 460,16270
(defun query-extension 473,16658
(defun list-extensions 488,17111
(defun change-keyboard-control 498,17487
(defun keyboard-control 519,18450
(defun bell 543,19386
(defun pointer-mapping 550,19696
(defun set-pointer-mapping 560,20086
(defsetf pointer-mapping 572,20469
(defun change-pointer-control 574,20516
(defun pointer-control 611,21980
(defun set-screen-saver 620,22280
(defun screen-saver 633,22962
(defun activate-screen-saver 645,23360
(defun reset-screen-saver 650,23504
(defun add-access-host 655,23645
(defun remove-access-host 665,24200
(defun change-access-host 675,24756
(defun access-hosts 689,25317
(defun access-control 717,26432
(defun set-access-control 724,26670
(defsetf access-control 731,26883
(defun close-down-mode 733,26928
(defun set-close-down-mode 740,27167
(defsetf close-down-mode 749,27552
(defun kill-client 751,27599
(defun kill-temporary-clients 757,27791
(defun no-operation 762,27937

src/clx/keysyms.lisp,3760
(define-keysym-set :latin-1	23,675
(define-keysym-set :latin-2	24,732
(define-keysym-set :latin-3	25,789
(define-keysym-set :latin-4	26,846
(define-keysym-set :kana	27,903
(define-keysym-set :arabic	28,957
(define-keysym-set :cryllic	29,1013
(define-keysym-set :greek	30,1070
(define-keysym-set :tech	31,1125
(define-keysym-set :special	32,1179
(define-keysym-set :publish	33,1236
(define-keysym-set :apl	34,1295
(define-keysym-set :hebrew	35,1351
(define-keysym-set :keyboard	36,1409
(define-keysym :character-set-switch 38,1472
(define-keysym :left-shift 39,1538
(define-keysym :right-shift 40,1584
(define-keysym :left-control 41,1632
(define-keysym :right-control 42,1682
(define-keysym :caps-lock 43,1734
(define-keysym :shift-lock 44,1778
(define-keysym :left-meta 45,1824
(define-keysym :right-meta 46,1868
(define-keysym :left-alt 47,1914
(define-keysym :right-alt 48,1956
(define-keysym :left-super 49,2000
(define-keysym :right-super 50,2046
(define-keysym :left-hyper 51,2094
(define-keysym :right-hyper 52,2140
(define-keysym #\space 54,2189
(define-keysym #\! 55,2217
(define-keysym #\" 56,2241
(define-keysym #\# 57,2265
(define-keysym #\$ 58,2289
(define-keysym #\% 59,2313
(define-keysym #\& 60,2337
(define-keysym #\' 61,2361
(define-keysym #\(62,2385
(define-keysym #\)63,2409
(define-keysym #\* 64,2433
(define-keysym #\+ 65,2457
(define-keysym #\,66,2481
(define-keysym #\- 67,2505
(define-keysym #\. 68,2529
(define-keysym #\/ 69,2553
(define-keysym #\0 70,2577
(define-keysym #\1 71,2601
(define-keysym #\2 72,2625
(define-keysym #\3 73,2649
(define-keysym #\4 74,2673
(define-keysym #\5 75,2697
(define-keysym #\6 76,2721
(define-keysym #\7 77,2745
(define-keysym #\8 78,2769
(define-keysym #\9 79,2793
(define-keysym #\: 80,2817
(define-keysym #\;81,2841
(define-keysym #\< 82,2865
(define-keysym #\=83,2889
(define-keysym #\> 84,2913
(define-keysym #\? 85,2937
(define-keysym #\@ 86,2961
(define-keysym #\A 87,2985
(define-keysym #\B 88,3024
(define-keysym #\C 89,3063
(define-keysym #\D 90,3102
(define-keysym #\E 91,3141
(define-keysym #\F 92,3180
(define-keysym #\G 93,3219
(define-keysym #\H 94,3258
(define-keysym #\I 95,3297
(define-keysym #\J 96,3336
(define-keysym #\K 97,3375
(define-keysym #\L 98,3414
(define-keysym #\M 99,3453
(define-keysym #\N 100,3492
(define-keysym #\O 101,3531
(define-keysym #\P 102,3570
(define-keysym #\Q 103,3609
(define-keysym #\R 104,3648
(define-keysym #\S 105,3687
(define-keysym #\T 106,3726
(define-keysym #\U 107,3765
(define-keysym #\V 108,3804
(define-keysym #\W 109,3843
(define-keysym #\X 110,3882
(define-keysym #\Y 111,3921
(define-keysym #\Z 112,3960
(define-keysym #\[ 113,3999
(define-keysym #\\ 114,4023
(define-keysym #\] 115,4047
(define-keysym #\^ 116,4071
(define-keysym #\_ 117,4095
(define-keysym #\` 118,4119
(define-keysym #\a 119,4143
(define-keysym #\b 120,4167
(define-keysym #\c 121,4191
(define-keysym #\d 122,4215
(define-keysym #\e 123,4239
(define-keysym #\f 124,4263
(define-keysym #\g 125,4287
(define-keysym #\h 126,4311
(define-keysym #\i 127,4335
(define-keysym #\j 128,4359
(define-keysym #\k 129,4383
(define-keysym #\l 130,4407
(define-keysym #\m 131,4431
(define-keysym #\n 132,4455
(define-keysym #\o 133,4479
(define-keysym #\p 134,4503
(define-keysym #\q 135,4527
(define-keysym #\r 136,4551
(define-keysym #\s 137,4575
(define-keysym #\t 138,4599
(define-keysym #\u 139,4623
(define-keysym #\v 140,4647
(define-keysym #\w 141,4671
(define-keysym #\x 142,4695
(define-keysym #\y 143,4719
(define-keysym #\z 144,4743
(define-keysym #\{ 145,4767
(define-keysym #\| 146,4791
(define-keysym #\} 147,4815
(define-keysym #\~ 148,4839

src/clx/gcontext.lisp,2161
(defconstant *gcontext-fast-change-length* 50,1934
(deftype gcmask 89,3279
(deftype xgcmask 91,3349
(defstruct (gcontext-extension 93,3413
(defvar *gcontext-extensions* 99,3720
(defvar *gcontext-local-state-cache* 102,3813
(defmacro gcontext-state-next 104,3896
(defun allocate-gcontext-state 107,3956
(defun deallocate-gcontext-state 121,4528
(defvar *temp-gcontext-cache* 128,4754
(defun allocate-temp-gcontext 130,4818
(defun deallocate-temp-gcontext 134,4986
(defmacro xgcmask->gcmask 155,5805
(defmacro access-gcontext 158,5916
(defmacro modify-gcontext 163,6101
(defmacro def-gc-accessor 171,6421
(defmacro incf-internal-timestamp 204,7759
(def-gc-accessor function 214,8119
(def-gc-accessor plane-mask 215,8161
(def-gc-accessor foreground 216,8197
(def-gc-accessor background 217,8233
(def-gc-accessor line-width 218,8269
(def-gc-accessor line-style 219,8305
(def-gc-accessor cap-style 220,8369
(def-gc-accessor join-style 221,8441
(def-gc-accessor fill-style 222,8500
(def-gc-accessor fill-rule 223,8579
(def-gc-accessor tile 224,8635
(def-gc-accessor stipple 225,8665
(def-gc-accessor ts-x 226,8698
(def-gc-accessor ts-y 227,8752
(def-gc-accessor subwindow-mode 229,8850
(def-gc-accessor exposures 230,8929
(def-gc-accessor clip-x 231,8975
(def-gc-accessor clip-y 232,9006
(def-gc-accessor dash-offset 234,9081
(def-gc-accessor arc-mode 236,9160
(defun gcontext-clip-mask 239,9216
(defsetf gcontext-clip-mask 257,9930
(defun set-gcontext-clip-mask 262,10159
(defun gcontext-dashes 295,11647
(defsetf gcontext-dashes 307,12003
(defun set-gcontext-dashes 309,12050
(defun gcontext-font 329,12856
(defsetf gcontext-font 348,13707
(defun set-gcontext-font 350,13750
(defun force-gcontext-changes-internal 368,14525
(defun force-gcontext-changes 472,18530
(defmacro with-gcontext 492,19528
(defun copy-gcontext-local-state 558,22028
(defun restore-gcontext-temp-state 620,24620
(defun create-gcontext 655,26050
(defun copy-gcontext-components 813,34071
(defun copy-gcontext 863,36104
(defun free-gcontext 873,36523
(defmacro define-gcontext-accessor 883,36922
(defun add-gcontext-extension 952,40360

src/clx/requests1.lisp,1653
(defun create-window 21,634
(defun destroy-window 118,4525
(defun destroy-subwindows 123,4679
(defun add-to-save-set 128,4841
(defun remove-from-save-set 134,5009
(defun reparent-window 140,5182
(defun map-window 147,5400
(defun map-subwindows 152,5546
(defun unmap-window 157,5700
(defun unmap-subwindows 162,5850
(defun circulate-window-up 167,6008
(defun circulate-window-down 173,6182
(defun query-tree 179,6358
(defun intern-atom 201,7330
(defun find-atom 224,7994
(defun atom-name 249,8766
(defun lookup-xatom 268,9314
(defun change-property 273,9450
(defun delete-property 308,10822
(defun get-property 319,11199
(defun rotate-properties 370,13191
(defun list-properties 392,14046
(defun selection-owner 411,14761
(defun set-selection-owner 424,15251
(defsetf selection-owner 437,15708
(defun convert-selection 441,15879
(defun send-event 459,16610
(defun grab-pointer 496,18401
(defun ungrab-pointer 517,19239
(defun grab-button 522,19397
(defun ungrab-button 543,20204
(defun change-active-pointer-grab 552,20548
(defun grab-keyboard 562,20936
(defun ungrab-keyboard 576,21512
(defun grab-key 582,21699
(defun ungrab-key 594,22205
(defun allow-events 603,22531
(defun grab-server 617,23032
(defun ungrab-server 621,23147
(defmacro with-server-grabbed 624,23231
(defun query-pointer 635,23561
(defun pointer-position 651,23996
(defun global-pointer-position 662,24311
(defun motion-events 672,24648
(defun translate-coordinates 685,25195
(defun warp-pointer 701,25696
(defun warp-pointer-relative 711,25960
(defun warp-pointer-if-inside 721,26240
(defun warp-pointer-relative-if-inside 735,26863

src/clx/text.lisp,773
(defparameter *max-string-size* 24,727
(deftype translation-function 33,1158
(defun translate-default 47,1883
(defun text-extents 106,4589
(defun text-width 213,8553
(defun text-extents-server 266,10551
(defun text-width-server 293,11427
(defun text-extents-local 312,12102
(deftype index-size 445,17497
(defun draw-glyph 455,18030
(defun draw-glyphs 503,19847
(defun draw-glyphs8 528,20877
(defun draw-glyphs16 631,25112
(defun draw-image-glyph 735,29319
(defun draw-image-glyphs 784,31217
(defun draw-image-glyphs8 814,32681
(defun draw-image-glyphs16 880,35538
(defun display-keycode-range 953,38612
(defun set-modifier-mapping 964,39036
(defun modifier-mapping 993,40319
(defun change-keyboard-mapping1016,41136
(defun keyboard-mapping 1053,42591

src/clx/patch.lisp,25
(defun read-input 8,232

src/clx/test/image.lisp,571
(defvar *image-test-host* 13,440
(defvar *image-test-nimages* 15,471
(defvar *image-test-copy* 17,505
(defvar *image-test-copy-random-subimage* 19,535
(defvar *image-test-put-random-subimage* 21,581
(defvar *image-test-get-image-result-type-choices*23,626
(defvar *image-test-get-image-image-x-format-choices*26,717
(defun image-test29,799
(defun image-test-choose 77,2258
(defun image-test-get-image 80,2328
(defun image-test-subimage-parameters 99,3079
(defun image-test-copy-image 110,3532
(defun image-test-put-image 124,4021
(defun image-info 147,4918

src/clx/test/trapezoid.lisp,25
(defun zoid-test 23,668

src/clx/test/bezier.lisp,62
(define-extension "bezier")25,697
(defun draw-curves 27,726

src/clx/test/zoid.lisp,211
(define-extension "ZoidExtension")27,757
(defun poly-fill-trapezoids 29,793
(defun draw-filled-trapezoids 32,887
(define-gcontext-accessor trapezoid-alignment 50,1715
(defun set-trapezoid-alignment 53,1815

src/clx/test/menu.lisp,392
(defstruct (menu)32,1256
(defun create-menu 46,1518
(defun menu-set-item-list 70,2316
(defparameter *menu-item-margin* 96,3205
(defun menu-recompute-geometry 100,3296
(defun menu-refresh 150,5115
(defun menu-choose 175,5858
(defun menu-highlight-item 226,7183
(defun menu-unhighlight-item 242,7772
(defun menu-present 249,8023
(defun just-say-lisp 278,9128
(defun pop-up 299,9874

src/clx/test/beziertest.lisp,27
(defun bezier-test 23,672

src/clx/test/hello.lisp,26
(defun hello-world 5,103

src/clx/dependent.lisp,4223
(defparameter *output-buffer-size* 22,678
(defparameter *reply-timeout* 25,782
(defconstant *buffer-speed* 51,1348
(defconstant *buffer-safety* 54,1423
(defun declare-bufmac 57,1500
(defun declare-buffun 60,1601
(defun card8->int8 69,1811
(defun int8->card8 77,1976
(defun card16->int16 83,2108
(defun int16->card16 91,2279
(defun card32->int32 97,2417
(defun int32->card32 105,2592
(defun aref-card8 114,2793
(defun aset-card8 121,2951
(defun aref-int8 128,3100
(defun aset-int8 135,3258
(defun aref-card16 149,3652
(defun aset-card16 152,3692
(defun aref-int16 155,3743
(defun aset-int16 158,3798
(defun aref-card32 162,3868
(defun aset-card32 165,3908
(defun aref-int32 168,3959
(defun aset-int32 171,4014
(defun aref-card29 175,4084
(defun aset-card29 178,4124
(defun aref-card16 187,4340
(defun aset-card16 190,4417
(defun aref-int16 194,4502
(defun aset-int16 197,4576
(defun aref-card32 201,4658
(defun aset-card32 204,4735
(defun aref-int32 208,4820
(defun aset-int32 211,4894
(defun aref-card29 215,4976
(defun aset-card29 218,5053
(defsetf aref-card8 343,8857
(defsetf aref-int8 346,8914
(defsetf aref-card16 349,8969
(defsetf aref-int16 352,9028
(defsetf aref-card32 355,9085
(defsetf aref-int32 358,9144
(defsetf aref-card29 361,9201
(defun rgb-val->card16 366,9290
(defun card16->rgb-val 374,9550
(defun radians->int16 382,9806
(defun int16->radians 389,10038
(defun make-process-lock 548,16425
(defmacro holding-lock 560,16878
(defmacro without-aborts 570,17348
(defun process-block 577,17578
(defun process-wakeup 587,17868
(defun current-process 598,18158
(defmacro without-interrupts 603,18250
(defmacro conditional-store 610,18492
(defmacro wrap-buf-output 623,18966
(defmacro wrap-buf-input 628,19090
(defun open-x-stream 645,19611
(defun buffer-read-default 657,19996
(defun buffer-write-default 674,20573
(defun buffer-force-output-default 686,20983
(defun buffer-close-default 695,21341
(defparameter *buffer-read-polling-time* 711,22040
(defun buffer-input-wait-default 713,22087
(defun buffer-listen-default 741,23146
(defmacro with-stack-list 760,23805
(defmacro with-stack-list* 770,24254
(defun buffer-replace 784,24841
(defun buffer-replace 790,25098
(defmacro with-gcontext-bindings 796,25315
(defconstant *type-check?* 847,27401
(defmacro type? 855,27795
(defun x-type-error 878,28610
(defun default-error-handler 884,28759
(defun host-address 898,29406
(defmacro use-closures 918,30376
(defun default-resources-pathname 928,30706
(defun resources-pathname 936,31002
(defun gc-cleanup 951,31470
(defun with-standard-io-syntax-function 970,32130
(defmacro with-standard-io-syntax 991,32660
(defun default-keysym-translate 1011,33579
(deftype pixarray-1-element-type 1041,34678
(deftype pixarray-4-element-type 1044,34723
(deftype pixarray-8-element-type 1047,34782
(deftype pixarray-16-element-type 1050,34841
(deftype pixarray-24-element-type 1053,34902
(deftype pixarray-32-element-type 1056,34963
(deftype pixarray-1 1058,35022
(deftype pixarray-4 1061,35089
(deftype pixarray-8 1064,35156
(deftype pixarray-16 1067,35223
(deftype pixarray-24 1070,35291
(deftype pixarray-32 1073,35359
(deftype pixarray 1076,35427
(deftype bitmap 1079,35527
(defmacro with-underlying-simple-vector1085,35607
(defmacro read-image-load-byte 1095,35981
(defmacro read-image-assemble-bytes 1105,36336
(defmacro write-image-load-byte 1120,36824
(defmacro write-image-assemble-bytes 1133,37222
(defvar *computed-image-byte-lsb-first-p* 1146,37653
(defvar *computed-image-bit-lsb-first-p* 1149,37748
(defun compute-image-byte-and-bit-ordering 1199,39534
(defun fast-read-pixarray-1 1243,41241
(defun fast-read-pixarray-4 1378,46273
(defun fast-read-pixarray-24 1423,48038
(defun fast-read-pixarray-using-bitblt1454,49129
(defun fast-read-pixarray-with-swap1469,49645
(defun fast-read-pixarray 1513,51530
(defun fast-write-pixarray-1 1561,53259
(defun fast-write-pixarray-4 1626,55392
(defun fast-write-pixarray-24 1665,56825
(defun fast-write-pixarray-using-bitblt1698,58063
(defun fast-write-pixarray-with-swap1713,58580
(defun fast-write-pixarray 1756,60545
(defun fast-copy-pixarray 1801,62243

src/main/wcl.lisp,19
(defun lmain 3,74

src/main/clx.lisp,19
(defun lmain 3,74

src/main/eval.lisp,19
(defun lmain 3,74

src/cl/decls/hash.lisp,899
(defconstant nil 4,128
(defconstant t 5,150
(defconstant char-code-limit 7,169
(defconstant pi 9,204
(defconstant most-positive-fixnum 10,240
(defconstant most-negative-fixnum 12,328
(defconstant call-arguments-limit 16,419
(defconstant lambda-parameters-limit 17,458
(defconstant array-total-size-limit 18,500
(defconstant array-dimension-limit 20,592
(defconstant array-rank-limit 21,637
(defvar *gensym-counter* 23,677
(defvar *gensym-prefix* 24,705
(defvar *gentemp-counter* 25,734
(defvar *character-names* 27,764
(defvar *macro-expanders* 41,1124
(defvar *compiler-macro-expanders* 42,1155
(defvar *type-macro-expanders* 43,1195
(defvar *setf-methods* 44,1231
(defvar *delay-structure-defs?* 45,1259
(defvar *delayed-structure-defs* 46,1294
(defvar *empty-bucket-marker* 47,1332
(defvar *structure-info* 51,1488
(defstruct (hash-table 53,1554
(defsetf gethash 64,1745

src/cl/decls/macros.lisp,336
(defmacro iterate 3,74
(defvar *macroexpand-hook* 16,595
(defstruct macro-env19,688
(defstruct basic-macro23,736
(defstruct (macro 27,802
(defstruct (pcl-walker-macro 29,846
(defstruct (compiler-macro 32,902
(defstruct (type-macro 34,955
(defmacro letf 36,1004
(defmacro key-list-iterate 43,1258
(deftype lambda-expr 64,1970

src/cl/decls/loop.lisp,1692
(defmacro data-type? 77,4035
(defmacro loop-copylist* 94,4894
(defmacro loop-simple-error 100,4965
(defmacro loop-warn 105,5152
(defmacro loop-pop-source 112,5393
(defmacro loop-gentemp 114,5448
(defvar loop-use-system-destructuring?117,5536
(defvar loop-desetq-temporary)120,5585
(defparameter loop-keyword-alist	130,5892
(defparameter loop-iteration-keyword-alist160,6945
(defparameter loop-for-keyword-alist	165,7068
(defvar loop-prog-names)177,7438
(defvar loop-macro-environment)179,7464
(defvar loop-path-keyword-alist 182,7558
(defvar loop-named-variables)183,7613
(defvar loop-variables)184,7671
(defvar loop-declarations)185,7726
(defvar loop-nodeclare)186,7778
(defvar loop-variable-stack)187,7830
(defvar loop-declaration-stack)188,7859
(defvar loop-desetq-crocks)189,7891
(defvar loop-desetq-stack)190,7946
(defvar loop-prologue)191,7998
(defvar loop-wrappers)192,8056
(defvar loop-before-loop)193,8123
(defvar loop-body)194,8149
(defvar loop-after-body)195,8175
(defvar loop-epilogue)196,8223
(defvar loop-after-epilogue)197,8253
(defvar loop-conditionals)198,8325
(defvar loop-when-it-variable)207,8780
(defvar loop-never-stepped-variable)208,8831
(defvar loop-emitted-body?)209,8890
(defvar loop-iteration-variables)211,8965
(defvar loop-iteration-variablep)212,9031
(defvar loop-collect-cruft)213,9074
(defvar loop-source-code)214,9134
(defvar loop-duplicate-code 215,9160
(defmacro define-loop-macro 217,9235
(define-loop-macro loop)233,9990
(defmacro loop-finish 236,10017
(defvar loop-floating-point-types244,10330
(defvar loop-simplep272,10457
(defmacro define-loop-path 290,10590
(defmacro define-loop-sequence-path 303,11188

src/cl/decls/cl-types.lisp,1166
(deftype cons 3,74
(deftype foreign-pointer 6,114
(deftype vector 9,177
(deftype simple-vector 12,246
(deftype simple-string 15,320
(deftype string 18,402
(deftype 32bit-vector 23,569
(deftype bit-array 26,626
(deftype bit-vector 29,685
(deftype complex-array 32,749
(deftype vector-with-fill-pointer 35,808
(deftype sequence 38,889
(deftype list 41,932
(deftype fixnum 44,969
(deftype bignum 47,1047
(deftype ratio 50,1091
(deftype complex 53,1133
(deftype real 56,1179
(deftype number 58,1219
(deftype rational 62,1322
(deftype null 65,1387
(deftype atom 68,1426
(deftype function-specifier 71,1465
(deftype function 74,1518
(deftype compiled-function 77,1566
(deftype procedure 80,1633
(deftype keyword 83,1683
(deftype string-arg 86,1729
(deftype structure 89,1776
(deftype unbound-variable-marker 92,1826
(deftype byte-specifier 95,1905
(deftype short-float 98,1956
(deftype single-float 100,1989
(deftype double-float 102,2023
(deftype long-float 104,2057
(deftype string-char 106,2089
(deftype bit 109,2128
(deftype mod 112,2163
(deftype signed-byte 114,2200
(deftype unsigned-byte 120,2343
(deftype pathname 125,2458

src/cl/decls/cl-macros.lisp,3459
(defmacro defmacro 3,74
(defmacro deftype 7,207
(defmacro define-compiler-macro 12,341
(defmacro check-arg-type 16,498
(defmacro defmethod 20,609
(defmacro defun-1 45,1426
(defmacro defun 53,1673
(defmacro defvar 63,2086
(defmacro defparameter 66,2200
(defmacro defconstant 69,2326
(defmacro setf 72,2450
(defmacro define-setf-method 86,2881
(defmacro defsetf 90,3035
(defsetf car 109,3569
(defsetf cdr 111,3593
(defsetf caar 113,3617
(defsetf cadr 116,3683
(defsetf cdar 119,3749
(defsetf cddr 122,3815
(defsetf caaar 125,3881
(defsetf cadar 128,3949
(defsetf cdaar 131,4017
(defsetf cddar 134,4085
(defsetf caadr 137,4153
(defsetf caddr 140,4221
(defsetf cdadr 143,4289
(defsetf cdddr 146,4357
(defsetf caaaar 149,4425
(defsetf cadaar 152,4495
(defsetf cdaaar 155,4565
(defsetf cddaar 158,4635
(defsetf caadar 161,4705
(defsetf caddar 164,4775
(defsetf cdadar 167,4845
(defsetf cdddar 170,4915
(defsetf caaadr 173,4985
(defsetf cadadr 176,5055
(defsetf cdaadr 179,5125
(defsetf cddadr 182,5195
(defsetf caaddr 185,5265
(defsetf cadddr 188,5335
(defsetf cdaddr 191,5405
(defsetf cddddr 194,5475
(defsetf first 197,5545
(defsetf second 199,5571
(defsetf third 202,5639
(defsetf fourth 205,5707
(defsetf fifth 208,5777
(defsetf sixth 211,5847
(defsetf seventh 214,5919
(defsetf eighth 217,5993
(defsetf ninth 220,6066
(defsetf tenth 223,6138
(defsetf nth 226,6210
(defsetf elt 228,6234
(defsetf aref 230,6258
(defsetf sbit 233,6352
(defsetf svref 236,6446
(defsetf oe-ref 238,6474
(defsetf schar 240,6504
(defsetf char 242,6532
(defsetf 32bit-vref 245,6616
(defsetf symbol-value 247,6654
(defsetf symbol-function 249,6683
(defsetf symbol-plist 251,6731
(defsetf symbol-package 253,6773
(defsetf symbol-hash-code 255,6819
(defsetf get 257,6869
(defsetf fill-pointer 261,6982
(defsetf char-bit 263,7024
(defsetf macro-function 265,7058
(defsetf documentation 267,7098
(defsetf subseq 269,7142
(define-setf-method the 273,7271
(define-setf-method getf 283,7566
(defmacro incf 298,8123
(defmacro decf 301,8198
(defmacro remf 305,8322
(define-setf-method ldb 332,9200
(defmacro psetf 357,9991
(defmacro push 375,10578
(defmacro return 380,10719
(defmacro when 383,10791
(defmacro unless 388,10868
(defmacro psetq 393,10953
(defmacro do 403,11284
(defmacro do* 431,12100
(defmacro dotimes 458,12884
(defmacro dolist 470,13254
(defmacro prog2 473,13402
(defmacro prog 481,13584
(defmacro prog* 489,13773
(defmacro and 497,13964
(defmacro or 506,14124
(defmacro cond 518,14358
(defmacro multiple-value-bind 534,14738
(defmacro multiple-value-list 537,14854
(defmacro multiple-value-setq 540,14962
(defmacro multiple-value-prog1 551,15322
(defmacro select 558,15573
(defmacro case 570,15934
(defmacro ecase 583,16271
(defmacro typecase 591,16435
(defmacro etypecase 602,16796
(defmacro with-open-file 611,17006
(defmacro with-open-stream 618,17228
(defmacro shiftf 629,17493
(defmacro rotatef 650,18163
(defmacro pushnew 677,19224
(defmacro declaim 680,19356
(defmacro defun-inline 683,19465
(defmacro defmethod-inline 687,19572
(defmacro check-type 691,19687
(defmacro assert 697,19919
(defmacro do-external-symbols 701,20044
(defmacro do-symbols 710,20346
(defmacro do-all-symbols 727,20850
(defmacro with-output-to-string 737,21147
(defmacro with-input-from-string 747,21454
(defmacro print-unreadable-object 752,21638
(defmacro progv 766,22143

src/cl/decls/bq.lisp,364
(defvar *comma* 3,74
(defvar *comma-atsign* 4,99
(defvar *comma-dot* 5,138
(defvar *bq-list* 6,172
(defvar *bq-append* 7,201
(defvar *bq-list** 8,234
(defvar *bq-nconc* 9,265
(defvar *bq-clobberable* 11,297
(defvar *bq-quote* 12,340
(defvar *bq-quote-nil* 13,371
(defparameter *bq-simplify* 15,419
(defvar *bq-count* 17,451
(defmacro backquote 19,474

src/cl/decls/constants.lisp,5048
(defvar *target-bits-per-word* 6,182
(defconstant array-tag 9,269
(defconstant other-tag 10,334
(defconstant vector-tag 11,399
(defconstant multi-array-tag 12,464
(defconstant number-tag 13,529
(defconstant vector-tag-mask 15,595
(defconstant number-tag-mask 16,660
(defconstant vector-mask 18,726
(defconstant array-mask 19,792
(defconstant simple-vector-tag 21,859
(defconstant simple-multi-array-tag 22,924
(defconstant complex-vector-tag 23,989
(defconstant complex-multi-array-tag 24,1054
(defconstant array-element-type-mask 26,1120
(defconstant element-type-bit 27,1186
(defconstant element-type-signed-8bit 28,1252
(defconstant element-type-unsigned-8bit 29,1318
(defconstant element-type-char 30,1384
(defconstant element-type-signed-16bit 31,1450
(defconstant element-type-unsigned-16bit 32,1516
(defconstant element-type-signed-32bit 33,1582
(defconstant element-type-unsigned-32bit 34,1648
(defconstant element-type-ptr 35,1714
(defconstant element-type-float 36,1780
(defconstant type-simple-bit-vector 38,1847
(defconstant type-simple-signed-8bit-vector 39,1913
(defconstant type-simple-unsigned-8bit-vector 40,1979
(defconstant type-simple-string 41,2045
(defconstant type-simple-signed-16bit-vector 42,2111
(defconstant type-simple-unsigned-16bit-vector 43,2177
(defconstant type-simple-signed-32bit-vector 44,2243
(defconstant type-simple-unsigned-32bit-vector 45,2309
(defconstant type-simple-vector 46,2375
(defconstant type-simple-float-vector 47,2441
(defconstant type-simple-bit-multi-array 50,2509
(defconstant type-simple-signed-8bit-multi-array 51,2575
(defconstant type-simple-unsigned-8bit-multi-array 52,2641
(defconstant type-simple-char-multi-array 53,2707
(defconstant type-simple-signed-16bit-multi-array 54,2773
(defconstant type-simple-unsigned-16bit-multi-array 55,2839
(defconstant type-simple-signed-32bit-multi-array 56,2905
(defconstant type-simple-unsigned-32bit-multi-array 57,2971
(defconstant type-simple-ptr-multi-array 58,3037
(defconstant type-simple-float-multi-array 59,3103
(defconstant type-complex-bit-vector 62,3171
(defconstant type-complex-signed-8bit-vector 63,3237
(defconstant type-complex-unsigned-8bit-vector 64,3303
(defconstant type-complex-char-vector 65,3369
(defconstant type-complex-signed-16bit-vector 66,3435
(defconstant type-complex-unsigned-16bit-vector 67,3501
(defconstant type-complex-signed-32bit-vector 68,3567
(defconstant type-complex-unsigned-32bit-vector 69,3633
(defconstant type-complex-ptr-vector 70,3699
(defconstant type-complex-float-vector 71,3765
(defconstant type-complex-bit-multi-array 74,3833
(defconstant type-complex-signed-8bit-multi-array 75,3899
(defconstant type-complex-unsigned-8bit-multi-array 76,3965
(defconstant type-complex-char-multi-array 77,4031
(defconstant type-complex-signed-16bit-multi-array 78,4097
(defconstant type-complex-unsigned-16bit-multi-array 79,4163
(defconstant type-complex-signed-32bit-multi-array 80,4229
(defconstant type-complex-unsigned-32bit-multi-array 81,4295
(defconstant type-complex-ptr-multi-array 82,4361
(defconstant type-complex-float-multi-array 83,4427
(defconstant type-bignum 86,4495
(defconstant type-ratio 87,4561
(defconstant type-float 88,4627
(defconstant type-complex 89,4693
(defconstant type-symbol 91,4760
(defconstant type-line-symbol 92,4826
(defconstant type-character 94,4893
(defconstant type-cons 95,4959
(defconstant type-oe 96,5025
(defconstant type-foreign-ptr 97,5091
(defconstant type-procedure 98,5157
(defconstant type-structure 99,5223
(defconstant type-void 100,5289
(defconstant type-closure 101,5355
(defconstant type-forwarding-ptr 102,5421
(defconstant type-ubv 103,5487
(defconstant type-end-of-page 104,5553
(defconstant open-procedure-flag 108,5708
(defconstant closed-procedure-flag 109,5744
(defconstant funcallable-instance-flag 110,5785
(defconstant indirect-array-offset 112,5831
(defconstant vector-fill-pointer-offset 113,5869
(defconstant vector-displaced-index-offset 114,5912
(defconstant array-dims-vector-offset 115,5958
(defconstant array-mult-vector-offset 116,5999
(defconstant array-displaced-index-offset 117,6040
(defconstant special-symbol-flag 119,6086
(defconstant constant-symbol-flag 120,6122
(defconstant macro-symbol-flag 121,6159
(defconstant print-escape-flag 122,6193
(defconstant print-escape-flag-valid? 123,6227
(defconstant symbol-value-offset 125,6269
(defconstant symbol-package-offset 126,6305
(defconstant symbol-self-link-offset 127,6343
(defconstant symbol-plist-offset 128,6383
(defconstant symbol-function-offset 129,6419
(defconstant symbol-hashcode-offset 130,6458
(defconstant symbol-flags-offset 131,6497
(defconstant symbol-name-offset 132,6533
(defconstant line-symbol-line-offset 134,6569
(defconstant symbol-tag-mask 136,6610
(defconstant either-symbol-tag 137,6644
(defconstant lambda-list-keywords140,6713
(defconstant hash-mask 144,6835
(defconstant unix-maxpathlen 146,6868
(defconstant unix-eof-flag 147,6903

src/cl/decls/last.lisp,5553
(defmacro accumulate-lr 3,74
(defmacro n-compare 9,264
(defmacro def-nary 17,506
(defmacro def-nary-pred 26,787
(defconstant boole-clr 34,992
(defconstant boole-set 35,1018
(defconstant boole-1 36,1044
(defconstant boole-2 37,1068
(defconstant boole-c1 38,1092
(defconstant boole-c2 39,1117
(defconstant boole-and 40,1142
(defconstant boole-ior 41,1168
(defconstant boole-xor 42,1194
(defconstant boole-eqv 43,1220
(defconstant boole-nand 44,1246
(defconstant boole-nor 45,1274
(defconstant boole-andc1 46,1301
(defconstant boole-andc2 47,1330
(defconstant boole-orc1 48,1359
(defconstant boole-orc2 49,1387
(defstruct (byte 51,1416
(defstruct (package55,1493
(defvar *all-packages* 67,1728
(defvar *lisp-package* 69,1757
(defvar *keyword-package* 74,1872
(defvar *user-package* 79,1980
(defvar *packages-initialized?* 87,2154
(defvar *merge-sort-temp-vector* 89,2192
(defvar *merge-lists-header* 90,2242
(defvar *standard-input*)93,2289
(defvar *standard-output*)94,2315
(defvar *error-output*)95,2342
(defvar *query-io*)96,2366
(defvar *debug-io*)97,2386
(defvar *terminal-io*)98,2406
(defvar *trace-output*)99,2429
(defvar *free-string-buffers* 101,2454
(defvar *free-string-streams* 102,2489
(defvar *input-stream-line-numbers?* 103,2524
(defstruct (stream 105,2567
(defstruct (fptr-stream 121,2875
(defstruct (user-stream 123,2920
(defstruct (file-stream 125,2970
(defstruct (line-number-stream 128,3031
(defstruct (string-stream 131,3112
(defstruct (interactive-stream 136,3225
(defstruct (user-defined-stream 138,3282
(defstruct (terminal-stream 141,3390
(defstruct (broadcast-stream 145,3523
(defstruct (synonym-stream 148,3588
(defstruct (concatenated-stream 151,3645
(defstruct (two-way-stream 153,3698
(defstruct (echo-string 155,3746
(defconstant default-string-buffer-length 157,3791
(defmacro with-valid-stream 159,3841
(defvar *print-escape* 168,4125
(defvar *print-radix* 169,4151
(defvar *print-base* 170,4178
(defvar *print-circle* 171,4203
(defvar *print-pretty* 172,4231
(defvar *print-level* 173,4259
(defvar *print-length* 174,4286
(defvar *print-case* 175,4314
(defvar *print-gensym* 176,4340
(defvar *print-array* 177,4368
(defvar *print-readably* 178,4395
(defvar *print-right-margin* 179,4425
(defvar *print-miser-width* 180,4459
(defvar *print-lines* 181,4492
(defvar *print-pprint-dispatch* 182,4519
(defvar *print-structure* 183,4556
(defvar *readtable*)186,4589
(defvar *read-base* 187,4610
(defvar *read-suppress* 188,4634
(defvar *open-paren-count* 189,4663
(defvar *close-paren-marker* 190,4693
(defvar *dot-marker* 191,4737
(defvar *read-eval* 192,4765
(defvar *read-default-float-format* 193,4788
(defconstant whitespace 195,4840
(defconstant constituient 196,4867
(defconstant multiple-escape 197,4896
(defconstant single-escape 198,4928
(defconstant terminating-macro 199,4958
(defconstant non-terminating-macro 200,4992
(defconstant alphadigit 202,5031
(defconstant illegal 203,5058
(defstruct (readtable 205,5083
(defstruct macro-char211,5335
(defstruct (dispatch-macro-char 215,5389
(defmacro get-char-syntax 218,5462
(defmacro get-char-attributes 221,5552
(defmacro get-char-macro-info 224,5650
(defvar *character-attributes*229,5840
(deftype hash-table 365,8893
(defsetf gethash 366,8943
(defparameter *features*370,9102
(defvar *modules* 386,9671
(defvar *traced-functions* 388,9695
(defvar *trace-level* 390,9742
(defmacro trace 392,9768
(defmacro untrace 395,9829
(defmacro time 398,9894
(defconstant unix-to-universal-time-difference 401,9977
(defconstant internal-time-units-per-second 402,10036
(defconstant seconds-in-week 403,10085
(defconstant weeks-offset 404,10130
(defconstant seconds-offset 405,10162
(defconstant minutes-per-day 406,10198
(defconstant quarter-days-per-year 407,10238
(defconstant quarter-days-per-century 408,10289
(defconstant november-17-1858 409,10335
(defconstant weekday-november-17-1858 410,10373
(defconstant april-1 411,10414
(defconstant october-31 412,10477
(defmacro with-static-space 414,10546
(defvar *cl-version* 419,10686
(defvar *cl-build-date* 421,10750
(defvar *unbound* 423,10829
(defvar *source-pathname* 425,10859
(defconstant special-forms427,10891
(defvar / 433,11138
(defvar // 434,11153
(defvar /// 435,11169
(defvar * 436,11186
(defvar ** 437,11201
(defvar *** 438,11217
(defvar + 439,11234
(defvar ++ 440,11250
(defvar +++ 441,11266
(defvar - 442,11283
(defvar *repl-level* 444,11299
(defvar *constant-redefinition-verbose* 448,11352
(defstruct (physical-pathname450,11396
(defvar *default-pathname-defaults* 461,11562
(defconstant float-log10-of-2 465,11622
(defvar *format-control-string* 467,11662
(defvar *format-index* 470,11737
(defvar *format-length* 473,11815
(defvar *format-arguments* 476,11895
(defvar *format-original-arguments* 479,11971
(defvar *format-stream-stack* 482,12071
(defvar *format-dispatch-table* 485,12165
(defvar cardinal-ones488,12241
(defvar cardinal-tens492,12389
(defvar cardinal-teens497,12553
(defvar cardinal-periods502,12746
(defvar ordinal-ones508,12978
(defvar ordinal-tens513,13143
(defconstant random-state-initial-data 519,13334
(defstruct (random-state 529,13723
(defvar *random-state* 535,13858
(defstruct lambda-list537,13905
(defvar *eval-macro-env* 547,14015
(defvar *inspect-print-length* 549,14059
(defvar *open-shared-object-files* 551,14095
(defun complete-delayed-defstructs 553,14164
(defun finish-boot 564,14592
(defvar *booting?* 567,14648

src/cl/decls/condition.lisp,2012
(defvar *break-on-signals* 4,45
(defvar *break-on-warnings* 5,77
(defvar *debugger-hook* 6,110
(defvar *handler-clusters* 7,139
(defvar *restart-clusters* 8,171
(defstruct (restart 10,204
(defstruct (condition 16,318
(defmacro with-keyword-pairs 26,691
(defmacro define-condition 45,1359
(define-condition warning 88,2986
(define-condition serious-condition 90,3029
(define-condition error 92,3082
(defun simple-condition-printer 94,3131
(define-condition simple-condition 98,3304
(define-condition simple-warning 103,3473
(define-condition simple-error 108,3636
(define-condition storage-condition 113,3793
(define-condition stack-overflow 115,3854
(define-condition storage-exhausted 117,3912
(define-condition type-error 119,3973
(define-condition simple-type-error 121,4034
(define-condition case-failure 126,4206
(defun simple-condition-format-string 135,4508
(defun simple-condition-format-arguments 142,4892
(define-condition program-error 149,5291
(define-condition control-error 151,5336
(define-condition stream-error 153,5381
(define-condition end-of-file 155,5431
(define-condition file-error 157,5481
(define-condition package-error 159,5531
(define-condition cell-error 161,5584
(define-condition unbound-variable 163,5630
(define-condition undefined-function 169,5812
(define-condition arithmetic-error 175,5999
(define-condition division-by-zero 177,6065
(define-condition floating-point-overflow 179,6132
(define-condition floating-point-underflow 181,6199
(define-condition abort-failure 183,6266
(defmacro restart-bind 187,6349
(defmacro restart-case 198,6643
(defmacro with-simple-restart 251,8163
(defmacro resolve-function 260,8447
(defmacro handler-bind 268,8725
(defmacro handler-case 277,9041
(defmacro ignore-errors 320,10387
(defun accumulate-cases 329,10547
(defmacro xecase 345,10987
(defmacro xccase 357,11275
(defmacro xetypecase 384,11889
(defmacro ctypecase 397,12191
(defmacro assert 422,12815
(defmacro xcheck-type 437,13263

src/cl/decls/defstruct.lisp,278
(defstruct struct-info3,74
(defstruct struct-slot25,411
(defmacro defstruct 31,479
(defun report-function 146,4641
(defun make-function 149,4754
(defmacro defforeign 152,4861
(defvar *package* 165,5285
(defmacro def-c-struct 167,5342
(defmacro def-c-type-name 189,6116

src/cl/decls/destructuring-bind.lisp,419
(define-macro 'destructuring-binddestructuring-bind7,257
(defun dbind-1 14,477
(defun hairy-dbind 33,1064
(defun lambda-list-required-args 40,1311
(defun lambda-list-hairy-args 46,1549
(defun dot->&rest 51,1684
(defmacro destructure 60,2028
(define-macro 'poppop77,2613
(define-macro 'prog1prog185,2804
(define-macro 'locallylocally94,2997
(define-macro 'letlet99,3120
(define-macro 'let*let*123,3658

src/cl/decls/foreign.lisp,4501
(def-c-struct iobuf3,74
(def-c-struct dirdesc11,193
(def-c-struct dirent19,312
(def-c-type-name file-ptr 26,425
(def-c-type-name dirdesc-ptr 27,462
(def-c-type-name dirent-ptr 28,504
(defforeign opendir 30,546
(defforeign closedir 31,607
(defforeign readdir 32,661
(defforeign alloc_memory 34,723
(defforeign alloc_words 35,800
(defforeign alloc_shorts 36,859
(defforeign alloc_bytes 37,919
(defforeign alloc_bits 38,978
(defforeign c_cons 39,1036
(defforeign lisp_break 41,1084
(defforeign lisp_debug 42,1122
(defforeign command_line_argument 44,1161
(defforeign apply_function 46,1218
(defforeign initialize_array 48,1279
(defforeign print_double_float 52,1404
(defforeign double_float_to_string 54,1484
(defforeign ilogb 55,1561
(defforeign add 57,1612
(defforeign multiply 58,1654
(defforeign subtract 59,1701
(defforeign divide 60,1748
(defforeign integer_add 62,1794
(defforeign integer_subtract 63,1844
(defforeign integer_multiply 64,1899
(defforeign c_eql 66,1955
(defforeign num_equal_p 68,2001
(defforeign greaterp 69,2052
(defforeign geq_p 70,2100
(defforeign lessp 71,2145
(defforeign leq_p 72,2190
(defforeign make_symbol 74,2236
(defforeign dlopen 76,2298
(defforeign dlsym 78,2431
(defforeign dlclose 79,2491
(defforeign fopen 81,2542
(defforeign fdopen 82,2609
(defforeign fclose 84,2680
(defforeign fflush 85,2736
(defforeign fseek 86,2792
(defforeign ftell 88,2876
(defforeign unlink 90,2932
(defforeign fgetc 92,2984
(defforeign ungetc 93,3034
(defforeign fputc 94,3095
(defforeign fputs 95,3159
(defforeign get_file_ptr 98,3295
(defforeign strtol 101,3385
(defforeign strtod 103,3480
(defforeign strcmp 105,3566
(defforeign exit 107,3622
(defforeign system 108,3667
(defforeign popen 109,3729
(defforeign pclose 110,3798
(defforeign string_column 112,3853
(defforeign fixnum_to_bignum 113,3924
(defforeign bignum_div 114,3971
(defforeign bignum_rem 115,4018
(defforeign bignum_logand 116,4065
(defforeign bignum_to_double 117,4115
(defforeign bignum_length 118,4167
(defforeign int_length 120,4212
(defforeign double_truncate 121,4260
(defforeign (double_floor 122,4329
(defforeign ceil 123,4397
(defforeign float_significand 124,4447
(defforeign float_exponent 125,4510
(defforeign ldexp 126,4567
(defforeign fmod 127,4643
(defforeign rint 128,4704
(defforeign remainder 129,4754
(defforeign pow 130,4823
(defforeign (double_log 132,4884
(defforeign (double_log10 133,4948
(defforeign (double_sqrt 134,5016
(defforeign (double_exp 135,5082
(defforeign (double_sin 137,5147
(defforeign (double_cos 138,5206
(defforeign (double_tan 139,5265
(defforeign (double_asin 140,5324
(defforeign (double_acos 141,5385
(defforeign (double_atan2 142,5446
(defforeign heap_start 144,5521
(defforeign heap_frontier 145,5563
(defforeign heap_frontier_limit 146,5608
(defforeign heap_page_size 148,5660
(defforeign total_heap_pages 149,5706
(defforeign free_heap_pages 150,5754
(defforeign total_static_pages 151,5801
(defforeign free_static_bytes 152,5851
(defforeign unix_time_of_day 154,5901
(defforeign unix_timezone 155,5949
(defforeign unix_daylight_savings_time 156,5994
(defforeign internal_real_time 157,6052
(defforeign internal_system_run_time 158,6102
(defforeign internal_user_run_time 159,6158
(defforeign (c_sleep 161,6213
(defforeign c_aref 163,6275
(defforeign c_set_aref 164,6333
(defforeign vref 166,6408
(defforeign set_vref 167,6463
(defforeign connect_to_server 171,6559
(defforeign full_gc 173,6635
(defforeign gc_call_count 174,6670
(defforeign set_gc_messages 175,6710
(defforeign intern_static_symbols 176,6764
(defforeign switch_to_static_space 177,6813
(defforeign switch_to_dynamic_space 178,6863
(defforeign object_size 179,6914
(defforeign file_write_date 181,6973
(defforeign probe_file 182,7035
(defforeign file_length 183,7092
(defforeign file_listen 184,7149
(defforeign write_byte 185,7206
(defforeign read_byte187,7297
(defforeign read_vector 191,7410
(defforeign write_vector 195,7557
(defforeign chdir 199,7673
(defforeign getpid 200,7718
(defforeign getenv 201,7753
(defforeign putenv 202,7813
(defforeign closure_oe(204,7866
(defforeign make_eval_closure(206,7916
(defforeign gethostname 214,8088
(defforeign getosversion 215,8158
(defforeign getcwd 216,8229
(defforeign (c_random 217,8292
(defforeign initstate 218,8339
(defforeign setstate 220,8447
(defforeign usleep 221,8497
(defforeign host_bits_per_word 222,8546

src/cl/pprint/pprint-tests.lisp,540
(defvar in-tester 51,2674
(defvar tests 52,2697
(defvar compile-tests 53,2716
(defun do-tests 55,2742
(defun do-failed-tests 64,3015
(defun do-many-tests 69,3181
(defun more 79,3521
(defun do-test 82,3595
(defun test-ordinary 106,4339
(defun deftest 110,4457
(defun test-def 112,4493
(defun etest 117,4630
(defmacro formats 123,4807
(defmacro format-xps 130,5129
(defmacro plet 141,5574
(defmacro prints 158,5990
(defmacro print*s 167,6343
(defmacro print*c 176,6663
(defmacro format*c 181,6826
(defmacro ftest 187,7011

src/cl/pprint/globals.lisp,3138
(defvar *xp-printing-functions*6,120
(defvar *print-shared* 14,469
(defvar *print-pprint-dispatch* 16,498
(defvar *print-right-margin* 19,609
(defvar *print-miser-width* 22,692
(defvar *print-lines* 25,797
(defvar *default-right-margin* 28,869
(defvar *last-abbreviated-printing*31,971
(defvar *ipd* 35,1141
(defvar *current-level* 38,1231
(defvar *current-length* 41,1296
(defvar *abbreviation-happened* 44,1364
(defvar *result* 47,1461
(defvar *locating-circularities* 49,1512
(defvar *parents* 52,1667
(defvar *circularity-hash-table* 54,1725
(defvar *free-circularity-hash-tables* 61,2015
(defvar *preds-for-specs*64,2115
(defvar *describe-xp-streams-fully* 75,2710
(defvar *free-xps* 77,2781
(defvar *format-string-cache* 79,2853
(defvar *fn-table* 81,2887
(defvar *testing-errors* 87,3118
(lisp:defstruct (pprint-dispatch 89,3177
(lisp:defstruct (entry 97,3600
(defun install 115,4103
(defun get-circularity-hash-table 130,4764
(defun free-circularity-hash-table 135,4971
(defun copy-pprint-dispatch 141,5132
(defun set-pprint-dispatch 162,5904
(defun set-pprint-dispatch+ 170,6236
(defun priority-> 219,8003
(defun adjust-counts 224,8122
(defun pprint-dispatch 236,8532
(defun get-printer 241,8749
(defun fits 253,9183
(defun specifier-category 255,9236
(defun always-true 268,9591
(defun specifier-fn 270,9639
(defun convert-body 273,9705
(lisp:defstruct (xp-structure 309,10975
(defmacro LP<-BP 380,14814
(defmacro TP<-BP 384,14931
(defmacro BP<-LP 387,14999
(defmacro BP<-TP 390,15053
(defmacro LP<-TP 396,15299
(defmacro check-size 402,15529
(defmacro section-start 420,16142
(defun push-block-stack 422,16221
(defun pop-block-stack 426,16358
(defmacro prefix-ptr 429,16443
(defmacro suffix-ptr 432,16523
(defmacro non-blank-prefix-ptr 435,16609
(defmacro initial-prefix-ptr 438,16705
(defmacro section-start-line 441,16799
(defun push-prefix-stack 444,16893
(defun pop-prefix-stack 456,17389
(defmacro Qtype 459,17477
(defmacro Qkind 461,17535
(defmacro Qpos 463,17598
(defmacro Qdepth 465,17662
(defmacro Qend 467,17726
(defmacro Qoffset 469,17790
(defmacro Qarg 471,17854
(defun enqueue 477,18197
(defmacro Qnext 492,18808
(defun describe-xp 494,18865
(defun get-pretty-print-stream 557,21993
(defun free-pretty-print-stream 562,22188
(defun initialize-xp 567,22355
(defun push-char-mode 599,23639
(defun pop-char-mode 604,23784
(defun handle-char-mode 610,23967
(defun write-char+ 631,24996
(defun write-string+ 635,25120
(defun write-char++ 650,25707
(defun force-some-output 659,26056
(defun write-string++ 664,26226
(defun write-string+++ 670,26452
(defun pprint-tab+ 682,26864
(defun pprint-newline+ 711,27912
(defun start-block 725,28528
(defun end-block 738,29064
(defun pprint-indent+ 753,29642
(defmacro maybe-too-large 760,29893
(defmacro misering? 771,30385
(defun attempt-to-output 778,30729
(defun flush 821,32420
(defun output-line 830,32701
(defun setup-for-next-line 855,33650
(defun set-indentation-prefix 873,34404
(defun set-prefix 881,34748
(defun set-suffix 886,34931
(defun reverse-string-in-place 894,35233

src/cl/pprint/initialize.lisp,38
(defun pprint-dispatch-print 82,5055

src/cl/pprint/formats.lisp,976
(defun pretty-array 8,175
(defun pretty-vector 15,384
(defun pretty-non-vector 25,693
(defun pprint-linear 48,1559
(defun pprint-fill 58,1916
(defun pprint-tabular 68,2268
(defun fn-call 80,2724
(defun alternative-fn-call 86,2930
(defun bind-list 91,3145
(defun block-like 100,3461
(defun defun-like 104,3600
(defun print-fancy-fn-call 109,3765
(defun maybelab 128,4353
(defun function-call-p 138,4683
(defun let-print 150,5106
(defun cond-print 154,5217
(defun dmm-print 158,5330
(defun defsetf-print 161,5398
(defun do-print 164,5470
(defun flet-print 170,5620
(defun function-print 174,5750
(defun mvb-print 179,5909
(defun prog-print 182,5981
(defun setq-print 188,6237
(defun quote-print 191,6337
(defun tagbody-print 196,6496
(defun up-print 203,6792
(defun token-type 246,8742
(defun pretty-loop 261,9371
(defun backquote-print 340,12013
(defun comma-print 345,12172
(defun comma-atsign-print 348,12248
(defun comma-dot-print 351,12332

src/cl/pprint/format-compiler.lisp,295
(defmacro def-format-handler 13,436
(defmacro bind-initial 20,786
(defmacro bind-args 25,945
(defmacro bind-outer-args 40,1409
(defmacro maybe-bind 45,1585
(defmacro pprint-pop+ 49,1724
(defmacro pprint-pop+top 54,1851
(defmacro formatter-in-package 60,1984
(defmacro formatter 63,2084

src/cl/pprint/interface.lisp,1113
(defun write 13,476
(defun basic-write 37,1639
(defun maybe-initiate-xp-printing 43,1869
(defun xp-print 65,2668
(defun decode-stream-arg 74,2985
(defun do-xp-printing 79,3107
(defun write+ 98,3829
(defun non-pretty-print 123,4869
(defun circularity-process 151,6382
(defun maybe-print-fast 191,7924
(defun print-fixnum 225,9080
(defun no-escapes-needed 234,9412
(defun print 247,9769
(defun prin1 255,9991
(defun princ 261,10165
(defun pprint 267,10341
(defun write-to-string 274,10555
(defun prin1-to-string 278,10697
(defun princ-to-string 283,10831
(defun format 290,11077
(defun process-format-string 309,11751
(defun write-char 322,12372
(defun write-string 329,12586
(defun write-line 337,12889
(defun terpri 346,13240
(defun fresh-line 355,13591
(defun finish-output 368,14145
(defun force-output 375,14358
(defun clear-output 382,14569
(defmacro defstruct 392,15001
(defun safe-assoc 439,16676
(defmacro pprint-logical-block 450,17204
(defmacro pprint-logical-block+ 478,18258
(defun pprint-newline 499,19008
(defun pprint-indent 507,19318
(defun pprint-tab 515,19641

src/cl/functions/macro-support.lisp,1160
(defun define-macro 3,74
(defun define-type 7,193
(defun define-compiler-macro-1 11,321
(defun collect 17,511
(defun compiler-macro-function 22,665
(defun compiler-macroexpand-1 26,788
(defun compiler-macroexpand 29,926
(defun define-macro-function 32,1060
(defun define-setf 43,1458
(defun every-even 48,1635
(defun every-n 53,1788
(defun every-odd 60,1960
(defun expand-macro 63,2005
(defun lookup-macro-expander 85,2707
(defun lookup-symbol-macro-def 92,2909
(defun get-setf-method 96,3042
(defun get-setf-method-1 99,3134
(defun insert-optional-default 126,4061
(defun macro-arg-list 138,4382
(defun macro-function 144,4555
(defun macroexpand-1 150,4735
(defun macroexpand 153,4855
(defun n-list 157,5031
(defun names->symbol 165,5295
(defun parse-body 171,5462
(defun parse-in/out 185,5850
(defun parse-macro-definition 197,6229
(defun quoted-constant-p 223,7286
(defun remove-compiler-macro-expander 228,7388
(defun remove-macro-expander 231,7479
(defun remove-type-macro-expander 234,7552
(defun same-length-p 237,7635
(defun tree-find 244,7770
(defun upto 253,7962
(defun walk 256,8024
(defun wrap-in-block 263,8161

src/cl/functions/low-io.lisp,3195
(defun get-string-buffer 3,74
(defun-inline free-string-buffer-1 8,223
(defun free-string-buffer 11,307
(defun string-buffer->simple-string 18,511
(defun get-string-stream 25,720
(defun free-string-stream 30,847
(defun open 33,922
(defun open-user-stream 66,2102
(defun initialize-fptr-stream-methods 84,2764
(defun open-terminal-stream 129,4104
(defun make-string-output-stream 146,4796
(defun make-string-output-stream-1 151,4976
(defun make-string-input-stream 170,5722
(defun close 192,6463
(defun input-stream-p 215,7525
(defun output-stream-p 218,7602
(defun illegal-stream-operation 221,7679
(defun closed-stream-method 224,7793
(defun-inline read-char-unsafe 227,7906
(defun read-char/3 232,8074
(defun-inline read-char 236,8206
(defun read-char/fptr-stream 240,8356
(defun read-char/line-number-stream 248,8591
(defun read-char/string-stream 254,8819
(defun peek-char-unsafe 263,9125
(defun peek-char/4 270,9381
(defun-inline peek-char 274,9533
(defun peek-char/fptr-stream 278,9703
(defun peek-char/string-stream 283,9853
(defun-inline write-char-unsafe 291,10113
(defun write-char/2 296,10249
(defun-inline write-char 300,10349
(defun write-character 303,10449
(defun write-character-escape 308,10582
(defun write-char/fptr-stream 316,10774
(defun write-char/terminal-stream 320,10870
(defun write-char/string-stream 327,11088
(defun write-string-escape 342,11669
(defun write-string/4 352,11965
(defun write-line/4 356,12093
(defun-inline write-simple-string-unsafe 362,12259
(defun write-string-unsafe 367,12417
(defun-inline write-float-unsafe 374,12640
(defun write-float/2 379,12772
(defun write-float 383,12868
(defun write-float/fptr-stream 386,12927
(defun write-float/terminal-stream 390,13033
(defun write-float/string-stream 395,13206
(defun write-any-string 408,13576
(defun write-simple-string/fptr-stream 413,13741
(defun write-simple-string/terminal-stream 417,13852
(defun write-simple-string/string-stream 423,14069
(defun-inline read-byte-unsafe 426,14181
(defun read-byte/3 431,14351
(defun-inline read-byte 436,14530
(defun read-byte/fptr-stream 439,14642
(defun-inline write-byte-unsafe 445,14826
(defun write-byte 451,14972
(defun write-byte/fptr-stream 456,15122
(defun read-vector 462,15285
(defun write-vector 471,15525
(defun unread-char-unsafe 478,15682
(defun unread-char/2 483,15813
(defun-inline unread-char 487,15915
(defun unread-char/fptr-stream 490,16016
(defun unread-char/string-stream 494,16120
(defun-inline force-output 498,16213
(defun force-output/1 501,16307
(defun force-output-unsafe 505,16401
(defun-inline finish-output 510,16509
(defun force-output/fptr-stream 513,16602
(defun force-output/string-stream 517,16690
(defun clear-output 520,16741
(defun clear-input 523,16778
(defun-inline listen-unsafe 526,16824
(defun listen/1 531,16942
(defun-inline listen 535,17024
(defun listen/fptr-stream 538,17105
(defun listen/string-stream 541,17204
(defun stream-column 544,17286
(defun write-integer 549,17398
(defun write-integer-1 556,17591
(defun legal-stream-element-type? 566,17930
(defun error-stream-eof 576,18205
(defun initialize-streams 579,18296

src/cl/functions/hash.lisp,588
(defmethod clrhash 3,74
(defmethod gethash-with-key 16,597
(defmethod gethash 22,874
(defun gethash/3 25,957
(defun hash-key->index 32,1189
(defun hash-key->index/3 35,1271
(defun sxhash/simple-string 55,2080
(defun-inline hash/3 66,2371
(defun hash 69,2469
(defun make-hash-table-1 72,2529
(defun prime-ceiling 92,3235
(defun-inline make-hash-table 99,3416
(defmethod maphash 105,3603
(defun rehash 114,3949
(defmethod remhash 140,5013
(defmethod set-gethash 152,5421
(defun-inline sxhash/symbol 164,5921
(defun-inline sxhash/character 167,5978
(defun sxhash 170,6031

src/cl/functions/files.lisp,904
(defun delete-file 3,74
(defun enough-namestring 10,246
(defmethod file-author 13,300
(defmethod file-length 17,383
(defun file-position 20,481
(defun file-write-date 35,930
(defun make-pathname 42,1079
(defun merge-pathnames 57,1715
(defun namestring 81,2535
(defun parse-namestring 91,2888
(defun parse-namestring-1 98,3154
(defun null-string->nil 137,4545
(defun namestring->dirlist 140,4620
(defun pathname-device 148,4899
(defun pathname-directory 151,4970
(defun pathname-host 154,5047
(defun pathname-name 157,5114
(defun nil->empty-string 160,5181
(defun pathname->string 165,5245
(defun pathname-type 178,5606
(defun pathname-version 181,5673
(defun pathname 185,5747
(defun probe-file 191,5883
(defun truename 197,6024
(defun directory 203,6190
(defun ed 212,6443
(defun file-namestring 216,6537
(defun directory-namestring 220,6678
(defun host-namestring 223,6783

src/cl/functions/strings.lisp,638
(defun-inline make-string 3,74
(defun nstring-capitalize 6,177
(defun nstring-upcase 9,250
(defmethod-inline simple-string=12,319
(defun string-capitalize 15,418
(defun string-compare 18,490
(defun-inline string-downcase 29,794
(defun string-downcase/3 32,883
(defun-inline nstring-downcase 37,1061
(defun nstring-downcase/4 40,1190
(defun string=45,1333
(defun string-equal 57,1642
(defun string-left-trim 70,2105
(defun string-lessp 73,2201
(defun string-right-trim 76,2300
(defun string-trim 79,2400
(defun string-upcase 84,2532
(defun string 91,2723
(defun trim-left-index 99,2876
(defun trim-right-index 105,3036

src/cl/functions/print.lisp,1312
(defun default-write-structure 3,74
(defun fresh-line 9,269
(defun get-output-stream-string 15,421
(defun pprint 21,652
(defun prin1-to-string 26,786
(defun-inline prin1 30,871
(defun prin1/2 33,955
(defun princ-to-string 37,1040
(defun princ 41,1125
(defun print 45,1240
(defun print/2 48,1317
(defun terpri 53,1424
(defun verbose-write-structure 58,1549
(defun write-array-verbose 69,1911
(defun write-array-verbose-1 87,2547
(defun write-bit-vector-verbose 107,3153
(defun write-array 113,3356
(defun write-complex 126,3688
(defun write-cons-1 129,3778
(defun write-cons 139,4099
(defun write-function 161,4674
(defun-inline write-line 164,4764
(defun write-object 168,4900
(defun write-foreign-pointer 193,5817
(defun write-unbound-variable-marker 199,6014
(defun write-hash-table 202,6111
(defun write-pathname 208,6291
(defun write-random-state 215,6477
(defun write-ratio 221,6643
(defun write-simple-vector 224,6731
(defun-inline write-string 235,7074
(defun write-structure 239,7214
(defun-inline escaped-symbol-char? 246,7468
(defun write-symbol 249,7556
(defun symbol-name-needs-escaping? 277,8600
(defun write-symbol-escape 291,8941
(defun write-to-string-1 310,9639
(defun write-to-string 314,9733
(defun write-unknown-object 334,10528
(defun write 337,10631

src/cl/functions/format.lisp,2212
(defun flonum-to-string 172,6125
(defun whitespace-char-p 175,6212
(defun line-length 182,6427
(defun scale-exponent 189,6757
(defun scale-expt-aux 192,6840
(defun format-error 225,8219
(defun format-get-parameter 236,8635
(defun parse-format-operation 265,9728
(defun format-find-command 308,11589
(defun format 332,12469
(defun sub-format 391,14663
(defun format-capitalization 421,15663
(defun format-escape 453,16638
(defun format-untagged-condition 476,17253
(defun format-funny-condition 516,18429
(defun format-boolean-condition 531,18815
(defun format-condition 550,19347
(defun format-iteration 567,19737
(defun format-do-iteration 590,20663
(defun format-get-trailing-segments 632,22231
(defun format-get-segments 658,23065
(defun make-pad-segs 685,24023
(defun format-round-columns 708,24914
(defun format-justification 718,25170
(defun format-terpri 760,26954
(defun format-freshline 768,27174
(defun format-page 778,27416
(defun format-tilde 787,27651
(defun format-eat-whitespace 796,27915
(defun format-newline 806,28182
(defun format-plural 817,28484
(defun format-skip-arguments 837,29056
(defun format-indirection 864,29974
(defun format-tab 882,30582
(defun format-princ 905,31330
(defun format-prin1 920,31743
(defun format-print-character 935,32148
(defun format-print-named-character 946,32495
(defun format-add-commas 963,32992
(defun format-write-field 986,33914
(defun format-print-number 1008,34904
(defun format-print-small-cardinal 1027,35566
(defun format-print-cardinal 1047,36230
(defun format-print-cardinal-aux 1055,36432
(defun format-print-ordinal 1068,36932
(defun format-print-old-roman 1096,37859
(defun format-print-roman 1108,38313
(defun format-print-decimal 1134,39164
(defun format-print-binary 1140,39295
(defun format-print-octal 1146,39423
(defun format-print-hexadecimal 1152,39556
(defun format-print-radix 1158,39690
(defun format-fixed 1175,40095
(defun format-fixed-aux 1192,40740
(defun format-exponential 1230,41886
(defun format-exponent-marker 1246,42441
(defun format-exp-aux 1263,43079
(defun format-general-float 1311,44675
(defun format-general-aux 1330,45395
(defun format-dollars 1355,46311

src/cl/functions/loop.lisp,2057
(defun loop-make-psetq 59,3046
(defun loop-make-desetq 68,3253
(defun loop-desetq-internal 87,3956
(defun loop-make-setq 93,4158
(defun loop-construct-return 97,4259
(defun loop-tequal 107,4529
(defun loop-tassoc 111,4596
(defun loop-tmember 115,4686
(defun loop-translate 117,4774
(defun loop-end-testify 120,4848
(defun loop-optimize-duplicated-code-etc 127,5069
(defun loop-output-group 167,6790
(defun loop-translate-1 180,7209
(defun loop-bind-block 297,11627
(defun loop-get-progn-1 307,11995
(defun loop-get-progn 312,12202
(defun loop-get-form 316,12326
(defun loop-typed-arith 334,13205
(defun loop-typed-init 338,13326
(defun loop-make-variable 347,13649
(defun loop-make-iteration-variable 388,15245
(defun loop-declare-variable 392,15401
(defun loop-constantp 411,16111
(defun loop-maybe-bind-form 414,16161
(defun loop-optional-type 425,16716
(defun loop-make-conditionalization 436,17043
(defun loop-pseudo-body 470,18352
(defun loop-emit-body 475,18568
(defun loop-do-named 479,18655
(defun loop-do-initially 491,19232
(defun loop-nodeclare 494,19302
(defun loop-do-finally 500,19534
(defun loop-do-do 503,19602
(defun loop-do-return 506,19661
(defun loop-do-collect 509,19757
(defun loop-cdrify 601,23310
(defun loop-do-while 610,23582
(defun loop-do-when 617,23841
(defun loop-do-with 630,24353
(defun loop-do-always 656,25400
(defun loop-do-thereis 665,25711
(defun loop-simplep 673,25895
(defun loop-simplep-1 679,26060
(defun loop-hack-iteration 718,27340
(defun loop-do-for 795,30420
(defun loop-do-repeat 809,30851
(defun loop-when-it-variable 819,31134
(defun loop-for-equals 824,31292
(defun loop-for-first 838,31800
(defun loop-list-stepper 847,32161
(defun loop-for-arithmetic 874,33312
(defun loop-named-variable 885,33720
(defun loop-for-being 893,34029
(defun loop-gather-preps 959,36866
(defun loop-add-path 989,37949
(defun loop-sequencer 997,38158
(defun loop-sequence-elements-path 1097,42047
(defun initial-value 1120,42937
(defun variable-declarations 1122,42970

src/cl/functions/xloop.lisp,5259
(defmacro loop-copylist* 115,5126
(defvar *ansi-loop-gentemp*118,5175
(defun ansi-loop-gentemp 121,5210
(defvar *loop-real-data-type* 126,5337
(defun loop-optimization-quantities 128,5380
(defun hide-variable-references 157,7011
(defun hide-variable-reference 181,8615
(defmacro with-loop-list-collection-head 192,8941
(defmacro loop-collect-rplacd 211,9631
(defmacro loop-collect-answer 260,11697
(defstruct (loop-minimax288,12679
(defvar *loop-minimax-type-infinities-alist*300,12885
(defun make-loop-minimax 336,14726
(defun loop-note-minimax-operation 347,15168
(defmacro with-minimax-value 355,15498
(defmacro loop-accumulate-minimax-value 373,16183
(defun ansi-loop-tequal 413,17431
(defun ansi-loop-tassoc 417,17503
(defun ansi-loop-tmember 421,17598
(defun loop-lookup-keyword 425,17693
(defmacro loop-store-table-data 430,17828
(defstruct (loop-universe434,17940
(defun print-loop-universe 449,18572
(defvar *loop-universe*)469,19319
(defun make-standard-loop-universe 472,19346
(defvar *loop-destructuring-hooks*498,20386
(defun loop-make-psetq 504,20561
(defun loop-make-desetq 513,20768
(defvar *loop-desetq-temporary*522,20971
(defmacro loop-really-desetq 526,21040
(defvar *loop-source-code*)590,23239
(defvar *loop-original-source-code*)595,23380
(defvar *loop-source-context*)600,23563
(defvar *loop-names*)604,23657
(defvar *loop-macro-environment*)607,23734
(defvar *loop-named-variables*)611,23860
(defvar *loop-variables*)614,23969
(defvar *loop-declarations*)618,24076
(defvar *loop-desetq-crocks*)622,24205
(defvar *loop-wrappers*)631,24659
(defvar *loop-bind-stack*)636,24840
(defvar *loop-nodeclare*)641,25045
(defvar *loop-iteration-variables*)645,25165
(defvar *loop-prologue*)649,25272
(defvar *loop-before-loop*)651,25298
(defvar *loop-body*)652,25326
(defvar *loop-after-body*)653,25347
(defvar *loop-emitted-body*)660,25698
(defvar *loop-epilogue*)665,25822
(defvar *loop-after-epilogue*)671,26076
(defvar *loop-final-value-culprit*)676,26274
(defvar *loop-inside-conditional*)680,26402
(defvar *loop-when-it-variable*)685,26639
(defvar *loop-never-stepped-variable*)692,26986
(defvar *loop-collection-cruft*)696,27133
(defun loop-constant-fold-if-possible 702,27227
(defun loop-constantp 725,28282
(defvar *loop-duplicate-code*732,28430
(defvar *loop-iteration-flag-variable*736,28468
(defun loop-code-duplication-threshold 740,28547
(defmacro loop-body 745,28702
(defun duplicatable-code-p 824,32330
(defvar *special-code-sizes*834,32640
(defvar *estimate-code-size-punt*846,33080
(defun destructuring-size 859,33307
(defun estimate-code-size 864,33445
(defun special-operator-p 868,33544
(defun estimate-code-size-1 870,33578
(defun loop-context 924,35736
(defun loop-error 929,35889
(defun ansi-loop-warn 936,36151
(defun loop-check-data-type 940,36296
(defmacro loop-finish 956,36855
(defun subst-gensyms-for-nil 965,37172
(defun loop-build-destructuring-bindings 973,37427
(defun loop-translate 983,37755
(defun loop-iteration-driver 1037,39553
(defun ansi-loop-pop-source 1057,40614
(defun loop-get-compound-form 1063,40784
(defun loop-get-progn 1069,40951
(defun loop-get-form 1078,41263
(defun loop-construct-return 1084,41411
(defun loop-pseudo-body 1088,41493
(defun loop-emit-body 1092,41678
(defun loop-emit-final-value 1096,41766
(defun loop-disallow-conditional 1106,42197
(defun loop-disallow-anonymous-collectors 1111,42435
(defun loop-disallow-aggregate-booleans 1115,42630
(defun loop-typed-init 1124,42875
(defun loop-optional-type 1131,43072
(defun loop-bind-block 1187,45374
(defun loop-variable-p 1196,45703
(defun loop-make-variable 1203,45888
(defun loop-make-iteration-variable 1244,47632
(defun loop-declare-variable 1248,47750
(defun loop-maybe-bind-form 1268,48456
(defun loop-do-if 1275,48620
(defun loop-do-initially 1319,50247
(defun loop-do-finally 1323,50360
(defun loop-do-do 1327,50469
(defun loop-do-named 1330,50528
(defun loop-do-return 1341,51027
(defstruct (loop-collector1348,51149
(defun loop-get-collection-info 1359,51322
(defun loop-list-collection 1396,52935
(defun loop-sum-collection 1420,53868
(defun loop-maxmin-collection 1444,54782
(defun loop-do-always 1466,55694
(defun loop-do-thereis 1478,56074
(defun loop-do-while 1486,56361
(defun loop-do-with 1491,56531
(defun loop-hack-iteration 1510,57109
(defun loop-do-for 1570,59627
(defun loop-do-repeat 1584,60113
(defun loop-when-it-variable 1600,60797
(defun loop-ansi-for-equals 1614,61329
(defun loop-for-across 1625,61697
(defun loop-list-step 1661,63001
(defun loop-for-on 1681,63960
(defun loop-for-in 1719,65723
(defstruct (loop-path1742,66669
(defun add-loop-path 1752,66812
(defun loop-for-being 1769,67589
(defun named-variable 1820,70085
(defun loop-collect-prepositional-phrases 1828,70362
(defun ansi-loop-sequencer 1876,72330
(defun loop-for-arithmetic 1975,76753
(defun ansi-loop-sequence-elements-path 1984,77072
(defun loop-hash-table-iteration-path 2013,78212
(defun loop-package-symbols-iteration-path 2073,80943
(defun make-ansi-loop-universe 2100,82007
(defparameter *loop-ansi-universe*2182,85566
(defun loop-standard-expansion 2186,85641
(defmacro ansi-loop 2194,85963

src/cl/functions/symbols.lisp,2016
(defmethod-inline boundp 3,74
(defun clear-macro-name-flag 7,181
(defmethod clear-symbol-flag 11,262
(defun copy-symbol 17,426
(defun define-function 21,494
(defun define-variable 29,719
(defun proclaim-constant-variable 42,1198
(defun define-constant 48,1382
(defun constant-expr 52,1497
(defun proclaimed-special? 60,1725
(defun proclaim-special-variable 65,1835
(defun-inline constant-var? 70,1965
(defun delete-property 73,2044
(defmethod fboundp 76,2120
(defmethod fdefinition 81,2253
(defmethod fmakunbound 86,2395
(defsetf fdefinition 92,2535
(defun gensym/1 95,2643
(defun-inline gensym 106,2911
(defun-inline gentemp 109,2963
(defun gentemp/2 112,3061
(defun string+number->string 117,3254
(defun fill-string-with-integer 124,3476
(defun get-properties 136,3939
(defun-inline get 142,4173
(defun getf 145,4286
(defun keywordp 148,4381
(defun lookup-prop 151,4465
(defun macro-name? 157,4627
(defun-inline make-symbol 160,4694
(defun make-static-symbol 163,4778
(defmethod-inline makunbound 166,4874
(defun-inline symbol-print-escape-flag-valid? 170,4940
(defun-inline symbol-print-escape? 173,5042
(defun-inline set-symbol-print-escape-flag-valid? 176,5126
(defun-inline set-symbol-print-escape 180,5233
(defun remprop 184,5321
(defun-inline set-get 187,5398
(defun set-macro-name-flag 191,5531
(defmethod set-symbol-flag 195,5608
(defmethod-inline set-symbol-function 201,5771
(defmethod-inline set-symbol-hash-code 205,5889
(defmethod-inline set-symbol-package 209,6007
(defmethod-inline set-symbol-plist 213,6161
(defun-inline set 218,6331
(defun special-var? 222,6397
(defmethod-inline symbol-flag 225,6467
(defmethod-inline unsafe-symbol-function 230,6616
(defun symbol-function 233,6709
(defun-inline unsafe-symbol-value 238,6843
(defun symbol-value 241,6927
(defmethod-inline symbol-hash-code 246,7069
(defmethod-inline symbol-name 249,7166
(defmethod symbol-package 252,7244
(defmethod-inline symbol-plist 258,7453
(defun update-prop 261,7543

src/cl/functions/backquote.lisp,445
(defun bq-completely-process 12,436
(defun bq-process 18,597
(defun bracket 42,1357
(defun maptree 53,1626
(defun bq-splicing-frob 62,1823
(defun bq-frob 67,1940
(defun bq-simplify 73,2073
(defun bq-simplify-args 83,2277
(defun null-or-quoted 114,3243
(defun bq-attach-append 117,3327
(defun bq-attach-conses 126,3704
(defun bq-remove-tokens 139,4173
(defun char-macro-read-backquote 155,4598
(defun char-macro-read-comma 161,4757

src/cl/functions/list.lisp,3017
(defun-inline cons 28,871
(defmethod-inline car 31,913
(defmethod-inline cdr 34,967
(defmethod-inline set-car 37,1021
(defmethod-inline set-cdr 41,1087
(defun-inline rplaca 45,1153
(defun-inline rplacd 49,1214
(defun-inline caaaar 53,1275
(defun-inline caaadr 55,1328
(defun-inline caaar 57,1381
(defun-inline caadar 59,1427
(defun-inline caaddr 61,1480
(defun-inline caadr 63,1533
(defun-inline caar 65,1579
(defun-inline cadaar 67,1618
(defun-inline cadadr 69,1671
(defun-inline cadar 71,1724
(defun-inline caddar 73,1770
(defun-inline cadddr 75,1823
(defun-inline caddr 77,1876
(defun-inline cadr 79,1922
(defun-inline cdaaar 81,1961
(defun-inline cdaadr 83,2014
(defun-inline cdaar 85,2067
(defun-inline cdadar 87,2113
(defun-inline cdaddr 89,2166
(defun-inline cdadr 91,2219
(defun-inline cdar 93,2265
(defun-inline cddaar 95,2304
(defun-inline cddadr 97,2357
(defun-inline cddar 99,2410
(defun-inline cdddar 101,2456
(defun-inline cddddr 103,2509
(defun-inline cdddr 105,2562
(defun-inline cddr 107,2608
(defun-inline first 110,2648
(defun-inline second 112,2688
(defun-inline third 114,2730
(defun-inline fourth 116,2772
(defun-inline fifth 118,2816
(defun-inline sixth 120,2858
(defun-inline seventh 122,2900
(defun-inline eighth 124,2944
(defun-inline ninth 126,2987
(defun-inline tenth 128,3029
(defun accumulate-rl 131,3072
(defun acons 137,3278
(defun adjoin/4 140,3343
(defun adjoin 145,3454
(defmethod append/2 156,3726
(defun append 161,3827
(defun assoc/4 168,3981
(defun assoc 173,4110
(defun assq 183,4330
(defun assql 188,4423
(defun butlast/2 193,4518
(defun butlast 200,4669
(defun copy-alist 204,4741
(defun copy-list 226,5289
(defun copy-tree 231,5392
(defun-inline endp 236,5507
(defun intersection 240,5544
(defun last 248,5779
(defun ldiff 254,5860
(defun length/list 261,6075
(defun list-length 267,6189
(defun list*-1 283,6865
(defun list* 288,6976
(defun list 292,7055
(defun make-list-1 294,7081
(defun make-list 297,7182
(defun mapc 300,7266
(defun mapcan/2 306,7403
(defun mapcan 313,7611
(defun mapcar/2 317,7717
(defun mapcar 324,7924
(defun member/4 329,8031
(defun member-if 334,8183
(defun member 340,8343
(defun memq 350,8554
(defun memql 355,8664
(defun nbutlast 362,8788
(defun nconc/2 375,9129
(defun nconc 384,9299
(defun nintersection 392,9462
(defun nreconc 403,9819
(defun nreverse/list 405,9865
(defun nset-difference 417,10089
(defun nset-exclusive-or 436,10878
(defun nsubst 461,11608
(defun nth 478,12194
(defun nthcdr 483,12270
(defun nunion 489,12361
(defun pairlis/3 502,12775
(defun-inline pairlis 510,12969
(defun rassoc/4 513,13057
(defun rassoc 518,13187
(defun-inline rest 529,13403
(defun revappend 532,13453
(defun reverse/list 538,13574
(defun set-difference 546,13731
(defun set-exclusive-or 560,14147
(defun set-nth 572,14537
(defun sublis/4 578,14677
(defun sublis 587,14918
(defun subsetp 598,15147
(defun subst 605,15368
(defun union 616,15778

src/cl/functions/reader.lisp,1849
(defun char-macro-close-paren 3,74
(defun char-macro-double-quote 10,290
(defun char-macro-open-paren 14,388
(defun char-macro-quote 19,538
(defun char-macro-semicolon 23,644
(defun copy-readtable 29,806
(defun dispatch-macro-handler 43,1277
(defun eval-conditional-read 59,1817
(defun eval-conditional-read-1 67,2005
(defun make-default-readtable 75,2288
(defun init-default-readtable 78,2367
(defun make-dispatch-macro-character 135,5334
(defun-inline parse-integer 151,5784
(defun parse-integer-1 158,5978
(defun read/4 167,6356
(defun read-from-string 264,9279
(defun read-line 268,9375
(defun read-line-1 272,9523
(defun read-list 286,9955
(defun read-string 298,10328
(defun-inline read 309,10640
(defun read-1 313,10797
(defun set-char-attribute 317,10938
(defun set-char-macro-info 320,11028
(defun set-char-syntax 323,11118
(defun set-dispatch-macro-character 326,11200
(defun set-macro-character 336,11564
(defun set-syntax-from-char 347,11899
(defun sharp-macro-big-comment 352,12043
(defun sharp-macro-cond-read 367,12521
(defun sharp-macro-eval 375,12760
(defun sharp-macro-function 379,12873
(defun sharp-macro-read-array 383,13000
(defun sharp-macro-read-bit-vector 396,13533
(defun sharp-macro-read-char 412,14059
(defun sharp-macro-read-complex 429,14530
(defun sharp-macro-read-eval 436,14762
(defun sharp-macro-read-in-base 445,15021
(defun sharp-macro-read-pathname 453,15238
(defun sharp-macro-read-structure 460,15450
(defun sharp-macro-read-uninterned 473,15990
(defun sharp-macro-read-vector 479,16248
(defun token->float 487,16505
(defun token->integer 497,16874
(defun token->object 500,16951
(defun token->ratio 616,20154
(defun token->symbol 622,20320
(defun undefined-sub-char 661,21714
(defun get-dispatch-macro-character 665,21860
(defun get-macro-character 674,22246

src/cl/functions/arrays.lisp,2242
(defun-inline object-size 3,74
(defun-inline object-header 6,124
(defun-inline array-dims-vector 9,189
(defun-inline array-underlying-vector 12,269
(defun-inline array-multiplier-vector 15,352
(defmethod 32bit-vref 19,474
(defun adjust-array 23,583
(defun vector-bounds-error 27,673
(defun multi-array-bounds-error 31,808
(defun not-array-error 35,949
(defun aref 38,1024
(defun array-default-initial-element 41,1072
(defun array-element-type-tag->default-initial-element 44,1196
(defmethod array-dimension 57,1604
(defmethod array-dimensions 67,1928
(defun array-element-size 70,1992
(defun array-element-type-tag->array-element-size 74,2133
(defun array-element-type 87,2533
(defmethod array-rank 101,3068
(defun array-type-tag 106,3158
(defun array-type 109,3206
(defun char 117,3452
(defun check-range-inclusive 120,3503
(defun check-range 128,3744
(defun copy-vector 136,3974
(defun element-type-tag 144,4131
(defmethod-inline fill-pointer 147,4201
(defun illegal-element-type 150,4291
(defun initialize-array-from-contents 153,4405
(defun initialize-array-from-contents-1 166,4730
(defun initialize-array 187,5405
(defmethod make-32bit-vector 195,5728
(defun make-array 198,5828
(defun make-complex-array 216,6520
(defun make-complex-multi-array 232,7147
(defmethod make-complex-vector 243,7627
(defun make-multi-array 270,8649
(defun make-similar-vector 307,9884
(defun make-simple-array 315,10249
(defun make-simple-multi-array 328,10696
(defun make-simple-string 339,11100
(defmethod make-simple-vector 348,11453
(defun alloc-simple-1d-array 359,11920
(defun multi-array-rank 371,12398
(defun sbit 374,12486
(defmethod schar 377,12534
(defmethod set-32bit-vref 381,12627
(defun set-aref 386,12759
(defmethod-inline set-fill-pointer 389,12827
(defun set-sbit 393,12950
(defmethod set-schar 396,13018
(defmethod set-svref 401,13114
(defun shrink-vector 409,13390
(defmethod svref 415,13610
(defmethod-inline true-vector-length 419,13707
(defun-inline vector-bounds-check 422,13780
(defmethod vector-length 427,13972
(defmethod vector-pop 432,14098
(defmethod vector-push-extend 435,14203
(defmethod vector-push 449,14808
(defun vector-ref 458,15127
(defun vector 465,15323

src/cl/functions/eval.lisp,1693
(defun eval 10,375
(defun eval-1 13,428
(defun expand 24,769
(defun expand-function 43,1430
(defun expand-named-function 50,1621
(defun expand-flet/labels 58,1824
(defun expand-mv-bind 67,2092
(defun expand-macrolet 73,2258
(defun expand-symbol-macrolet 95,2929
(defun expand-eval-when 105,3283
(defun expand-define-macro 109,3429
(defun expand-function-call 114,3631
(defun expand-lambda-expr 121,3861
(defun expand-body 125,4009
(defun eval/5 130,4167
(defun eval-application 137,4355
(defun eval-quote 159,5443
(defun eval-the 162,5486
(defun eval-eval-when 165,5575
(defun eval-if 171,5740
(defun eval-setq 176,5931
(defun eval-progn 184,6157
(defun eval-block 187,6253
(defun eval-return-from 197,6500
(defun eval-catch 202,6688
(defun eval-throw 206,6840
(defun eval-tagbody 210,6991
(defun eval-go 226,7463
(defun eval-unwind-protect 233,7658
(defun eval-sequence 237,7828
(defun eval-flet/labels 243,8031
(defun eval-named-function 259,8560
(defun eval-function 262,8679
(defun eval-lambda 269,8919
(defun coerce-to-keyword 306,10146
(defun parse-lambda-list 309,10222
(defun parse-lambda-list/4 316,10402
(defun eval-function-call 366,12113
(defun eval-multiple-value-call 382,12627
(defun eval-mv-bind 389,12905
(defun eval-lookup-variable-value 406,13545
(defun eval-lookup-function-value 414,13778
(defun set-variable-value 422,14020
(defun set-function-value 429,14253
(defun eval-lookup-block-tag 436,14468
(defun eval-lookup-tag-tag 442,14646
(defun eval-simple-extend-var-env 448,14820
(defun eval-hairy-extend-var-env 456,15113
(defun eval-undo-special-bindings 499,16745
(defun extend-tag-env 504,16905
(defun wna 507,16997

src/cl/functions/misc.lisp,3774
(defun collect-cases 8,275
(defun processor+os->machine-type 14,406
(defun unix->lisp-path-list 22,700
(defun setf-function-symbol 32,978
(defun set-fdefinition 40,1258
(defun cd 54,1836
(defun coerce-to-function 62,2128
(defun compiled-function-name 67,2228
(defun connect-to-server 73,2389
(defun constantp 76,2466
(defun copy-structure 83,2608
(defun-inline foreign-pointer-type 91,2834
(defun-inline foreign-pointer-pointer 94,2894
(defun current-default-pathname 97,2957
(defun disassemble 100,3028
(defun function-lambda-expression 104,3143
(defun uncompile 108,3248
(defun lisp-implementation-type 114,3403
(defun lisp-implementation-version 116,3446
(defun machine-instance 118,3499
(defun os-version 124,3697
(defun short-site-name 130,3890
(defun long-site-name 133,3965
(defvar *wcl-version*136,4038
(defun feature? 139,4105
(defun gc-call-count 145,4228
(defun gc 148,4272
(defun-inline identity 151,4299
(defun structure-slot-names 154,4369
(defun describe 157,4481
(defun inspect 160,4545
(defun inspect-1 165,4614
(defun inspect-command-loop 177,4969
(defun inspect-banner 212,6058
(defun inspect-symbol 216,6199
(defun inspect-number 246,7197
(defun inspect-character 255,7404
(defun inspect-list 260,7536
(defun inspect-cons 267,7692
(defun inspect-dotted-list 277,7958
(defun inspect-sequence 281,8056
(defun inspect-structure 294,8508
(defun inspect-foreign-pointer 311,9137
(defun inspect-anything 316,9308
(defun machine-byte-order 320,9402
(defun setup-packages-and-symbols-before-loading 327,9652
(defun create-shared-object-for-loading 362,10867
(defun do-runtime-load-commands 379,11344
(defun load 418,12698
(defun load-lisp-file 427,13009
(defun load-lisp-object-file 439,13430
(defun load-init-file 459,14222
(defun load-compiled-file 466,14421
(defun open-object-file 470,14535
(defun close-object-file 476,14706
(defun machine-type 481,14835
(defun make-procedure-object 487,15102
(defun-inline set-procedure-type-flag 492,15233
(defun-inline oe-ref 495,15312
(defun-inline set-oe-ref 498,15362
(defun-inline new-structure 502,15436
(defun object->pointer 505,15507
(defun pc->procedure-name 508,15551
(defvar *greeting-names*511,15631
(defun random-w-name 552,16148
(defun print-structure 555,16235
(defun print-time 561,16452
(defmethod procedure-code 595,17350
(defun proclaim 598,17431
(defun provide 608,17770
(defun pwd 611,17849
(defun query-readline 619,18114
(defun y-or-n-p 623,18243
(defun yes-or-no-p 641,18850
(defun user-homedir-pathname 657,19360
(defun quit 660,19412
(defun random 663,19441
(defun copy-random-state 670,19706
(defun make-random-state 680,19991
(defun repl-1 697,20613
(defun repl-prompt 738,21841
(defun debug-prompt 741,21872
(defun repl 744,21937
(defun require 749,22064
(defun heap-page-size 754,22206
(defun total-heap-pages 757,22252
(defun free-heap-pages 760,22302
(defun percentage 763,22350
(defun room 766,22405
(defun set-gc-messages 783,23087
(defun shell 792,23450
(defun run-program 796,23552
(defun sleep 801,23704
(defun software-type 806,23804
(defun special-form-p 809,23839
(defmethod-inline structure-type 812,23909
(defun tmpdir 815,23979
(defun trace-function 818,24030
(defun untrace-function 846,25014
(defun traced-function-names 854,25273
(defun trace-functions 859,25402
(defun untrace-functions 864,25548
(defun values-list 872,25785
(defun values 877,25959
(defun ref-structure-as-vector 895,26810
(defun start-application 898,26876
(defun set-documentation 901,26964
(defun documentation 904,27016
(defun c-symbol-value 907,27057
(defun command-line-argument 910,27123
(defun executable-root-directory 913,27187
(defun rename-file 922,27469
(defun dribble 925,27561

src/cl/functions/types.lisp,3403
(defun-inline 32bit-vector-p 3,74
(defun-inline adjustable-array-p 6,143
(defun-inline array-has-fill-pointer-p 9,204
(defun type->element-type-tag 13,358
(defun rewrite-typep 49,1851
(defun rewrite-combined-type 90,3451
(defun rewrite-array-typep 97,3655
(defun type-macroexpand 131,4880
(defun expand-inner-types 144,5312
(defun array-type-p 154,5572
(defun arrayp 177,6242
(defun-inline array-p 180,6293
(defun assert-error 183,6334
(defun-inline atom 186,6415
(defun-inline bignump 189,6458
(defun-inline bit-array-p 192,6510
(defun-inline bit-vector-p 195,6574
(defun-inline bitp 198,6640
(defun-inline characterp 201,6690
(defun check-type-error 204,6748
(defun coerce-to-list 207,6864
(defun coerce-to-string 213,6993
(defun coerce-to-vector 223,7236
(defun character 230,7455
(defun coerce 239,7779
(defun compiled-function-p 265,8588
(defun-inline complex-array-p 268,8638
(defun complex-vector-p 271,8703
(defun-inline complexp 274,8762
(defun-inline consp 277,8816
(defun-inline eq 280,8864
(defun-inline eql 283,8901
(defun equal 286,8941
(defun equalp 302,9525
(defun-inline fixnump 305,9561
(defun-inline floatp 308,9604
(defun-inline foreign-pointer-p 311,9654
(defun-inline functionp 314,9721
(defun integer-range-p 317,9785
(defun-inline integerp 322,9916
(defun-inline listp 325,9977
(defun-inline not 328,10029
(defun-inline null 331,10066
(defun-inline numberp 334,10104
(defun-inline procedurep 337,10147
(defun-inline rationalp 340,10205
(defun-inline realp 343,10250
(defun-inline ratiop 346,10308
(defun-inline simple-1d-array-p 349,10358
(defun-inline simple-array-p 352,10425
(defun-inline simple-bit-array-p 355,10489
(defun-inline simple-bit-vector-p 358,10560
(defun-inline simple-signed-8bit-vector-p 361,10635
(defun-inline simple-unsigned-8bit-vector-p 364,10726
(defun-inline simple-signed-16bit-vector-p 367,10821
(defun-inline simple-unsigned-16bit-vector-p 370,10914
(defun-inline simple-signed-32bit-vector-p 373,11011
(defun-inline simple-unsigned-32bit-vector-p 376,11104
(defun-inline simple-float-vector-p 379,11201
(defun-inline simple-string-p 382,11280
(defun-inline simple-vector-p 385,11347
(defun-inline string-char-p 388,11414
(defun stringp 391,11465
(defun-inline string-p 396,11584
(defun-inline structurep 399,11627
(defun unbound-variable-marker-p 402,11685
(defparameter *simple-subtypes*407,11890
(defconstant combined-type-ops 422,12168
(defun subtypep 424,12232
(defun normalize-type 439,12799
(defun memq-t 455,13378
(defun atomic-t1-subtypep 458,13426
(defun simple-subtypep 469,13761
(defun float-subtypep 481,14090
(defun combined-type 486,14166
(defun loose->=489,14255
(defun loose-<=492,14315
(defun integer-subtypep 495,14375
(defun array-subtypep 504,14674
(defun array-element-subtypep 514,14992
(defun array-dims-subtypep 522,15197
(defun complex-subtypep 530,15410
(defun combined-t1-subtypep 538,15586
(defun combined-t2-subtypep 549,15971
(defun-inline symbolp 560,16356
(defun-inline line-symbol-p 564,16462
(defun-inline real-symbol-p 567,16525
(defun make-line-symbol 570,16583
(defun line-symbol-line 576,16824
(defun line-symbol-symbol 579,16895
(defun type-of 582,16968
(defun typep 603,17493
(defun-inline vector-with-fill-pointer-p 610,17690
(defun-inline vectorp 613,17776
(defun-inline vector-p 616,17848
(defun wta 619,17891

src/cl/functions/characters.lisp,1310
(defun alpha-char-p 3,74
(defun alphanumericp 7,200
(defmethod-inline char-bits 10,283
(defmethod-inline char-code 13,333
(defun char-downcase 16,396
(defmethod-inline char=21,561
(def-nary-pred char=24,647
(defun char-equal/2 26,678
(def-nary-pred char-equal 29,768
(defmethod-inline char>=31,810
(def-nary-pred char>=34,921
(defun char-greaterp/2 36,954
(def-nary-pred char-greaterp 39,1047
(defun char>/2 41,1094
(def-nary-pred char> 44,1168
(def-nary-pred char< 46,1199
(defun-inline char<=48,1230
(def-nary-pred char<=51,1313
(defun char-lessp/2 53,1346
(def-nary-pred char-lessp 56,1436
(defun-inline char</2 58,1477
(defmethod char-name 61,1557
(def-nary-pred char/=67,1733
(defun char-not-equal/2 69,1766
(def-nary-pred char-not-equal 72,1861
(defun char-not-greaterp/2 74,1910
(def-nary-pred char-not-greaterp 77,2008
(defun char-not-lessp/2 79,2063
(def-nary-pred char-not-lessp 82,2158
(defun char/=84,2207
(defun char-upcase 87,2269
(defmethod-inline code-char 92,2434
(defun digit-char-p/2 97,2539
(defun-inline digit-char-p 116,3139
(defun lower-case-p 120,3238
(defun both-case-p 125,3307
(defun graphic-char-p 129,3400
(defun name-char 134,3471
(defmethod-inline set-char-bit 137,3567
(defun-inline standard-char-p 140,3657
(defun upper-case-p 143,3716

src/cl/functions/initialize-format.lisp,31
(defun initialize-format 3,74

src/cl/functions/packages.lisp,1022
(defun abbreviate-package-name 3,74
(defun add-symbol 8,254
(defun apropos-1 15,461
(defun apropos-describe-symbol 32,931
(defun apropos-list 40,1151
(defun apropos 43,1231
(defun coerce-to-package 46,1308
(defun export 57,1588
(defun find-all-symbols 70,2050
(defun find-package 74,2156
(defun-inline find-symbol 82,2394
(defun find-symbol/3 85,2512
(defun import 101,3089
(defun in-package 110,3427
(defun find-or-make-package 116,3618
(defun-inline intern 120,3774
(defun intern/2 124,3909
(defun make-new-internal-symbol 131,4171
(defun list-all-packages 142,4567
(defun make-package 145,4626
(defun package-abbrev 171,5561
(defun package-nicknames 177,5710
(defvar *cltl2-exports*181,5878
(defvar *wcl-exports*961,18284
(defun initialize-package-structures 1093,20719
(defun package-use-list 1102,20987
(defun rename-package 1105,21089
(defun shadow 1110,21334
(defun shadowing-import 1126,21943
(defun unintern 1130,22063
(defun use-package 1134,22188
(defun write-package 1145,22674

src/cl/functions/sequences.lisp,2454
(defun complement/2 609,22435
(defun complement 612,22516
(defun concat-to-string-1 617,22645
(defun concat-to-string 630,22978
(defun concatenate 637,23235
(defun concat-to-vector 643,23447
(defun concat-to-vector-1 648,23633
(defun copy-seq 661,23966
(defun count-if 666,24066
(defun count 672,24212
(defun delete/8 679,24454
(defun list-delete-duplicates* 691,24868
(defun vector-delete-duplicates* 722,25798
(defun delete-duplicates 742,26618
(defun delete-list-backward 750,26920
(defun delete-list-forward 754,27014
(defun delete-vector-backward 769,27551
(defun delete-vector-forward 774,27760
(defun-inline delete 785,28146
(defun-inline elt/list 793,28409
(defun elt 796,28452
(defquantifier every 802,28544
(defun list-fill* 805,28593
(defun vector-fill* 809,28705
(defun fill 818,29134
(defun find/7 824,29306
(defun find-eq/simple-vector 835,29707
(defun find-if 841,29835
(defun find 848,30008
(defun length 867,30332
(defun make-sequence 872,30426
(defun make-similar-sequence 889,31065
(defun map 896,31264
(defquantifier notany 906,31718
(defun nreverse/vector 908,31750
(defun nreverse 911,31800
(defun position/7 916,31900
(defun position-if-not 927,32275
(defun position-if 940,32708
(defun position 945,32861
(defun remove-duplicates/list 964,33237
(defun remove-duplicates/vector 969,33381
(defun remove-duplicates 979,33760
(defun remove-if/list 985,34007
(defun remove-if-not 990,34145
(defun remove-if/vector 997,34412
(defun remove-if 1008,34782
(defun remove/list 1014,35054
(defun remove/vector 1019,35174
(defun remove 1022,35271
(defun replace/simple-string 1029,35561
(defun replace/simple-string-1 1032,35671
(defun-inline replace 1041,36066
(defun replace/6 1050,36376
(defun reverse/vector 1063,36894
(defun reverse 1070,37098
(defun search 1076,37205
(defun seq-test 1085,37577
(defun-inline set-elt/list 1090,37666
(defun set-elt 1093,37729
(defquantifier some 1100,37882
(defun sort 1106,37983
(defun stable-sort 1117,38345
(defun sort-list 1133,39189
(defun merge-lists* 1184,41184
(defun stable-sort-simple-vector 1209,42259
(defun stable-sort-vector 1212,42356
(defun merge 1215,42445
(defun subseq/list 1239,43406
(defun subseq/vector 1244,43527
(defun-inline subseq 1251,43742
(defun subseq-1 1254,43833
(defun substitute 1259,43967
(defun nsubstitute 1265,44258
(defun nlist-substitute* 1282,45057
(defun nvector-substitute* 1294,45555

src/cl/functions/condition.lisp,1351
(defun make-condition 14,638
(defun compute-restarts 23,970
(defun restart-print 26,1049
(defun restart-report 33,1274
(defun find-restart 41,1536
(defun invoke-restart 47,1757
(defun invoke-restart-interactively 52,1957
(defun condition-print 62,2307
(defun condition-report 70,2553
(defun assert-report 79,2880
(defun assert-prompt 86,3079
(defun simple-assertion-failure 97,3470
(defun read-evaluated-form 104,3712
(defun signal 108,3835
(defun coerce-to-condition 126,4566
(defun warn 149,5438
(defun error 164,5915
(defun cerror 170,6128
(defun break 176,6319
(defun show-restarts 185,6631
(defun invoke-debugger 191,6840
(defun invoke-debugger-1 200,7156
(defun gdbprint 210,7417
(defun gdbbacktrace 214,7506
(defun evaldebug 220,7701
(defun nullevaldebug 231,8155
(defun select-restart-option 241,8496
(defun prompt-for 248,8743
(defun prompt-for-value 254,8980
(defun abort-to-top-level 258,9091
(defun abort 261,9147
(defun continue 265,9216
(defun muffle-warning 268,9267
(defun store-value 271,9329
(defun use-value 274,9396
(defun symbol-function-error 277,9461
(define-debug-command :abort 312,10539
(define-debug-command :continue 317,10694
(define-debug-command :error 322,10861
(defun my-prompt-for-value 325,10935
(defun my-repl 328,11009
(defun my-print 337,11305
(defun my-apply 340,11366

src/cl/functions/defstruct.lisp,1245
(defun lookup-structure-info 3,74
(defun define-structure 6,146
(defun complete-structure-def 13,328
(defun add-structure-info 17,497
(defun defstruct-package 27,897
(defun inherited-structure-name-p 30,959
(defun structure-predicate-1 34,1084
(defun parent-structure 45,1424
(defun structure-children 49,1539
(defun all-current-structure-children 52,1628
(defun default-constructor-name 59,1876
(defun fixed-arg-constructor-name 63,2027
(defun constructor-arg-list 70,2280
(defun accessor-name 77,2548
(defun updater-name 84,2803
(defun predicate-name 90,3000
(defun fluid-predicate-name 96,3216
(defun copier-name 101,3383
(defun printer-name 104,3433
(defun reporter-name 109,3600
(defun all-slots 114,3769
(defun default-all-slots 130,4343
(defun fill-in-defstruct-option-info 142,4769
(defun parse-struct-slot-info 213,7716
(defun struct-new-structure-function 223,8025
(defun struct-set-slot-function 229,8178
(defun struct-get-slot-function 235,8330
(defun struct-copy-function 241,8470
(defun struct-type-check 248,8615
(defun-inline set-structure-elt 253,8730
(defun-inline structure-elt 256,8809
(defun parse-keyword-pairs 260,8922
(defun parse-new-and-used-slots 267,9159
(defun slot-used-p 275,9381

src/cl/functions/time.lisp,380
(defun get-decoded-time 3,74
(defun get-internal-real-time 6,150
(defun get-internal-run-time 9,208
(defun get-universal-time 12,269
(defun print-runtime-statistics 15,359
(defun time-zone 34,1193
(defun unix->universal-time 38,1293
(defun dst-check 81,2423
(defun decode-universal-time 85,2593
(defun make-universal-time 138,4536
(defun encode-universal-time 142,4672

src/cl/functions/math.lisp,3138
(defun abs 3,74
(defun-inline acos 8,128
(defun arith-error 11,179
(defmethod ash 15,325
(defun-inline asin 20,470
(defun atan/2 23,521
(defun atan 26,601
(defun bignum-div 29,650
(defun bignum-rem 32,727
(defun boole 35,804
(defun write-byte-specifier 54,1293
(defun-inline byte 58,1432
(defmethod ldb 61,1513
(defun ldb-1 64,1631
(defun-inline ldb/fixnum 70,1799
(defun ldb/bignum 73,1889
(defmethod dpb 77,1990
(defun dpb-1 80,2131
(defun dpb/fixnum 85,2282
(defun dpb/bignum 89,2409
(defun ldb-test 96,2599
(defun mask-field 99,2663
(defun mask-field-1 102,2762
(defun deposit-field 105,2843
(defun-inline ceiling/fixnum 108,2948
(defun-inline ceiling/float 113,3069
(defun ceiling 117,3173
(defun-inline complex 122,3316
(defun make-complex 125,3409
(defun-inline cos 131,3560
(defmethod decode-float 134,3609
(defmethod integer-decode-float 139,3729
(defun / 142,3815
(defun ensure-bignum 149,3990
(defun ensure-fixnum 154,4082
(defun evenp 158,4140
(defun-inline exp 161,4191
(defun expt 164,4240
(defun expt/fixnum 169,4360
(defun expt/float 178,4619
(defun ffloor 181,4681
(defmethod float-radix 187,4846
(defun-inline float 189,4885
(defun float-1 192,4941
(defun-inline floor/fixnum 200,5157
(defun-inline floor/float 203,5225
(defun floor 207,5329
(defun floor/1v 212,5466
(defun gcd/2 215,5518
(defun gcd 221,5602
(def-nary-pred >=228,5744
(def-nary-pred > 230,5770
(defmethod imagpart 232,5798
(defmethod integer-length 236,5911
(defun lcm/2 242,6075
(defun lcm 245,6136
(def-nary-pred <=252,6278
(def-nary-pred < 254,6304
(defun-inline log/10 256,6329
(defun log/e 259,6383
(defun log 262,6427
(defmethod logand/2 269,6601
(def-nary logand 274,6764
(defun logandc1 276,6792
(defun logandc2 279,6844
(defmethod logeqv/2 282,6896
(def-nary logeqv 286,7001
(defmethod-inline logior/2 288,7029
(def-nary logior 291,7098
(defun lognand 293,7126
(defun-inline lognor 296,7177
(defmethod-inline lognot 299,7234
(defmethod logbitp 302,7288
(defun logtest 307,7441
(defun-inline logorc1 310,7491
(defun-inline logorc2 313,7549
(defmethod-inline logxor/2 316,7607
(def-nary logxor 319,7676
(defun make-ratio 321,7704
(defun-inline max/2 333,8046
(def-nary max 336,8093
(defun-inline min/2 338,8115
(def-nary min 341,8162
(defun - 343,8184
(defun-inline minusp 350,8340
(defun mod 353,8377
(def-nary-pred = =358,8505
(defun num-not-equal-p 360,8536
(def-nary-pred /=363,8597
(defmethod numerator 365,8633
(defmethod denominator 368,8687
(defun oddp 371,8743
(defun-inline 1- 374,8791
(defun-inline 1+ 377,8824
(defun + 380,8857
(defun-inline plusp 387,8995
(defun rationalize 390,9031
(defun rational 393,9071
(defun rational/float 399,9226
(defmethod realpart 406,9412
(defmethod rem 409,9467
(defun round/2 414,9599
(defun-inline round 430,10141
(defmethod scale-float 433,10211
(defun signum 436,10287
(defun-inline sin 443,10395
(defun sqrt 446,10444
(defun tan 451,10597
(defun * 454,10639
(defun-inline truncate 461,10820
(defun truncate/2 464,10896
(defun truncate-float/2 477,11431
(defun-inline zerop 481,11528

src/cl/c-src/linux-interrupts.c,22
signal_handler 8,143

src/cl/c-src/io.c,310
FILE *get_file_ptr(get_file_ptr12,245
int file_write_date(22,516
int file_length(34,716
LP truename(48,908
LP probe_file(63,1264
int fd_listen(67,1336
int file_listen(82,1693
LP read_byte(86,1762
int write_byte(137,3216
LP read_vector(178,4433
int write_vector(203,4998
int string_column(215,5290

src/cl/c-src/error.c,207
void select_restart_option(7,117
void abort_to_top_level(11,189
void lisp_break(15,257
void lisp_debug(21,323
void arg_limit_exceeded(26,386
void wna(31,548
void wna_low(41,820
void wna_high(48,1009

src/cl/c-src/array.c,581
#define VECTOR_BOUNDS_CHECK(5,96
LP simple_vref_1(9,245
LP set_simple_vref_1(39,1434
int multi_to_vector_index(88,2897
LP simple_vref(109,3488
LP set_simple_vref(116,3625
LP simple_aref(122,3786
LP set_simple_aref(127,3933
LP complex_vref(132,4104
LP set_complex_vref(139,4323
LP complex_aref(147,4636
LP set_complex_aref(151,4721
LP c_aref(156,4831
LP c_set_aref(169,5242
LP vref(184,5719
LP set_vref(195,5952
LP initialize_array(205,6218
LP c_to_lisp_vector(274,7545
LP c_to_lisp_string(285,7998
LP copy_c_to_lisp_string(294,8231
LP lisp_to_c_array(308,8513

src/cl/c-src/time.c,325
static int start_realtime;8,164
int unix_time_of_day 12,288
void init_run_time(20,422
int timeval_to_internal_time(24,492
int internal_system_run_time(28,596
int internal_user_run_time(35,744
int internal_real_time 42,890
void init_real_time(51,1075
int unix_timezone(59,1203
int unix_daylight_savings_time(65,1292

src/cl/c-src/generic-apply.c,26
LP apply_function_1(5,96

src/cl/c-src/closure.h,1941
typedef struct closure 17,435
  unsigned short movq1;18,460
  unsigned char oe_addr[oe_addr19,484
  unsigned char movl1[movl120,512
  unsigned char env_low32[env_low3221,538
  unsigned char movl2[movl222,568
  unsigned char env_high32[env_high3223,594
  unsigned char movq2[movq224,625
  unsigned char code_ptr[code_ptr25,651
  unsigned char jmp[jmp26,680
  unsigned char nop;27,704
} CLOSURE;28,725
#define CLOSURE_ENV_LOW32(30,737
#define CLOSURE_ENV_HIGH32(31,816
#define CLOSURE_ENV(33,904
typedef struct closure 38,1080
  unsigned short movl;39,1105
  unsigned short oe_low;40,1138
  unsigned short oe_high;41,1163
  unsigned short env_low;42,1189
  unsigned short env_high;43,1215
  unsigned char  movleax;44,1242
  unsigned char code_offset0;45,1276
  unsigned char code_offset1;46,1326
  unsigned char code_offset2;47,1356
  unsigned char code_offset3;48,1386
  unsigned char jmpeax0;49,1416
  unsigned char jmpeax1;50,1450
  unsigned char pad0;51,1484
  unsigned char pad1;52,1506
  unsigned char pad2;53,1528
} CLOSURE;54,1550
#define CLOSURE_OE_ADDR(58,1673
#define CLOSURE_ENV(59,1739
#define CLOSURE_CODE(60,1801
#define HI22(78,2266
#define LOW10(79,2325
typedef struct sparc_closure 81,2373
  unsigned long save;82,2404
  unsigned long sethi_oe_opcode:sethi_oe_opcode84,2427
  unsigned long sethi_oe:sethi_oe85,2463
  unsigned long add_oe_opcode:add_oe_opcode87,2493
  unsigned  long add_oe:add_oe88,2527
  unsigned long sethi_oe_addr_opcode:sethi_oe_addr_opcode90,2556
  unsigned long sethi_oe_addr:sethi_oe_addr91,2598
  unsigned long sethi_code_opcode:sethi_code_opcode93,2633
  unsigned  long sethi_code:sethi_code94,2671
  unsigned long st_oe_opcode:st_oe_opcode96,2704
  unsigned long st_oe:st_oe97,2737
  unsigned long jmpl_opcode:jmpl_opcode99,2764
  unsigned long jmpl_code:jmpl_code100,2796
  unsigned long restore;102,2827
} CLOSURE;103,2852

src/cl/c-src/misc.c,232
PROCEDURE ubf_procedure 9,181
UBV ubv_marker=10,243
LP lookup_keyword(29,596
LP make_symbol(50,982
LP new_foreign_ptr(67,1393
int getosversion(83,1781
int host_bits_per_word(93,1953
void repl(97,2011
void init_wcl(101,2045

src/cl/c-src/arith.c,1232
#define swap(9,170
#define abs(10,218
mpz_t least_positive_bignum;17,417
mpz_t least_negative_bignum;18,446
LP new_float(23,568
int print_double_float(32,754
int double_float_to_string(48,1194
double double_round(63,1565
int double_truncate 71,1663
LP bignum_err(78,1749
LP ratio_err(82,1814
LP complex_err(87,1878
LP new_bignum(91,1945
LP normalize_bignum(104,2370
double bignum_to_double(119,2660
LP long_to_bignum(123,2733
LP fixnum_to_bignum(131,2853
LP bignum_rem(140,2996
LP bignum_logand(148,3154
LP bignum_length(156,3314
LP ulong_to_bignum(164,3434
long bignum_to_long(172,3569
unsigned long bignum_to_ulong(179,3657
LP bignum_add(187,3765
LP bignum_subtract(195,3878
LP bignum_multiply(203,3998
LP bignum_divide(211,4118
LP bignum_div(220,4245
LP addition_overflow_handler(225,4346
LP subtraction_overflow_handler(239,4630
LP multiply_overflow_handler(254,4918
LP add(269,5203
LP subtract(333,6977
LP multiply(407,9094
LP divide(471,10885
LP num_equal_p(556,13182
LP greaterp(621,14996
LP geq_p(696,17181
LP lessp(771,19372
LP leq_p(846,21554
LP c_eql(921,23745
double float_significand(933,23994
int float_exponent(939,24083
int int_length(946,24178
void init_arith(954,24293

src/cl/c-src/generic-loader.c,79
#define DIGIT_TO_INT(8,202
#define UPCASE(11,289
LP intern_if_needed(15,453

src/cl/c-src/dynamic.c,157
UW_POINT *uw_top uw_top5,96
UW_POINT *find_uw_tag(find_uw_tag7,122
void verify_chain(33,672
LP throw(42,828
LP dynamic_go(61,1364
int unwind(69,1471

src/cl/c-src/eval-code.c,110
char* gdb_lambda_string 10,582
LP use_arg(12,625
LP eval_closure_code(21,899
LP make_eval_closure(76,2763

src/cl/c-src/memory.c,3347
#define NUMBER_OF_REGS_TO_SCAN 12,229
#define NUMBER_OF_REGS_TO_SCAN 16,285
#define PAGE_POWER 19,328
#define BYTES_PER_PAGE 21,350
#define WORDS_PER_PAGE 22,391
#define PAGE_OFFSET_MASK 23,444
#define PAGE_BYTE_OFFSET(24,490
#define PAGE_TO_ADDRESS(25,552
#define ADDRESS_TO_PAGE(26,624
#define NEXT_PAGE(27,687
#define ROUND_TO_WORD(28,750
#define ROUND_TO_PAGE(30,894
#define CORRECT_ZERO_OBJECT_SIZE(35,1176
#define IN_HEAP(37,1241
#define DOUBLE_ALIGNMENT_MASK 41,1354
#define DOUBLE_ALIGNEDP(42,1405
#define END_LOCK_LIST 44,1482
#define UNSCANNED 45,1507
#define CONTIG_LOCK 46,1532
#define PAGE_LOCKED(48,1558
#define PAGE_UNLOCKED(53,1687
typedef struct page_info 66,2119
  long next_lock;67,2146
  int generation;68,2164
  char contig_flag;69,2182
} PAGE_INFO;70,2202
typedef struct symbol_record 72,2216
  char *package_name;package_name73,2247
  unsigned long *symbols;symbols74,2269
  struct symbol_record *next;next75,2295
} SYMBOL_RECORD;76,2325
PAGE_INFO *pageinfo pageinfo80,2402
LP first_ptr 81,2427
LP frontier_ptr 82,2445
LP frontier_limit_ptr 83,2466
long current_generation 85,2494
long next_generation 86,2523
long last_page 87,2549
long total_pages 88,2569
long allocated_pages 89,2591
long frontier_page 90,2617
long lock_list 91,2641
long remaining_page_bytes 93,2662
unsigned long *stack_bottom stack_bottom94,2693
unsigned long *stack_top stack_top95,2726
long debug_gc 96,2756
LP dynamic_frontier_ptr 98,2776
LP dynamic_frontier_limit_ptr 99,2805
long dynamic_remaining_page_bytes 100,2840
long static_total_pages 102,2880
LP static_first_ptr 103,2909
LP static_frontier_ptr 104,2934
LP static_frontier_limit_ptr 105,2962
long static_remaining_page_bytes 106,2996
#define DEBUG_GC 109,3070
SYMBOL_RECORD *registered_symbols registered_symbols111,3090
long delay_symbol_interns 113,3130
long inside_gc_flag 115,3162
long print_gc_messages_flag 116,3187
long gc_count 117,3220
void switch_to_static_space(119,3240
void switch_to_dynamic_space(129,3563
long set_gc_messages(139,3887
long heap_start(144,3964
long heap_frontier(148,4015
long heap_frontier_limit(152,4072
long heap_page_size(156,4141
long total_heap_pages(160,4194
long free_heap_pages(164,4246
long total_static_pages(177,4522
long free_static_bytes(181,4583
terminate_page(185,4672
void allocate_pages(196,4931
LP alloc_words_1(257,6727
LP c_cons(280,7524
LP alloc_words(297,8019
LP alloc_memory(301,8115
LP alloc_bits(318,8570
LP alloc_bytes(326,8800
LP alloc_shorts(333,9022
LP alloc_float(342,9330
unsigned long object_size(365,10129
unsigned long gc_call_count(471,13980
unsigned long kbytes_to_pages(475,14035
void * mmap_heap(481,14180
void init_memory_allocator(490,14346
static char* unknown_tag_name 534,16029
char* tag_name(536,16077
void check_memory(654,20438
void intern_symbols(715,22143
void register_symbols(727,22534
void intern_static_symbols(741,22887
void scan_static_symbols(750,23091
long scan_memory_segment(761,23333
void scan_stack(811,24827
LP move_object(820,25025
LP move_object_unless_locked(858,25892
void scan_misc_static_pointers(868,26063
void scan_static_space(874,26166
void scan_root_set(883,26371
void move_sub_objects(891,26521
long scan_page(1086,32871
void scan_pages(1128,33933
void full_gc(1146,34269

src/cl/c-src/funcall.c,131
LP apply_function(10,300
LP ubf_handler(53,1236
LP p_lsp_FUNCALL(71,1612
LP p_lsp_APPLY(81,1851
LP p_lsp_EVAL_2DAPPLY(92,2143

src/cl/c-src/old-sparc-support/solaris-socket.c,117
#define X_UNIX_PATH 30,711
#define OLD_UNIX_PATH 31,757
#define X_UNIX_PATH 33,815
int connect_to_server 43,1058

src/cl/c-src/old-sparc-support/sparc-interrupts.c,22
signal_handler 8,143

src/cl/c-src/closure.c,116
LP OE 13,349
void flush_cache_addresses(15,404
LP new_closure(24,646
LP closure_oe(119,3450
LP new_oe(139,3847

src/cl/c-src/init.c,333
#define DEFAULT_DYNAMIC_MEMORY_SIZE 12,225
#define DEFAULT_STATIC_MEMORY_SIZE 13,266
int command_line_argc;15,306
char **command_line_argv;command_line_argv16,329
int get_memory_size(18,356
void unbuffer_interactive_streams(32,670
void init_signals(40,843
LP command_line_argument(50,1111
void start_initialization(58,1283

src/cl/c-src/lisp.h,9848
#define linux_pc3,77
#define x866,111
#define ARRAY_TAG 29,722
#define OTHER_TAG 30,781
#define VECTOR_TAG 31,840
#define MULTI_ARRAY_TAG 32,899
#define NUMBER_TAG 33,958
#define TAG_MASK 34,1017
#define VECTOR_TAG_MASK 36,1078
#define NUMBER_TAG_MASK 37,1137
#define VECTOR_MASK 39,1197
#define ARRAY_MASK 40,1257
#define SIMPLE_VECTOR_TAG 42,1318
#define SIMPLE_MULTI_ARRAY_TAG 43,1377
#define COMPLEX_VECTOR_TAG 44,1436
#define COMPLEX_MULTI_ARRAY_TAG 45,1503
#define ARRAY_ELEMENT_TYPE_MASK 47,1563
#define ELEMENT_TYPE_BIT 48,1623
#define ELEMENT_TYPE_SIGNED_8BIT 49,1683
#define ELEMENT_TYPE_UNSIGNED_8BIT 50,1743
#define ELEMENT_TYPE_CHAR 51,1803
#define ELEMENT_TYPE_SIGNED_16BIT 52,1863
#define ELEMENT_TYPE_UNSIGNED_16BIT 53,1923
#define ELEMENT_TYPE_SIGNED_32BIT 54,1983
#define ELEMENT_TYPE_UNSIGNED_32BIT 55,2043
#define ELEMENT_TYPE_PTR 56,2103
#define ELEMENT_TYPE_FLOAT 57,2163
#define TYPE_SIMPLE_BIT_VECTOR 59,2224
#define TYPE_SIMPLE_SIGNED_8BIT_VECTOR 60,2284
#define TYPE_SIMPLE_UNSIGNED_8BIT_VECTOR 61,2344
#define TYPE_SIMPLE_STRING 62,2404
#define TYPE_SIMPLE_SIGNED_16BIT_VECTOR 63,2464
#define TYPE_SIMPLE_UNSIGNED_16BIT_VECTOR 64,2524
#define TYPE_SIMPLE_SIGNED_32BIT_VECTOR 65,2584
#define TYPE_SIMPLE_UNSIGNED_32BIT_VECTOR 66,2644
#define TYPE_SIMPLE_VECTOR 67,2704
#define TYPE_SIMPLE_FLOAT_VECTOR 68,2764
#define TYPE_SIMPLE_BIT_MULTI_ARRAY 70,2825
#define TYPE_SIMPLE_SIGNED_8BIT_MULTI_ARRAY 71,2885
#define TYPE_SIMPLE_UNSIGNED_8BIT_MULTI_ARRAY 72,2945
#define TYPE_SIMPLE_CHAR_MULTI_ARRAY 73,3005
#define TYPE_SIMPLE_SIGNED_16BIT_MULTI_ARRAY 74,3065
#define TYPE_SIMPLE_UNSIGNED_16BIT_MULTI_ARRAY 75,3125
#define TYPE_SIMPLE_SIGNED_32BIT_MULTI_ARRAY 76,3185
#define TYPE_SIMPLE_UNSIGNED_32BIT_MULTI_ARRAY 77,3245
#define TYPE_SIMPLE_PTR_MULTI_ARRAY 78,3305
#define TYPE_SIMPLE_FLOAT_MULTI_ARRAY 79,3365
#define TYPE_COMPLEX_BIT_VECTOR 82,3427
#define TYPE_COMPLEX_SIGNED_8BIT_VECTOR 83,3487
#define TYPE_COMPLEX_UNSIGNED_8BIT_VECTOR 84,3547
#define TYPE_COMPLEX_CHAR_VECTOR 85,3607
#define TYPE_COMPLEX_SIGNED_16BIT_VECTOR 86,3667
#define TYPE_COMPLEX_UNSIGNED_16BIT_VECTOR 87,3727
#define TYPE_COMPLEX_SIGNED_32BIT_VECTOR 88,3787
#define TYPE_COMPLEX_UNSIGNED_32BIT_VECTOR 89,3847
#define TYPE_COMPLEX_PTR_VECTOR 90,3907
#define TYPE_COMPLEX_FLOAT_VECTOR 91,3967
#define TYPE_COMPLEX_BIT_MULTI_ARRAY 94,4029
#define TYPE_COMPLEX_SIGNED_8BIT_MULTI_ARRAY 95,4089
#define TYPE_COMPLEX_UNSIGNED_8BIT_MULTI_ARRAY 96,4149
#define TYPE_COMPLEX_CHAR_MULTI_ARRAY 97,4209
#define TYPE_COMPLEX_SIGNED_16BIT_MULTI_ARRAY 98,4269
#define TYPE_COMPLEX_UNSIGNED_16BIT_MULTI_ARRAY 99,4329
#define TYPE_COMPLEX_SIGNED_32BIT_MULTI_ARRAY 100,4389
#define TYPE_COMPLEX_UNSIGNED_32BIT_MULTI_ARRAY 101,4449
#define TYPE_COMPLEX_PTR_MULTI_ARRAY 102,4509
#define TYPE_COMPLEX_FLOAT_MULTI_ARRAY 103,4569
#define TYPE_BIGNUM 106,4631
#define TYPE_RATIO 107,4691
#define TYPE_FLOAT 108,4751
#define TYPE_COMPLEX 109,4811
#define TYPE_SYMBOL 111,4872
#define TYPE_LINE_SYMBOL 112,4932
#define TYPE_CHARACTER 114,4993
#define TYPE_CONS 115,5053
#define TYPE_OE 116,5113
#define TYPE_FOREIGN_PTR 117,5173
#define TYPE_PROCEDURE 118,5233
#define TYPE_STRUCTURE 119,5293
#define TYPE_VOID 120,5353
#define TYPE_CLOSURE 121,5413
#define TYPE_FORWARDING_PTR 122,5473
#define TYPE_UBV 123,5533
#define TYPE_PADDING 124,5593
#define TYPE_END_OF_PAGE 125,5653
#define LP 127,5714
#define LPL 128,5741
#define LREF(129,5769
#define DEREF(130,5847
#define ADD_TAG(131,5918
#define REMOVE_TAG(132,5952
#define LD 133,5989
#define LDREF(134,6014
#define SYMREF(135,6096
#define NULL 136,6170
#define NIL 137,6185
#define T 138,6213
#define UBV_MARKER 139,6237
#define UBK_MARKER 140,6273
#define MOST_POSITIVE_FIXNUM 142,6310
#define MOST_NEGATIVE_FIXNUM 143,6378
#define FX_TO_LONG(145,6442
#define FX_TO_ULONG(146,6484
#define LONG_TO_FX(147,6551
#define LONG_TO_INTEGER(148,6599
#define ULONG_TO_INTEGER(152,6778
#define INTEGER_TO_LONG(156,6943
#define INTEGER_TO_ULONG(157,7019
#define FIXNUMP(159,7099
#define OTHER_PTRP(160,7152
#define HEADER(162,7208
#define LHEADER(163,7274
#define TAG(164,7324
#define LEN_FIELD(165,7371
#define PASS_TO_C(166,7413
#define LISTP(170,7583
#define NEW_PROCEDURE 172,7660
#define NEW_CONS 173,7712
#define OPEN_PROCEDURE_FLAG 177,7787
#define CLOSED_PROCEDURE_FLAG 178,7817
#define FUNCALLABLE_INSTANCE_FLAG 179,7852
#define FUNCALLABLE_INSTANCE_HEADER 180,7891
#define CLOSED_PROCEDURE_HEADER 182,7990
#define NEW_OE(184,8077
#define GET_OE_SLOT(185,8109
#define SET_OE_SLOT(186,8181
#define MAKE_CLOSURE(187,8267
#define COERCE_TO_FUNCTION(188,8325
#define ICALL(190,8390
#define CODE_PTR(191,8464
typedef struct double_float 195,8566
  unsigned long header;196,8596
  double number;197,8620
} FLOAT;198,8637
typedef struct ratio 200,8647
  unsigned long header;201,8670
  LP numerator;202,8694
  LP denominator;203,8710
} RATIO;204,8728
typedef struct complex 206,8738
  unsigned long header;207,8763
  LP real;208,8787
  LP imaginary;209,8798
} COMPLEX;210,8814
typedef  struct character 212,8826
  unsigned long header;213,8855
  unsigned int char_code;214,8879
} CHARACTER;215,8905
typedef struct procedure 219,9048
  unsigned long header;220,9075
  unsigned char *code_pointer;code_pointer221,9099
} PROCEDURE;222,9130
typedef struct funcallable_instance 224,9144
  unsigned long header;225,9182
  unsigned char *code_pointer;code_pointer226,9206
  LP wrapper;227,9237
  LP slots;228,9251
} FUNCALLABLE_INSTANCE;229,9263
typedef struct symbol 231,9288
  unsigned long header;232,9312
  LP value;233,9336
  LP package;234,9348
  LP self_link;235,9362
  LP plist;236,9421
  LP function;237,9433
  LP hashcode;238,9448
  unsigned long flags;239,9463
  LP name;240,9486
} SYMBOL;241,9497
typedef struct line_symbol 244,9573
  unsigned long header;245,9602
  LP line;246,9626
  LP padding;247,9637
  LP self_link;248,9681
} LINE_SYMBOL;249,9698
typedef struct cons 251,9714
  unsigned long header;252,9736
  LP car;253,9760
  LP cdr;254,9770
} CONS;255,9780
typedef struct simple_multi_array 257,9789
  unsigned long header;258,9825
  LP underlying_vector;259,9849
  LP dims_vector;260,9873
  LP multiplier_vector;261,9891
} SIMPLE_MULTI_ARRAY;262,9915
typedef struct complex_vector 264,9938
  unsigned long header;265,9970
  LP underlying_vector;266,9994
  LP fill_pointer;267,10018
  LP displaced_index_offset;268,10037
} COMPLEX_VECTOR;269,10066
typedef struct complex_multi_array 271,10085
  unsigned long header;272,10122
  LP underlying_vector;273,10146
  LP dims_vector;274,10170
  LP multiplier_vector;275,10188
  LP displaced_index_offset;276,10212
} COMPLEX_MULTI_ARRAY;277,10241
typedef struct ubv 279,10265
  unsigned long header;280,10286
  unsigned long pad;281,10310
} UBV;282,10331
typedef struct foreign_pointer 284,10339
  unsigned long header;285,10372
  LP pointer;286,10396
  LP type;287,10410
} FOREIGN_POINTER;288,10421
typedef struct bignum_header 291,10490
  unsigned long header;292,10521
  int alloced_size;293,10545
  int used_size;294,10565
  long *bits_ptr;bits_ptr295,10620
} BIGNUM_HEADER;296,10682
typedef struct bignum 298,10700
  BIGNUM_HEADER header;299,10724
  long bits[bits300,10748
} BIGNUM;301,10804
#define MAKE_SIMPLE_STRING(304,10886
#define MAKE_SYMBOL(308,11045
#define MAKE_FLOAT(312,11229
#define MAKE_RATIO(315,11299
#define MAKE_COMPLEX(318,11410
#define MAKE_CONS(321,11503
#define MAKE_PROCEDURE(324,11581
#define NEW_FLOAT(331,11760
#define NEW_CHAR(332,11809
#define NEW_FPTR(333,11867
#define RAW_FLOAT(336,12005
#define RAW_CHAR(337,12073
#define RAW_FPTR(338,12147
#define ARGC 341,12250
#define CALL_ARG_LIMIT 342,12277
#define MULTIPLE_VALUE_LIMIT 343,12304
#define APPLY_ARGS_LIMIT 344,12337
typedef struct mv 346,12418
  ARGC argc;347,12438
  long  return_flag;348,12451
  LP values[values349,12472
} MV;350,12507
#define MV_HOLDER_P(352,12514
#define BEGIN_MV_CALL(354,12569
#define MV_CALL(360,12731
#define SET_MV_RETURN_FLAG(364,12878
#define SET_MV_RETURN_COUNT(366,12952
#define SET_MV_RETURN_VALUE(368,13030
#define GET_MV_RETURN_COUNT(371,13123
#define MV_RETURN_P(373,13187
#define SV_RETURN_P(375,13250
#define END_MV_CALL 377,13313
#define REAL_ARGC(380,13340
#define BEGIN_ANSI_VAR_ARGS(384,13443
#define NEXT_VAR_ARG 388,13538
#define END_VAR_ARGS 390,13574
#define BEGIN_VAR_VALUES 394,13618
#define NEXT_VAR_VALUE(397,13715
#define END_VAR_VALUES 399,13777
#define DYNAMIC_REST_HOLDER(402,13807
#define RESTV_HOLDER(404,13866
#define RESTIFY(406,13921
#define DYNAMIC_RESTIFY(420,14415
#define RESTVIFY(437,14963
#define BEGIN_KEY_INIT(445,15319
#define END_KEY_INIT 448,15423
#define UW_CATCH 451,15482
#define UW_PROTECT 452,15508
#define UW_SPECBIND 453,15534
#define UW_DYNAMIC_TAG 454,15560
typedef struct uw_point 458,15724
  struct uw_point *next;next459,15750
  char type;460,15775
  MV *mv_holder;mv_holder461,15788
  LP single_throw_value;462,15825
  jmp_buf c_env;463,15850
  struct uw_point *continue_dest;continue_dest464,15867
  LP name;465,15901
  LP value;466,15912
} UW_POINT;467,15924
#define POP_UW_POINT 471,15963
#define PUSH_UW_POINT(473,16007
#define BEGIN_CATCH(475,16069
#define END_CATCH(485,16410
#define BEGIN_SPEC_BIND(490,16543
#define END_SPEC_BIND(498,16757
#define BEGIN_UW_PROTECT_BODY 503,16846
#define  BEGIN_UW_PROTECT_CLEANUP 510,17019
#define CONTINUE_FROM_PROTECT 514,17131
#define THROW(519,17250
#define BEGIN_DYNAMIC_TAG(521,17313
#define END_DYNAMIC_TAG 528,17535
#define GOTO_DYNAMIC_TAG(532,17589
#define UPDATE_VAR(536,17746
#define UPDATE_FUNC(539,17870
#define UPDATE_MACRO(542,17991

src/cl/c-src/chars.c,56
#define CH_HDR 5,96
CHARACTER char_tab[char_tab7,140

src/cl/c-src/linux-pc-socket.c,117
#define X_UNIX_PATH 30,711
#define OLD_UNIX_PATH 31,757
#define X_UNIX_PATH 33,815
int connect_to_server 43,1058

src/cl/c-src/X11/Xmd.h,1069
#define XMD_H 26,1238
#define WORD64	36,1429
#define UNSIGNEDBITFIELDS	37,1473
#define MUSTCOPY46,1702
#define SIZEOF(62,2360
#define SIZEOF(64,2391
#define B32 84,2823
#define B16 85,2839
#define B3287,2861
#define B1688,2873
typedef long           INT32;91,2893
typedef short          INT16;92,2923
typedef char           INT8;93,2953
typedef unsigned long CARD32;95,2983
typedef unsigned short CARD16;96,3013
typedef unsigned char  CARD8;97,3044
typedef unsigned long		BITS32;99,3075
typedef unsigned short		BITS16;100,3106
typedef unsigned char		BYTE;101,3138
typedef unsigned char            BOOL;103,3168
#define cvtINT8toInt(110,3334
#define cvtINT16toInt(111,3424
#define cvtINT32toInt(112,3514
#define cvtINT8toLong(113,3604
#define cvtINT16toLong(114,3650
#define cvtINT32toLong(115,3697
#define cvtINT8toInt(117,3750
#define cvtINT16toInt(118,3782
#define cvtINT32toInt(119,3815
#define cvtINT8toLong(120,3848
#define cvtINT16toLong(121,3881
#define cvtINT32toLong(122,3915
#define NEXTPTR(131,4092
#define NEXTPTR(137,4319

src/cl/c-src/X11/Xprotostr.h,782
#define XPROTOSTRUCTS_H4,91
typedef struct _xSegment 33,1384
    INT16 x1 B16,34,1411
    INT16 x1 B16, y1 B16,34,1411
    INT16 x1 B16, y1 B16, x2 B16,34,1411
    INT16 x1 B16, y1 B16, x2 B16, y2 B16;34,1411
} xSegment;35,1453
typedef struct _xPoint 39,1479
	INT16		x B16,40,1504
	INT16		x B16, y B16;40,1504
} xPoint;41,1526
typedef struct _xRectangle 43,1537
    INT16 x B16,44,1566
    INT16 x B16, y B16;44,1566
    CARD16  width B16,45,1590
    CARD16  width B16, height B16;45,1590
} xRectangle;46,1625
typedef struct _xArc 50,1653
    INT16 x B16,51,1676
    INT16 x B16, y B16;51,1676
    CARD16   width B16,52,1700
    CARD16   width B16, height B16;52,1700
    INT16   angle1 B16,53,1736
    INT16   angle1 B16, angle2 B16;53,1736
} xArc;54,1772

src/cl/c-src/X11/Xproto.h,62780
#define XPROTO_H27,929
#define sz_xSegment 61,2452
#define sz_xPoint 62,2474
#define sz_xRectangle 63,2494
#define sz_xArc 64,2518
#define sz_xConnClientPrefix 65,2537
#define sz_xConnSetupPrefix 66,2569
#define sz_xConnSetup 67,2599
#define sz_xPixmapFormat 68,2624
#define sz_xDepth 69,2651
#define sz_xVisualType 70,2671
#define sz_xWindowRoot 71,2697
#define sz_xTimecoord 72,2723
#define sz_xHostEntry 73,2747
#define sz_xCharInfo 74,2771
#define sz_xFontProp 75,2795
#define sz_xTextElt 76,2818
#define sz_xColorItem 77,2840
#define sz_xrgb 78,2865
#define sz_xGenericReply 79,2883
#define sz_xGetWindowAttributesReply 80,2911
#define sz_xGetGeometryReply 81,2951
#define sz_xQueryTreeReply 82,2983
#define sz_xInternAtomReply 83,3013
#define sz_xGetAtomNameReply 84,3044
#define sz_xGetPropertyReply 85,3076
#define sz_xListPropertiesReply 86,3108
#define sz_xGetSelectionOwnerReply 87,3143
#define sz_xGrabPointerReply 88,3181
#define sz_xQueryPointerReply 89,3213
#define sz_xGetMotionEventsReply 90,3246
#define sz_xTranslateCoordsReply 91,3282
#define sz_xGetInputFocusReply 92,3318
#define sz_xQueryKeymapReply 93,3352
#define sz_xQueryFontReply 94,3384
#define sz_xQueryTextExtentsReply 95,3414
#define sz_xListFontsReply 96,3451
#define sz_xGetFontPathReply 97,3481
#define sz_xGetImageReply 98,3513
#define sz_xListInstalledColormapsReply 99,3542
#define sz_xAllocColorReply 100,3585
#define sz_xAllocNamedColorReply 101,3616
#define sz_xAllocColorCellsReply 102,3652
#define sz_xAllocColorPlanesReply 103,3688
#define sz_xQueryColorsReply 104,3725
#define sz_xLookupColorReply 105,3757
#define sz_xQueryBestSizeReply 106,3789
#define sz_xQueryExtensionReply 107,3823
#define sz_xListExtensionsReply 108,3858
#define sz_xSetMappingReply 109,3893
#define sz_xGetKeyboardControlReply 110,3924
#define sz_xGetPointerControlReply 111,3963
#define sz_xGetScreenSaverReply 112,4001
#define sz_xListHostsReply 113,4036
#define sz_xSetModifierMappingReply 114,4066
#define sz_xError 115,4105
#define sz_xEvent 116,4126
#define sz_xKeymapEvent 117,4147
#define sz_xReq 118,4174
#define sz_xResourceReq 119,4192
#define sz_xCreateWindowReq 120,4218
#define sz_xChangeWindowAttributesReq 121,4249
#define sz_xChangeSaveSetReq 122,4290
#define sz_xReparentWindowReq 123,4321
#define sz_xConfigureWindowReq 124,4354
#define sz_xCirculateWindowReq 125,4388
#define sz_xInternAtomReq 126,4421
#define sz_xChangePropertyReq 127,4449
#define sz_xDeletePropertyReq 128,4482
#define sz_xGetPropertyReq 129,4515
#define sz_xSetSelectionOwnerReq 130,4545
#define sz_xConvertSelectionReq 131,4581
#define sz_xSendEventReq 132,4616
#define sz_xGrabPointerReq 133,4644
#define sz_xGrabButtonReq 134,4674
#define sz_xUngrabButtonReq 135,4703
#define sz_xChangeActivePointerGrabReq 136,4734
#define sz_xGrabKeyboardReq 137,4776
#define sz_xGrabKeyReq 138,4807
#define sz_xUngrabKeyReq 139,4833
#define sz_xAllowEventsReq 140,4861
#define sz_xGetMotionEventsReq 141,4890
#define sz_xTranslateCoordsReq 142,4924
#define sz_xWarpPointerReq 143,4958
#define sz_xSetInputFocusReq 144,4988
#define sz_xOpenFontReq 145,5020
#define sz_xQueryTextExtentsReq 146,5047
#define sz_xListFontsReq 147,5081
#define sz_xSetFontPathReq 148,5108
#define sz_xCreatePixmapReq 149,5137
#define sz_xCreateGCReq 150,5168
#define sz_xChangeGCReq 151,5195
#define sz_xCopyGCReq 152,5222
#define sz_xSetDashesReq 153,5247
#define sz_xSetClipRectanglesReq 154,5275
#define sz_xCopyAreaReq 155,5311
#define sz_xCopyPlaneReq 156,5338
#define sz_xPolyPointReq 157,5366
#define sz_xPolySegmentReq 158,5394
#define sz_xFillPolyReq 159,5424
#define sz_xPutImageReq 160,5451
#define sz_xGetImageReq 161,5478
#define sz_xPolyTextReq 162,5505
#define sz_xImageTextReq 163,5532
#define sz_xCreateColormapReq 164,5560
#define sz_xCopyColormapAndFreeReq 165,5593
#define sz_xAllocColorReq 166,5631
#define sz_xAllocNamedColorReq 167,5660
#define sz_xAllocColorCellsReq 168,5694
#define sz_xAllocColorPlanesReq 169,5728
#define sz_xFreeColorsReq 170,5763
#define sz_xStoreColorsReq 171,5792
#define sz_xStoreNamedColorReq 172,5821
#define sz_xQueryColorsReq 173,5855
#define sz_xLookupColorReq 174,5884
#define sz_xCreateCursorReq 175,5914
#define sz_xCreateGlyphCursorReq 176,5945
#define sz_xRecolorCursorReq 177,5981
#define sz_xQueryBestSizeReq 178,6013
#define sz_xQueryExtensionReq 179,6045
#define sz_xChangeKeyboardControlReq 180,6077
#define sz_xBellReq 181,6116
#define sz_xChangePointerControlReq 182,6138
#define sz_xSetScreenSaverReq 183,6177
#define sz_xChangeHostsReq 184,6210
#define sz_xListHostsReq 185,6239
#define sz_xChangeModeReq 186,6266
#define sz_xRotatePropertiesReq 187,6294
#define sz_xReply 188,6329
#define sz_xGrabKeyboardReply 189,6350
#define sz_xListFontsWithInfoReply 190,6383
#define sz_xSetPointerMappingReply 191,6421
#define sz_xGetKeyboardMappingReply 192,6459
#define sz_xGetPointerMappingReply 193,6498
#define sz_xListFontsWithInfoReq 194,6536
#define sz_xPolyLineReq 195,6571
#define sz_xPolyArcReq 196,6598
#define sz_xPolyRectangleReq 197,6624
#define sz_xPolyFillRectangleReq 198,6656
#define sz_xPolyFillArcReq 199,6692
#define sz_xPolyText8Req 200,6722
#define sz_xPolyText16Req 201,6750
#define sz_xImageText8Req 202,6779
#define sz_xImageText16Req 203,6808
#define sz_xSetPointerMappingReq 204,6838
#define sz_xForceScreenSaverReq 205,6873
#define sz_xSetCloseDownModeReq 206,6907
#define sz_xClearAreaReq 207,6941
#define sz_xSetAccessControlReq 208,6969
#define sz_xGetKeyboardMappingReq 209,7003
#define sz_xSetModifierMappingReq 210,7039
#define sz_xPropIconSize 211,7075
#define sz_xChangeKeyboardMappingReq 212,7103
#define Window 220,7391
#define Drawable 221,7413
#define Font 222,7437
#define Pixmap 223,7457
#define Cursor 224,7479
#define Colormap 225,7501
#define GContext 226,7525
#define Atom 227,7549
#define VisualID 228,7569
#define Time 229,7593
#define KeyCode 230,7613
#define KeySym 231,7635
#define X_TCP_PORT 233,7658
#define xTrue 235,7712
#define xFalse 236,7735
typedef CARD16 KeyButMask;239,7760
    CARD8	byteOrder;247,7930
    BYTE	pad;248,7951
    CARD16	majorVersion B16,249,7965
    CARD16	majorVersion B16, minorVersion B16;249,7965
    CARD16	nbytesAuthProto B16;250,8012
    CARD16	nbytesAuthString B16;251,8073
    CARD16	pad2;252,8133
} xConnClientPrefix;253,8150
    BOOL           success;256,8189
    BYTE           lengthReason;257,8217
    CARD16         majorVersion B16,258,8296
                   minorVersion B16;259,8334
    CARD16         length B16;260,8371
} xConnSetupPrefix;261,8444
    CARD32         release B32;265,8483
    CARD32         ridBase B32,266,8515
                   ridMask B32;267,8548
    CARD32         motionBufferSize B32;268,8580
    CARD16         nbytesVendor B16;269,8621
    CARD16         maxRequestSize B16;270,8698
    CARD8          numRoots;271,8737
    CARD8          numFormats;272,8815
    CARD8          imageByteOrder;273,8884
    CARD8          bitmapBitOrder;274,8951
    CARD8          bitmapScanlineUnit,275,9028
                   bitmapScanlinePad;276,9087
    KeyCode	   minKeyCode,277,9145
    KeyCode	   minKeyCode, maxKeyCode;277,9145
    CARD32	   pad2 B32;278,9184
} xConnSetup;279,9208
    CARD8          depth;282,9240
    CARD8          bitsPerPixel;283,9266
    CARD8          scanLinePad;284,9299
    CARD8          pad1;285,9331
    CARD32	   pad2 B32;286,9356
} xPixmapFormat;287,9380
    CARD8 	depth;292,9434
    CARD8 	pad1;293,9452
    CARD16	nVisuals B16;294,9469
    CARD32	pad2 B32;295,9544
    } xDepth;296,9565
    VisualID visualID B32;299,9597
    CARD8 c_class;301,9672
    CARD8 bitsPerRGB;305,9721
    CARD16 colormapEntries B16;306,9743
    CARD32 redMask B32,307,9775
    CARD32 redMask B32, greenMask B32,307,9775
    CARD32 redMask B32, greenMask B32, blueMask B32;307,9775
    CARD32 pad B32;308,9828
    } xVisualType;309,9848
    Window         windowId B32;312,9885
    Colormap       defaultColormap B32;313,9918
    CARD32         whitePixel B32,314,9958
    CARD32         whitePixel B32, blackPixel B32;314,9958
    CARD32         currentInputMask B32;315,10009
    CARD16         pixWidth B16,316,10053
    CARD16         pixWidth B16, pixHeight B16;316,10053
    CARD16         mmWidth B16,317,10101
    CARD16         mmWidth B16, mmHeight B16;317,10101
    CARD16         minInstalledMaps B16,318,10147
    CARD16         minInstalledMaps B16, maxInstalledMaps B16;318,10147
    VisualID       rootVisualID B32;319,10210
    CARD8          backingStore;320,10247
    BOOL           saveUnders;321,10280
    CARD8          rootDepth;322,10311
    CARD8          nDepths;323,10341
} xWindowRoot;324,10414
    CARD32 time B32;335,10671
    INT16 x B16,336,10692
    INT16 x B16, y B16;336,10692
} xTimecoord;337,10716
    CARD8 family;340,10748
    BYTE pad;341,10766
    CARD16 length B16;342,10780
} xHostEntry;343,10803
    INT16 leftSideBearing B16,346,10835
	  rightSideBearing B16,347,10866
	  characterWidth B16,348,10891
	  ascent B16,349,10914
	  descent B16;350,10929
    CARD16 attributes B16;351,10945
} xCharInfo;352,10972
    Atom name B32;355,11003
    CARD32 value B32;356,11022
} xFontProp;357,11044
    CARD8 len;363,11171
    INT8 delta;365,11293
} xTextElt;366,11309
    CARD32 pixel B32;370,11348
    CARD16 red B16,371,11370
    CARD16 red B16, green B16,371,11370
    CARD16 red B16, green B16, blue B16;371,11370
    CARD8 flags;372,11411
    CARD8 pad;373,11467
} xColorItem;374,11482
    CARD16 red B16,378,11515
    CARD16 red B16, green B16,378,11515
    CARD16 red B16, green B16, blue B16,378,11515
    CARD16 red B16, green B16, blue B16, pad B16;378,11515
} xrgb;379,11565
typedef CARD8 KEYCODE;381,11574
    BYTE type;395,11846
    BYTE data1;396,11888
    CARD16 sequenceNumber B16;397,11944
    CARD32 length B32;398,12017
    CARD32 data00 B32;399,12097
    CARD32 data01 B32;400,12120
    CARD32 data02 B32;401,12143
    CARD32 data03 B32;402,12166
    CARD32 data04 B32;403,12189
    CARD32 data05 B32;404,12212
    } xGenericReply;405,12235
    BYTE type;410,12307
    CARD8 backingStore;411,12337
    CARD16 sequenceNumber B16;412,12361
    CARD32 length B32;413,12392
    VisualID visualID B32;414,12457
    CARD16 c_class B16;416,12532
    CARD8 bitGravity;420,12591
    CARD8 winGravity;421,12613
    CARD32 backingBitPlanes B32;422,12635
    CARD32 backingPixel B32;423,12668
    BOOL saveUnder;424,12697
    BOOL mapInstalled;425,12717
    CARD8 mapState;426,12740
    BOOL override;427,12760
    Colormap colormap B32;428,12779
    CARD32 allEventMasks B32;429,12806
    CARD32 yourEventMask B32;430,12836
    CARD16 doNotPropagateMask B16;431,12866
    CARD16 pad B16;432,12901
    } xGetWindowAttributesReply;433,12921
    BYTE type;436,12972
    CARD8 depth;437,13003
    CARD16 sequenceNumber B16;438,13020
    CARD32 length B32;439,13051
    Window root B32;440,13083
    INT16 x B16,441,13104
    INT16 x B16, y B16;441,13104
    CARD16 width B16,442,13128
    CARD16 width B16, height B16;442,13128
    CARD16 borderWidth B16;443,13162
    CARD16 pad1 B16;444,13190
    CARD32 pad2 B32;445,13211
    CARD32 pad3 B32;446,13232
    } xGetGeometryReply;447,13253
    BYTE type;450,13296
    BYTE pad1;451,13326
    CARD16 sequenceNumber B16;452,13341
    CARD32 length B32;453,13372
    Window root B32,454,13395
    Window root B32, parent B32;454,13395
    CARD16 nChildren B16;455,13428
    CARD16 pad2 B16;456,13454
    CARD32 pad3 B32;457,13475
    CARD32 pad4 B32;458,13496
    CARD32 pad5 B32;459,13517
    } xQueryTreeReply;460,13538
    BYTE type;463,13579
    BYTE pad1;464,13609
    CARD16 sequenceNumber B16;465,13624
    CARD32 length B32;466,13655
    Atom atom B32;467,13686
    CARD32 pad2 B32;468,13705
    CARD32 pad3 B32;469,13726
    CARD32 pad4 B32;470,13747
    CARD32 pad5 B32;471,13768
    CARD32 pad6 B32;472,13789
    } xInternAtomReply;473,13810
    BYTE type;476,13852
    BYTE pad1;477,13882
    CARD16 sequenceNumber B16;478,13897
    CARD32 length B32;479,13928
    CARD16 nameLength B16;480,13978
    CARD16 pad2 B16;481,14036
    CARD32 pad3 B32;482,14057
    CARD32 pad4 B32;483,14078
    CARD32 pad5 B32;484,14099
    CARD32 pad6 B32;485,14120
    CARD32 pad7 B32;486,14141
    } xGetAtomNameReply;487,14162
    BYTE type;490,14205
    CARD8 format;491,14235
    CARD16 sequenceNumber B16;492,14253
    CARD32 length B32;493,14284
    Atom propertyType B32;494,14333
    CARD32 bytesAfter B32;495,14360
    CARD32 nItems B32;496,14387
    CARD32 pad1 B32;497,14456
    CARD32 pad2 B32;498,14477
    CARD32 pad3 B32;499,14498
    } xGetPropertyReply;500,14519
    BYTE type;503,14562
    BYTE pad1;504,14592
    CARD16 sequenceNumber B16;505,14607
    CARD32 length B32;506,14638
    CARD16 nProperties B16;507,14661
    CARD16 pad2 B16;508,14689
    CARD32 pad3 B32;509,14710
    CARD32 pad4 B32;510,14731
    CARD32 pad5 B32;511,14752
    CARD32 pad6 B32;512,14773
    CARD32 pad7 B32;513,14794
    } xListPropertiesReply;514,14815
    BYTE type;517,14861
    BYTE pad1;518,14891
    CARD16 sequenceNumber B16;519,14906
    CARD32 length B32;520,14937
    Window owner B32;521,14969
    CARD32 pad2 B32;522,14991
    CARD32 pad3 B32;523,15012
    CARD32 pad4 B32;524,15033
    CARD32 pad5 B32;525,15054
    CARD32 pad6 B32;526,15075
    } xGetSelectionOwnerReply;527,15096
    BYTE type;530,15145
    BYTE status;531,15175
    CARD16 sequenceNumber B16;532,15192
    CARD32 length B32;533,15223
    CARD32 pad1 B32;534,15255
    CARD32 pad2 B32;535,15276
    CARD32 pad3 B32;536,15297
    CARD32 pad4 B32;537,15318
    CARD32 pad5 B32;538,15339
    CARD32 pad6 B32;539,15360
    } xGrabPointerReply;540,15381
typedef xGrabPointerReply xGrabKeyboardReply;542,15407
    BYTE type;545,15471
    BOOL sameScreen;546,15501
    CARD16 sequenceNumber B16;547,15522
    CARD32 length B32;548,15553
    Window root B32,549,15585
    Window root B32, child B32;549,15585
    INT16 rootX B16,550,15617
    INT16 rootX B16, rootY B16,550,15617
    INT16 rootX B16, rootY B16, winX B16,550,15617
    INT16 rootX B16, rootY B16, winX B16, winY B16;550,15617
    CARD16 mask B16;551,15669
    CARD16 pad1 B16;552,15690
    CARD32 pad B32;553,15711
    } xQueryPointerReply;554,15731
    BYTE type;557,15775
    BYTE pad1;558,15805
    CARD16 sequenceNumber B16;559,15820
    CARD32 length B32;560,15851
    CARD32 nEvents B32;561,15874
    CARD32 pad2 B32;562,15898
    CARD32 pad3 B32;563,15919
    CARD32 pad4 B32;564,15940
    CARD32 pad5 B32;565,15961
    CARD32 pad6 B32;566,15982
    } xGetMotionEventsReply;567,16003
    BYTE type;570,16050
    BOOL sameScreen;571,16080
    CARD16 sequenceNumber B16;572,16101
    CARD32 length B32;573,16132
    Window child B32;574,16163
    INT16 dstX B16,575,16185
    INT16 dstX B16, dstY B16;575,16185
    CARD32 pad2 B32;576,16215
    CARD32 pad3 B32;577,16236
    CARD32 pad4 B32;578,16257
    CARD32 pad5 B32;579,16278
    } xTranslateCoordsReply;580,16299
    BYTE type;583,16346
    CARD8 revertTo;584,16376
    CARD16 sequenceNumber B16;585,16396
    CARD32 length B32;586,16427
    Window focus B32;587,16459
    CARD32 pad1 B32;588,16481
    CARD32 pad2 B32;589,16502
    CARD32 pad3 B32;590,16523
    CARD32 pad4 B32;591,16544
    CARD32 pad5 B32;592,16565
    } xGetInputFocusReply;593,16586
    BYTE type;596,16631
    BYTE pad1;597,16661
    CARD16 sequenceNumber B16;598,16676
    CARD32 length B32;599,16707
    BYTE map[map600,16776
    } xQueryKeymapReply;601,16794
    BYTE type;605,16919
    BYTE pad1;606,16949
    CARD16 sequenceNumber B16;607,16964
    CARD32 length B32;608,16995
    xCharInfo minBounds;609,17067
    CARD32 walign1 B32;611,17108
    xCharInfo maxBounds;613,17139
    CARD32 walign2 B32;615,17180
    CARD16 minCharOrByte2 B16,617,17211
    CARD16 minCharOrByte2 B16, maxCharOrByte2 B16;617,17211
    CARD16 defaultChar B16;618,17262
    CARD16 nFontProps B16;619,17290
    CARD8 drawDirection;620,17367
    CARD8 minByte1,621,17392
    CARD8 minByte1, maxByte1;621,17392
    BOOL allCharsExist;622,17422
    INT16 fontAscent B16,623,17446
    INT16 fontAscent B16, fontDescent B16;623,17446
    CARD32 nCharInfos B32;624,17489
} xQueryFontReply;625,17565
    BYTE type;628,17602
    CARD8 drawDirection;629,17632
    CARD16 sequenceNumber B16;630,17657
    CARD32 length B32;631,17688
    INT16 fontAscent B16,632,17720
    INT16 fontAscent B16, fontDescent B16;632,17720
    INT16 overallAscent B16,633,17763
    INT16 overallAscent B16, overallDescent B16;633,17763
    INT32 overallWidth B32,634,17812
    INT32 overallWidth B32, overallLeft B32,634,17812
    INT32 overallWidth B32, overallLeft B32, overallRight B32;634,17812
    CARD32 pad B32;635,17875
    } xQueryTextExtentsReply;636,17895
    BYTE type;639,17943
    BYTE pad1;640,17973
    CARD16 sequenceNumber B16;641,17988
    CARD32 length B32;642,18019
    CARD16 nFonts B16;643,18042
    CARD16 pad2 B16;644,18065
    CARD32 pad3 B32;645,18086
    CARD32 pad4 B32;646,18107
    CARD32 pad5 B32;647,18128
    CARD32 pad6 B32;648,18149
    CARD32 pad7 B32;649,18170
    } xListFontsReply;650,18191
    BYTE type;654,18306
    CARD8 nameLength;655,18336
    CARD16 sequenceNumber B16;656,18399
    CARD32 length B32;657,18430
    xCharInfo minBounds;658,18502
    CARD32 walign1 B32;660,18543
    xCharInfo maxBounds;662,18574
    CARD32 walign2 B32;664,18615
    CARD16 minCharOrByte2 B16,666,18646
    CARD16 minCharOrByte2 B16, maxCharOrByte2 B16;666,18646
    CARD16 defaultChar B16;667,18697
    CARD16 nFontProps B16;668,18725
    CARD8 drawDirection;669,18802
    CARD8 minByte1,670,18827
    CARD8 minByte1, maxByte1;670,18827
    BOOL allCharsExist;671,18857
    INT16 fontAscent B16,672,18881
    INT16 fontAscent B16, fontDescent B16;672,18881
    CARD32 nReplies B32;673,18924
} xListFontsWithInfoReply;674,19006
    BYTE type;677,19051
    BYTE pad1;678,19081
    CARD16 sequenceNumber B16;679,19096
    CARD32 length B32;680,19127
    CARD16 nPaths B16;681,19150
    CARD16 pad2 B16;682,19173
    CARD32 pad3 B32;683,19194
    CARD32 pad4 B32;684,19215
    CARD32 pad5 B32;685,19236
    CARD32 pad6 B32;686,19257
    CARD32 pad7 B32;687,19278
    } xGetFontPathReply;688,19299
    BYTE type;691,19342
    CARD8 depth;692,19372
    CARD16 sequenceNumber B16;693,19389
    CARD32 length B32;694,19420
    VisualID visual B32;695,19443
    CARD32 pad3 B32;696,19468
    CARD32 pad4 B32;697,19489
    CARD32 pad5 B32;698,19510
    CARD32 pad6 B32;699,19531
    CARD32 pad7 B32;700,19552
    } xGetImageReply;701,19573
    BYTE type;704,19613
    BYTE pad1;705,19643
    CARD16 sequenceNumber B16;706,19658
    CARD32 length B32;707,19689
    CARD16 nColormaps B16;708,19712
    CARD16 pad2 B16;709,19739
    CARD32 pad3 B32;710,19760
    CARD32 pad4 B32;711,19781
    CARD32 pad5 B32;712,19802
    CARD32 pad6 B32;713,19823
    CARD32 pad7 B32;714,19844
    } xListInstalledColormapsReply;715,19865
    BYTE type;718,19919
    BYTE pad1;719,19948
    CARD16 sequenceNumber B16;720,19963
    CARD32 length B32;721,19994
    CARD16 red B16,722,20027
    CARD16 red B16, green B16,722,20027
    CARD16 red B16, green B16, blue B16;722,20027
    CARD16 pad2 B16;723,20068
    CARD32 pixel B32;724,20089
    CARD32 pad3 B32;725,20111
    CARD32 pad4 B32;726,20132
    CARD32 pad5 B32;727,20153
    } xAllocColorReply;728,20174
    BYTE type;731,20216
    BYTE pad1;732,20245
    CARD16 sequenceNumber B16;733,20260
    CARD32 length B32;734,20291
    CARD32 pixel B32;735,20323
    CARD16 exactRed B16,736,20345
    CARD16 exactRed B16, exactGreen B16,736,20345
    CARD16 exactRed B16, exactGreen B16, exactBlue B16;736,20345
    CARD16 screenRed B16,737,20401
    CARD16 screenRed B16, screenGreen B16,737,20401
    CARD16 screenRed B16, screenGreen B16, screenBlue B16;737,20401
    CARD32 pad2 B32;738,20460
    CARD32 pad3 B32;739,20481
    } xAllocNamedColorReply;740,20502
    BYTE type;743,20549
    BYTE pad1;744,20579
    CARD16 sequenceNumber B16;745,20594
    CARD32 length B32;746,20625
    CARD16 nPixels B16,747,20648
    CARD16 nPixels B16, nMasks B16;747,20648
    CARD32 pad3 B32;748,20684
    CARD32 pad4 B32;749,20705
    CARD32 pad5 B32;750,20726
    CARD32 pad6 B32;751,20747
    CARD32 pad7 B32;752,20768
    } xAllocColorCellsReply;753,20789
    BYTE type;756,20836
    BYTE pad1;757,20865
    CARD16 sequenceNumber B16;758,20880
    CARD32 length B32;759,20911
    CARD16 nPixels B16;760,20934
    CARD16 pad2 B16;761,20958
    CARD32 redMask B16,762,20979
    CARD32 redMask B16, greenMask B16,762,20979
    CARD32 redMask B16, greenMask B16, blueMask B16;762,20979
    CARD32 pad3 B32;763,21032
    CARD32 pad4 B32;764,21053
    } xAllocColorPlanesReply;765,21074
    BYTE type;768,21122
    BYTE pad1;769,21151
    CARD16 sequenceNumber B16;770,21166
    CARD32 length B32;771,21197
    CARD16 nColors B16;772,21220
    CARD16 pad2 B16;773,21244
    CARD32 pad3 B32;774,21265
    CARD32 pad4 B32;775,21286
    CARD32 pad5 B32;776,21307
    CARD32 pad6 B32;777,21328
    CARD32 pad7 B32;778,21349
    } xQueryColorsReply;779,21370
    BYTE type;782,21413
    BYTE pad1;783,21443
    CARD16 sequenceNumber B16;784,21458
    CARD32 length B32;785,21489
    CARD16 exactRed B16,786,21521
    CARD16 exactRed B16, exactGreen B16,786,21521
    CARD16 exactRed B16, exactGreen B16, exactBlue B16;786,21521
    CARD16 screenRed B16,787,21577
    CARD16 screenRed B16, screenGreen B16,787,21577
    CARD16 screenRed B16, screenGreen B16, screenBlue B16;787,21577
    CARD32 pad3 B32;788,21636
    CARD32 pad4 B32;789,21657
    CARD32 pad5 B32;790,21678
    } xLookupColorReply;791,21699
    BYTE type;794,21742
    BYTE pad1;795,21772
    CARD16 sequenceNumber B16;796,21787
    CARD32 length B32;797,21818
    CARD16 width B16,798,21850
    CARD16 width B16, height B16;798,21850
    CARD32 pad3 B32;799,21884
    CARD32 pad4 B32;800,21905
    CARD32 pad5 B32;801,21926
    CARD32 pad6 B32;802,21947
    CARD32 pad7 B32;803,21968
    } xQueryBestSizeReply;804,21989
    BYTE type;807,22034
    BYTE pad1;808,22064
    CARD16 sequenceNumber B16;809,22079
    CARD32 length B32;810,22110
    BOOL  present;811,22141
    CARD8 major_opcode;812,22160
    CARD8 first_event;813,22184
    CARD8 first_error;814,22207
    CARD32 pad3 B32;815,22230
    CARD32 pad4 B32;816,22251
    CARD32 pad5 B32;817,22272
    CARD32 pad6 B32;818,22293
    CARD32 pad7 B32;819,22314
    } xQueryExtensionReply;820,22335
    BYTE type;823,22381
    CARD8 nExtensions;824,22411
    CARD16 sequenceNumber B16;825,22434
    CARD32 length B32;826,22465
    CARD32 pad2 B32;827,22488
    CARD32 pad3 B32;828,22509
    CARD32 pad4 B32;829,22530
    CARD32 pad5 B32;830,22551
    CARD32 pad6 B32;831,22572
    CARD32 pad7 B32;832,22593
    } xListExtensionsReply;833,22614
    BYTE   type;837,22661
    CARD8  success;838,22693
    CARD16 sequenceNumber B16;839,22713
    CARD32 length B32;840,22744
    CARD32 pad2 B32;841,22767
    CARD32 pad3 B32;842,22788
    CARD32 pad4 B32;843,22809
    CARD32 pad5 B32;844,22830
    CARD32 pad6 B32;845,22851
    CARD32 pad7 B32;846,22872
    } xSetMappingReply;847,22893
typedef xSetMappingReply xSetPointerMappingReply;848,22917
typedef xSetMappingReply xSetModifierMappingReply;849,22967
    BYTE type;852,23036
    CARD8 nElts;853,23066
    CARD16 sequenceNumber B16;854,23126
    CARD32 length B32;855,23157
    CARD32 pad2 B32;856,23180
    CARD32 pad3 B32;857,23201
    CARD32 pad4 B32;858,23222
    CARD32 pad5 B32;859,23243
    CARD32 pad6 B32;860,23264
    CARD32 pad7 B32;861,23285
    } xGetPointerMappingReply;862,23306
    BYTE type;865,23355
    CARD8 keySymsPerKeyCode;866,23370
    CARD16 sequenceNumber B16;867,23399
    CARD32 length B32;868,23430
    CARD32 pad2 B32;869,23453
    CARD32 pad3 B32;870,23474
    CARD32 pad4 B32;871,23495
    CARD32 pad5 B32;872,23516
    CARD32 pad6 B32;873,23537
    CARD32 pad7 B32;874,23558
} xGetKeyboardMappingReply;875,23579
    BYTE type;878,23629
    CARD8 numKeyPerModifier;879,23644
    CARD16 sequenceNumber B16;880,23673
    CARD32 length B32;881,23704
    CARD32 pad1 B32;882,23727
    CARD32 pad2 B32;883,23748
    CARD32 pad3 B32;884,23769
    CARD32 pad4 B32;885,23790
    CARD32 pad5 B32;886,23811
    CARD32 pad6 B32;887,23832
} xGetModifierMappingReply;888,23853
    BYTE type;891,23899
    BOOL globalAutoRepeat;892,23929
    CARD16 sequenceNumber B16;893,23956
    CARD32 length B32;894,23987
    CARD32 ledMask B32;895,24019
    CARD8 keyClickPercent,896,24043
    CARD8 keyClickPercent, bellPercent;896,24043
    CARD16 bellPitch B16,897,24083
    CARD16 bellPitch B16, bellDuration B16;897,24083
    CARD16 pad B16;898,24127
    BYTE map[map899,24147
    } xGetKeyboardControlReply;900,24193
    BYTE type;903,24243
    BYTE pad1;904,24273
    CARD16 sequenceNumber B16;905,24288
    CARD32 length B32;906,24319
    CARD16 accelNumerator B16,907,24351
    CARD16 accelNumerator B16, accelDenominator B16;907,24351
    CARD16 threshold B16;908,24404
    CARD16 pad2 B16;909,24430
    CARD32 pad3 B32;910,24451
    CARD32 pad4 B32;911,24472
    CARD32 pad5 B32;912,24493
    CARD32 pad6 B32;913,24514
    } xGetPointerControlReply;914,24535
    BYTE type;917,24584
    BYTE pad1;918,24614
    CARD16 sequenceNumber B16;919,24629
    CARD32 length B32;920,24660
    CARD16 timeout B16,921,24692
    CARD16 timeout B16, interval B16;921,24692
    BOOL preferBlanking;922,24730
    BOOL allowExposures;923,24755
    CARD16 pad2 B16;924,24780
    CARD32 pad3 B32;925,24801
    CARD32 pad4 B32;926,24822
    CARD32 pad5 B32;927,24843
    CARD32 pad6 B32;928,24864
    } xGetScreenSaverReply;929,24885
    BYTE type;932,24931
    BOOL enabled;933,24961
    CARD16 sequenceNumber B16;934,24979
    CARD32 length B32;935,25010
    CARD16 nHosts B16;936,25033
    CARD16 pad1 B16;937,25056
    CARD32 pad3 B32;938,25077
    CARD32 pad4 B32;939,25098
    CARD32 pad5 B32;940,25119
    CARD32 pad6 B32;941,25140
    CARD32 pad7 B32;942,25161
    } xListHostsReply;943,25182
    BYTE type;956,25432
    BYTE errorCode;957,25478
    CARD16 sequenceNumber B16;958,25498
    CARD32 resourceID B32;959,25574
    CARD16 minorCode B16;960,25601
    CARD8 majorCode;961,25627
    BYTE pad1;962,25648
    CARD32 pad3 B32;963,25663
    CARD32 pad4 B32;964,25684
    CARD32 pad5 B32;965,25705
    CARD32 pad6 B32;966,25726
    CARD32 pad7 B32;967,25747
} xError;968,25768
	    BYTE type;982,26135
	    BYTE detail;983,26151
	    CARD16 sequenceNumber B16;984,26169
	    } u;985,26201
            CARD32 pad00 B32;987,26221
	    Time time B32;988,26251
	    Window root B32,989,26271
	    Window root B32, event B32,989,26271
	    Window root B32, event B32, child B32;989,26271
	    INT16 rootX B16,990,26315
	    INT16 rootX B16, rootY B16,990,26315
	    INT16 rootX B16, rootY B16, eventX B16,990,26315
	    INT16 rootX B16, rootY B16, eventX B16, eventY B16;990,26315
	    KeyButMask state B16;991,26372
	    BOOL sameScreen;992,26399
	    BYTE pad1;993,26423
	} keyButtonPointer;994,26439
            CARD32 pad00 B32;996,26470
            Time time B32;997,26500
	    Window root B32,998,26527
	    Window root B32, event B32,998,26527
	    Window root B32, event B32, child B32;998,26527
	    INT16 rootX B16,999,26571
	    INT16 rootX B16, rootY B16,999,26571
	    INT16 rootX B16, rootY B16, eventX B16,999,26571
	    INT16 rootX B16, rootY B16, eventX B16, eventY B16;999,26571
	    KeyButMask state B16;1000,26628
	    BYTE mode;1001,26655
	    BYTE flags;1002,26693
#define ELFlagFocus 1003,26764
#define ELFlagSameScreen 1004,26798
	} enterLeave;1005,26832
            CARD32 pad00 B32;1007,26857
	    Window window B32;1008,26887
	    BYTE mode;1009,26911
	    BYTE pad1,1010,26949
	    BYTE pad1, pad2,1010,26949
	    BYTE pad1, pad2, pad3;1010,26949
	} focus;1011,26977
            CARD32 pad00 B32;1013,26997
	    Window window B32;1014,27027
	    CARD16 x B16,1015,27051
	    CARD16 x B16, y B16,1015,27051
	    CARD16 x B16, y B16, width B16,1015,27051
	    CARD16 x B16, y B16, width B16, height B16;1015,27051
	    CARD16 count B16;1016,27100
	    CARD16 pad2 B16;1017,27123
	} expose;1018,27145
            CARD32 pad00 B32;1020,27166
	    Drawable drawable B32;1021,27196
	    CARD16 x B16,1022,27224
	    CARD16 x B16, y B16,1022,27224
	    CARD16 x B16, y B16, width B16,1022,27224
	    CARD16 x B16, y B16, width B16, height B16;1022,27224
	    CARD16 minorEvent B16;1023,27273
	    CARD16 count B16;1024,27301
	    BYTE majorEvent;1025,27324
	    BYTE pad1,1026,27346
	    BYTE pad1, pad2,1026,27346
	    BYTE pad1, pad2, pad3;1026,27346
	} graphicsExposure;1027,27374
            CARD32 pad00 B32;1029,27405
	    Drawable drawable B32;1030,27435
	    CARD16 minorEvent B16;1031,27463
	    BYTE majorEvent;1032,27491
	    BYTE bpad;1033,27513
	} noExposure;1034,27529
            CARD32 pad00 B32;1036,27554
	    Window window B32;1037,27584
	    CARD8 state;1038,27608
	    BYTE pad1,1039,27626
	    BYTE pad1, pad2,1039,27626
	    BYTE pad1, pad2, pad3;1039,27626
	} visibility;1040,27654
            CARD32 pad00 B32;1042,27679
	    Window parent B32,1043,27709
	    Window parent B32, window B32;1043,27709
	    INT16 x B16,1044,27745
	    INT16 x B16, y B16;1044,27745
	    CARD16 width B16,1045,27770
	    CARD16 width B16, height B16,1045,27770
	    CARD16 width B16, height B16, borderWidth B16;1045,27770
	    BOOL override;1046,27822
	    BYTE bpad;1047,27842
        } createNotify;1048,27858
            CARD32 pad00 B32;1058,28298
	    Window event B32,1059,28328
	    Window event B32, window B32;1059,28328
	} destroyNotify;1060,28363
            CARD32 pad00 B32;1062,28391
	    Window event B32,1063,28421
	    Window event B32, window B32;1063,28421
	    BOOL fromConfigure;1064,28456
	    BYTE pad1,1065,28481
	    BYTE pad1, pad2,1065,28481
	    BYTE pad1, pad2, pad3;1065,28481
        } unmapNotify;1066,28509
            CARD32 pad00 B32;1068,28542
	    Window event B32,1069,28572
	    Window event B32, window B32;1069,28572
	    BOOL override;1070,28607
	    BYTE pad1,1071,28627
	    BYTE pad1, pad2,1071,28627
	    BYTE pad1, pad2, pad3;1071,28627
        } mapNotify;1072,28655
            CARD32 pad00 B32;1074,28686
	    Window parent B32,1075,28716
	    Window parent B32, window B32;1075,28716
        } mapRequest;1076,28752
            CARD32 pad00 B32;1078,28784
	    Window event B32,1079,28814
	    Window event B32, window B32,1079,28814
	    Window event B32, window B32, parent B32;1079,28814
	    INT16 x B16,1080,28861
	    INT16 x B16, y B16;1080,28861
	    BOOL override;1081,28886
	    BYTE pad1,1082,28906
	    BYTE pad1, pad2,1082,28906
	    BYTE pad1, pad2, pad3;1082,28906
	} reparent;1083,28934
            CARD32 pad00 B32;1085,28957
	    Window event B32,1086,28987
	    Window event B32, window B32,1086,28987
	    Window event B32, window B32, aboveSibling B32;1086,28987
	    INT16 x B16,1087,29040
	    INT16 x B16, y B16;1087,29040
	    CARD16 width B16,1088,29065
	    CARD16 width B16, height B16,1088,29065
	    CARD16 width B16, height B16, borderWidth B16;1088,29065
	    BOOL override;1089,29117
	    BYTE bpad;1090,29139
	} configureNotify;1091,29155
            CARD32 pad00 B32;1093,29185
	    Window parent B32,1094,29215
	    Window parent B32, window B32,1094,29215
	    Window parent B32, window B32, sibling B32;1094,29215
	    INT16 x B16,1095,29264
	    INT16 x B16, y B16;1095,29264
	    CARD16 width B16,1096,29289
	    CARD16 width B16, height B16,1096,29289
	    CARD16 width B16, height B16, borderWidth B16;1096,29289
	    CARD16 valueMask B16;1097,29341
	    CARD32 pad1 B32;1098,29368
	} configureRequest;1099,29390
            CARD32 pad00 B32;1101,29421
	    Window event B32,1102,29451
	    Window event B32, window B32;1102,29451
	    INT16 x B16,1103,29486
	    INT16 x B16, y B16;1103,29486
	    CARD32 pad1,1104,29511
	    CARD32 pad1, pad2,1104,29511
	    CARD32 pad1, pad2, pad3,1104,29511
	    CARD32 pad1, pad2, pad3, pad4;1104,29511
	} gravity;1105,29547
            CARD32 pad00 B32;1107,29569
	    Window window B32;1108,29599
	    CARD16 width B16,1109,29623
	    CARD16 width B16, height B16;1109,29623
	} resizeRequest;1110,29658
            CARD32 pad00 B32;1114,29826
	    Window event B32,1115,29856
	    Window event B32, window B32,1115,29856
	    Window event B32, window B32, parent B32;1115,29856
	    BYTE place;1116,29903
	    BYTE pad1,1117,29942
	    BYTE pad1, pad2,1117,29942
	    BYTE pad1, pad2, pad3;1117,29942
	} circulate;1118,29970
            CARD32 pad00 B32;1120,29994
	    Window window B32;1121,30024
	    Atom atom B32;1122,30048
	    Time time B32;1123,30068
	    BYTE state;1124,30088
	    BYTE pad1;1125,30133
	    CARD16 pad2 B16;1126,30149
	} property;1127,30171
            CARD32 pad00 B32;1129,30194
            Time time B32;1130,30224
	    Window window B32;1131,30256
	    Atom atom B32;1132,30280
	} selectionClear;1133,30300
            CARD32 pad00 B32;1135,30329
            Time time B32;1136,30359
	    Window owner B32,1137,30390
	    Window owner B32, requestor B32;1137,30390
	    Atom selection B32,1138,30428
	    Atom selection B32, target B32,1138,30428
	    Atom selection B32, target B32, property B32;1138,30428
	} selectionRequest;1139,30479
            CARD32 pad00 B32;1141,30510
            Time time B32;1142,30540
	    Window requestor B32;1143,30570
	    Atom selection B32,1144,30597
	    Atom selection B32, target B32,1144,30597
	    Atom selection B32, target B32, property B32;1144,30597
	} selectionNotify;1145,30648
            CARD32 pad00 B32;1147,30678
	    Window window B32;1148,30708
	    Colormap colormap B32;1149,30732
	    BOOL c_new;1151,30808
	    BOOL new;1153,30831
	    BYTE state;1155,30853
	    BYTE pad1,1156,30903
	    BYTE pad1, pad2;1156,30903
	} colormap;1157,30925
	    CARD32 pad00 B32;1159,30948
	    CARD8 request;1160,30971
	    KeyCode firstKeyCode;1161,30991
	    CARD8 count;1162,31018
	    BYTE pad1;1163,31036
	} mappingNotify;1164,31052
            CARD32 pad00 B32;1166,31080
	    Window window B32;1167,31110
		    Atom type B32;1170,31158
		    INT32 longs0 B32;1171,31179
		    INT32 longs1 B32;1172,31203
		    INT32 longs2 B32;1173,31227
		    INT32 longs3 B32;1174,31251
		    INT32 longs4 B32;1175,31275
		} l;1176,31299
		    Atom type B32;1178,31317
		    INT16 shorts0 B16;1179,31338
		    INT16 shorts1 B16;1180,31363
		    INT16 shorts2 B16;1181,31388
		    INT16 shorts3 B16;1182,31413
		    INT16 shorts4 B16;1183,31438
		    INT16 shorts5 B16;1184,31463
		    INT16 shorts6 B16;1185,31488
		    INT16 shorts7 B16;1186,31513
		    INT16 shorts8 B16;1187,31538
		    INT16 shorts9 B16;1188,31563
		} s;1189,31588
		    Atom type B32;1191,31606
		    INT8 bytes[bytes1192,31627
		} b;1193,31649
	    } u;1194,31656
	} clientMessage;1195,31667
    } u;1196,31685
} xEvent;1197,31694
    BYTE type;1204,31931
    BYTE map[map1205,31946
    } xKeymapEvent;1206,31964
#define XEventSize 1210,32011
    xGenericReply generic;1220,32306
    xGetGeometryReply geom;1221,32333
    xQueryTreeReply tree;1222,32361
    xInternAtomReply atom;1223,32387
    xGetAtomNameReply atomName;1224,32414
    xGetPropertyReply property;1225,32446
    xListPropertiesReply listProperties;1226,32478
    xGetSelectionOwnerReply selection;1227,32519
    xGrabPointerReply grabPointer;1228,32558
    xGrabKeyboardReply grabKeyboard;1229,32593
    xQueryPointerReply pointer;1230,32630
    xGetMotionEventsReply motionEvents;1231,32662
    xTranslateCoordsReply coords;1232,32702
    xGetInputFocusReply inputFocus;1233,32736
    xQueryTextExtentsReply textExtents;1234,32772
    xListFontsReply fonts;1235,32812
    xGetFontPathReply fontPath;1236,32839
    xGetImageReply image;1237,32871
    xListInstalledColormapsReply colormaps;1238,32897
    xAllocColorReply allocColor;1239,32941
    xAllocNamedColorReply allocNamedColor;1240,32974
    xAllocColorCellsReply colorCells;1241,33017
    xAllocColorPlanesReply colorPlanes;1242,33055
    xQueryColorsReply colors;1243,33095
    xLookupColorReply lookupColor;1244,33125
    xQueryBestSizeReply bestSize;1245,33160
    xQueryExtensionReply extension;1246,33194
    xListExtensionsReply extensions;1247,33230
    xSetModifierMappingReply setModifierMapping;1248,33267
    xGetModifierMappingReply getModifierMapping;1249,33316
    xSetPointerMappingReply setPointerMapping;1250,33365
    xGetKeyboardMappingReply getKeyboardMapping;1251,33412
    xGetPointerMappingReply getPointerMapping;1252,33461
    xGetPointerControlReply pointerControl;1253,33508
    xGetScreenSaverReply screenSaver;1254,33552
    xListHostsReply hosts;1255,33590
    xError error;1256,33617
    xEvent event;1258,33654
} xReply;1260,33697
	CARD8 reqType;1274,33929
	CARD8 data;1275,33945
	CARD16 length B16;1276,34007
} xReq;1278,34117
    CARD8 reqType;1288,34436
    BYTE pad;1289,34455
    CARD16 length B16;1290,34469
    CARD32 id B32;1291,34492
    } xResourceReq;1292,34567
    CARD8 reqType;1295,34605
    CARD8 depth;1296,34624
    CARD16 length B16;1297,34641
    Window wid B32,1298,34664
    Window wid B32, parent B32;1298,34664
    INT16 x B16,1299,34696
    INT16 x B16, y B16;1299,34696
    CARD16 width B16,1300,34720
    CARD16 width B16, height B16,1300,34720
    CARD16 width B16, height B16, borderWidth B16;1300,34720
    CARD16 c_class B16;1302,34821
    VisualID visual B32;1306,34880
    CARD32 mask B32;1307,34905
} xCreateWindowReq;1308,34926
    CARD8 reqType;1311,34964
    BYTE pad;1312,34983
    CARD16 length B16;1313,34997
    Window window B32;1314,35020
    CARD32 valueMask B32;1315,35043
} xChangeWindowAttributesReq;1316,35070
    CARD8 reqType;1319,35118
    BYTE mode;1320,35137
    CARD16 length B16;1321,35152
    Window window B32;1322,35175
} xChangeSaveSetReq;1323,35198
    CARD8 reqType;1326,35237
    BYTE pad;1327,35256
    CARD16 length B16;1328,35270
    Window window B32,1329,35293
    Window window B32, parent B32;1329,35293
    INT16 x B16,1330,35328
    INT16 x B16, y B16;1330,35328
} xReparentWindowReq;1331,35352
    CARD8 reqType;1334,35392
    CARD8 pad;1335,35411
    CARD16 length B16;1336,35426
    Window window B32;1337,35449
    CARD16 mask B16;1338,35472
    CARD16 pad2 B16;1339,35493
} xConfigureWindowReq;1340,35514
    CARD8 reqType;1343,35555
    CARD8 direction;1344,35574
    CARD16 length B16;1345,35595
    Window window B32;1346,35618
} xCirculateWindowReq;1347,35641
    CARD8 reqType;1350,35717
    BOOL onlyIfExists;1351,35736
    CARD16 length B16;1352,35759
    CARD16 nbytes  B16;1353,35782
    CARD16 pad B16;1354,35841
} xInternAtomReq;1355,35861
    CARD8 reqType;1358,35897
    CARD8 mode;1359,35916
    CARD16 length B16;1360,35932
    Window window B32;1361,35955
    Atom property B32,1362,35978
    Atom property B32, type B32;1362,35978
    CARD8 format;1363,36011
    BYTE pad[pad1364,36029
    CARD32 nUnits B32;1365,36046
} xChangePropertyReq;1366,36124
    CARD8 reqType;1369,36164
    BYTE pad;1370,36183
    CARD16 length B16;1371,36197
    Window window B32;1372,36220
    Atom property B32;1373,36243
} xDeletePropertyReq;1374,36266
    CARD8 reqType;1377,36306
    BOOL c_delete;1379,36373
    BOOL delete;1381,36398
    CARD16 length B16;1383,36422
    Window window B32;1384,36445
    Atom property B32,1385,36468
    Atom property B32, type B32;1385,36468
    CARD32 longOffset B32;1386,36501
    CARD32 longLength B32;1387,36528
} xGetPropertyReq;1388,36555
    CARD8 reqType;1391,36593
    BYTE pad;1392,36612
    CARD16 length B16;1393,36626
    Window window B32;1394,36649
    Atom selection B32;1395,36672
    Time time B32;1396,36696
} xSetSelectionOwnerReq;1397,36715
    CARD8 reqType;1400,36758
    BYTE pad;1401,36777
    CARD16 length B16;1402,36791
    Window requestor B32;1403,36814
    Atom selection B32,1404,36840
    Atom selection B32, target B32,1404,36840
    Atom selection B32, target B32, property B32;1404,36840
    Time time B32;1405,36890
    } xConvertSelectionReq;1406,36909
    CARD8 reqType;1411,36975
    BOOL propagate;1412,36994
    CARD16 length B16;1413,37014
    Window destination B32;1414,37037
    CARD32 eventMask B32;1415,37065
    BYTE eventdata[eventdata1418,37159
    xEvent event;1420,37201
} xSendEventReq;1422,37239
    CARD8 reqType;1427,37300
    BOOL ownerEvents;1428,37319
    CARD16 length B16;1429,37341
    Window grabWindow B32;1430,37364
    CARD16 eventMask B16;1431,37391
    BYTE pointerMode,1432,37417
    BYTE pointerMode, keyboardMode;1432,37417
    Window confineTo B32;1433,37453
    Cursor cursor B32;1434,37479
    Time time B32;1435,37502
} xGrabPointerReq;1436,37521
    CARD8 reqType;1439,37558
    BOOL ownerEvents;1440,37577
    CARD16 length B16;1441,37599
    Window grabWindow B32;1442,37622
    CARD16 eventMask B16;1443,37649
    BYTE pointerMode,1444,37675
    BYTE pointerMode, keyboardMode;1444,37675
    Window confineTo B32;1445,37711
    Cursor cursor B32;1446,37737
    CARD8 button;1447,37760
    BYTE pad;1448,37778
    CARD16 modifiers B16;1449,37792
} xGrabButtonReq;1450,37818
    CARD8 reqType;1453,37854
    CARD8 button;1454,37873
    CARD16 length B16;1455,37891
    Window grabWindow B32;1456,37914
    CARD16 modifiers B16;1457,37941
    CARD16 pad B16;1458,37967
} xUngrabButtonReq;1459,37987
    CARD8 reqType;1462,38025
    BYTE pad;1463,38044
    CARD16 length B16;1464,38058
    Cursor cursor B32;1465,38081
    Time time B32;1466,38104
    CARD16 eventMask B16;1467,38123
    CARD16 pad2 B16;1468,38149
} xChangeActivePointerGrabReq;1469,38170
    CARD8 reqType;1472,38219
    BOOL ownerEvents;1473,38238
    CARD16 length B16;1474,38260
    Window grabWindow B32;1475,38283
    Time time B32;1476,38310
    BYTE pointerMode,1477,38329
    BYTE pointerMode, keyboardMode;1477,38329
    CARD16 pad B16;1478,38367
} xGrabKeyboardReq;1479,38387
    CARD8 reqType;1482,38425
    BOOL ownerEvents;1483,38444
    CARD16 length B16;1484,38466
    Window grabWindow B32;1485,38489
    CARD16 modifiers B16;1486,38516
    CARD8 key;1487,38542
    BYTE pointerMode,1488,38557
    BYTE pointerMode, keyboardMode;1488,38557
    BYTE pad1,1489,38595
    BYTE pad1, pad2,1489,38595
    BYTE pad1, pad2, pad3;1489,38595
} xGrabKeyReq;1490,38622
    CARD8 reqType;1493,38655
    CARD8 key;1494,38674
    CARD16 length B16;1495,38689
    Window grabWindow B32;1496,38712
    CARD16 modifiers B16;1497,38739
    CARD16 pad B16;1498,38765
} xUngrabKeyReq;1499,38785
    CARD8 reqType;1502,38820
    CARD8 mode;1503,38839
    CARD16 length B16;1504,38855
    Time time B32;1505,38878
} xAllowEventsReq;1506,38897
    CARD8 reqType;1509,38934
    BYTE pad;1510,38953
    CARD16 length B16;1511,38967
    Window window B32;1512,38990
    Time start B32,1513,39013
    Time start B32, stop B32;1513,39013
} xGetMotionEventsReq;1514,39043
    CARD8 reqType;1517,39084
    BYTE pad;1518,39103
    CARD16 length B16;1519,39117
    Window srcWid B32,1520,39140
    Window srcWid B32, dstWid B32;1520,39140
    INT16 srcX B16,1521,39175
    INT16 srcX B16, srcY B16;1521,39175
} xTranslateCoordsReq;1522,39205
    CARD8 reqType;1525,39246
    BYTE pad;1526,39265
    CARD16 length B16;1527,39279
    Window srcWid B32,1528,39302
    Window srcWid B32, dstWid B32;1528,39302
    INT16 srcX B16,1529,39337
    INT16 srcX B16, srcY B16;1529,39337
    CARD16 srcWidth B16,1530,39367
    CARD16 srcWidth B16, srcHeight B16;1530,39367
    INT16 dstX B16,1531,39407
    INT16 dstX B16, dstY B16;1531,39407
} xWarpPointerReq;1532,39437
    CARD8 reqType;1535,39474
    CARD8 revertTo;1536,39493
    CARD16 length B16;1537,39513
    Window focus B32;1538,39536
    Time time B32;1539,39558
} xSetInputFocusReq;1540,39577
    CARD8 reqType;1543,39616
    BYTE pad;1544,39635
    CARD16 length B16;1545,39649
    Font fid B32;1546,39672
    CARD16 nbytes B16;1547,39690
    BYTE pad1,1548,39713
    BYTE pad1, pad2;1548,39713
} xOpenFontReq;1549,39772
    CARD8 reqType;1552,39806
    BOOL oddLength;1553,39825
    CARD16 length B16;1554,39845
    Font fid B32;1555,39868
    } xQueryTextExtentsReq;1556,39886
    CARD8 reqType;1559,39932
    BYTE pad;1560,39951
    CARD16 length B16;1561,39965
    CARD16 maxNames B16;1562,39988
    CARD16 nbytes B16;1563,40013
} xListFontsReq;1564,40080
typedef xListFontsReq xListFontsWithInfoReq;1566,40098
    CARD8 reqType;1569,40161
    BYTE pad;1570,40180
    CARD16 length B16;1571,40194
    CARD16 nFonts B16;1572,40217
    BYTE pad1,1573,40240
    BYTE pad1, pad2;1573,40240
} xSetFontPathReq;1574,40306
    CARD8 reqType;1577,40343
    CARD8 depth;1578,40362
    CARD16 length B16;1579,40379
    Pixmap pid B32;1580,40402
    Drawable drawable B32;1581,40422
    CARD16 width B16,1582,40449
    CARD16 width B16, height B16;1582,40449
} xCreatePixmapReq;1583,40483
    CARD8 reqType;1586,40521
    BYTE pad;1587,40540
    CARD16 length B16;1588,40554
    GContext gc B32;1589,40577
    Drawable drawable B32;1590,40598
    CARD32 mask B32;1591,40625
} xCreateGCReq;1592,40646
    CARD8 reqType;1595,40680
    BYTE pad;1596,40699
    CARD16 length B16;1597,40713
    GContext gc B32;1598,40736
    CARD32 mask B32;1599,40757
} xChangeGCReq;1600,40778
    CARD8 reqType;1603,40816
    BYTE pad;1604,40835
    CARD16 length B16;1605,40849
    GContext srcGC B32,1606,40872
    GContext srcGC B32, dstGC B32;1606,40872
    CARD32 mask B32;1607,40907
} xCopyGCReq;1608,40928
    CARD8 reqType;1611,40964
    BYTE pad;1612,40983
    CARD16 length B16;1613,40997
    GContext gc B32;1614,41020
    CARD16 dashOffset B16;1615,41041
    CARD16 nDashes B16;1616,41068
} xSetDashesReq;1617,41144
    CARD8 reqType;1620,41183
    BYTE ordering;1621,41202
    CARD16 length B16;1622,41221
    GContext gc B32;1623,41244
    INT16 xOrigin B16,1624,41265
    INT16 xOrigin B16, yOrigin B16;1624,41265
} xSetClipRectanglesReq;1625,41301
    CARD8 reqType;1628,41348
    BOOL exposures;1629,41367
    CARD16 length B16;1630,41387
    Window window B32;1631,41410
    INT16 x B16,1632,41433
    INT16 x B16, y B16;1632,41433
    CARD16 width B16,1633,41457
    CARD16 width B16, height B16;1633,41457
} xClearAreaReq;1634,41491
    CARD8 reqType;1637,41526
    BYTE pad;1638,41545
    CARD16 length B16;1639,41559
    Drawable srcDrawable B32,1640,41582
    Drawable srcDrawable B32, dstDrawable B32;1640,41582
    GContext gc B32;1641,41629
    INT16 srcX B16,1642,41650
    INT16 srcX B16, srcY B16,1642,41650
    INT16 srcX B16, srcY B16, dstX B16,1642,41650
    INT16 srcX B16, srcY B16, dstX B16, dstY B16;1642,41650
    CARD16 width B16,1643,41700
    CARD16 width B16, height B16;1643,41700
} xCopyAreaReq;1644,41734
    CARD8 reqType;1647,41772
    BYTE pad;1648,41791
    CARD16 length B16;1649,41805
    Drawable srcDrawable B32,1650,41828
    Drawable srcDrawable B32, dstDrawable B32;1650,41828
    GContext gc B32;1651,41875
    INT16 srcX B16,1652,41896
    INT16 srcX B16, srcY B16,1652,41896
    INT16 srcX B16, srcY B16, dstX B16,1652,41896
    INT16 srcX B16, srcY B16, dstX B16, dstY B16;1652,41896
    CARD16 width B16,1653,41946
    CARD16 width B16, height B16;1653,41946
    CARD32 bitPlane B32;1654,41980
} xCopyPlaneReq;1655,42005
    CARD8 reqType;1658,42044
    BYTE coordMode;1659,42063
    CARD16 length B16;1660,42083
    Drawable drawable B32;1661,42106
    GContext gc B32;1662,42133
} xPolyPointReq;1663,42154
typedef xPolyPointReq xPolyLineReq;1665,42176
    CARD8 reqType;1670,42358
    BYTE pad;1671,42377
    CARD16 length B16;1672,42391
    Drawable drawable B32;1673,42414
    GContext gc B32;1674,42441
} xPolySegmentReq;1675,42462
typedef xPolySegmentReq xPolyArcReq;1677,42486
typedef xPolySegmentReq xPolyRectangleReq;1678,42523
typedef xPolySegmentReq xPolyFillRectangleReq;1679,42566
typedef xPolySegmentReq xPolyFillArcReq;1680,42613
typedef struct _FillPolyReq 1682,42655
    CARD8 reqType;1683,42685
    BYTE pad;1684,42704
    CARD16 length B16;1685,42718
    Drawable drawable B32;1686,42741
    GContext gc B32;1687,42768
    BYTE shape;1688,42789
    BYTE coordMode;1689,42805
    CARD16 pad1 B16;1690,42825
} xFillPolyReq;1691,42846
typedef struct _PutImageReq 1694,42868
    CARD8 reqType;1695,42898
    CARD8 format;1696,42917
    CARD16 length B16;1697,42935
    Drawable drawable B32;1698,42958
    GContext gc B32;1699,42985
    CARD16 width B16,1700,43006
    CARD16 width B16, height B16;1700,43006
    INT16 dstX B16,1701,43040
    INT16 dstX B16, dstY B16;1701,43040
    CARD8 leftPad;1702,43070
    CARD8 depth;1703,43089
    CARD16 pad B16;1704,43106
} xPutImageReq;1705,43126
    CARD8 reqType;1708,43164
    CARD8 format;1709,43183
    CARD16 length B16;1710,43201
    Drawable drawable B32;1711,43224
    INT16 x B16,1712,43251
    INT16 x B16, y B16;1712,43251
    CARD16 width B16,1713,43275
    CARD16 width B16, height B16;1713,43275
    CARD32 planeMask B32;1714,43309
} xGetImageReq;1715,43335
    CARD8 reqType;1720,43427
    CARD8 pad;1721,43446
    CARD16 length B16;1722,43461
    Drawable drawable B32;1723,43484
    GContext gc B32;1724,43511
    INT16 x B16,1725,43532
    INT16 x B16, y B16;1725,43532
} xPolyTextReq;1726,43599
typedef xPolyTextReq xPolyText8Req;1728,43620
typedef xPolyTextReq xPolyText16Req;1729,43656
    CARD8 reqType;1732,43711
    BYTE nChars;1733,43730
    CARD16 length B16;1734,43747
    Drawable drawable B32;1735,43770
    GContext gc B32;1736,43797
    INT16 x B16,1737,43818
    INT16 x B16, y B16;1737,43818
} xImageTextReq;1738,43842
typedef xImageTextReq xImageText8Req;1740,43864
typedef xImageTextReq xImageText16Req;1741,43902
    CARD8 reqType;1744,43959
    BYTE alloc;1745,43978
    CARD16 length B16;1746,43994
    Colormap mid B32;1747,44017
    Window window B32;1748,44039
    VisualID visual B32;1749,44062
} xCreateColormapReq;1750,44087
    CARD8 reqType;1753,44131
    BYTE pad;1754,44150
    CARD16 length B16;1755,44164
    Colormap mid B32;1756,44187
    Colormap srcCmap B32;1757,44209
} xCopyColormapAndFreeReq;1758,44235
    CARD8 reqType;1761,44284
    BYTE pad;1762,44303
    CARD16 length B16;1763,44317
    Colormap cmap B32;1764,44340
    CARD16 red B16,1765,44363
    CARD16 red B16, green B16,1765,44363
    CARD16 red B16, green B16, blue B16;1765,44363
    CARD16 pad2 B16;1766,44404
} xAllocColorReq;1767,44425
    CARD8 reqType;1770,44465
    BYTE pad;1771,44484
    CARD16 length B16;1772,44498
    Colormap cmap B32;1773,44521
    CARD16 nbytes B16;1774,44544
    BYTE pad1,1775,44596
    BYTE pad1, pad2;1775,44596
} xAllocNamedColorReq;1776,44617
    CARD8 reqType;1779,44662
    BOOL contiguous;1780,44681
    CARD16 length B16;1781,44702
    Colormap cmap B32;1782,44725
    CARD16 colors B16,1783,44748
    CARD16 colors B16, planes B16;1783,44748
} xAllocColorCellsReq;1784,44783
    CARD8 reqType;1787,44828
    BOOL contiguous;1788,44847
    CARD16 length B16;1789,44868
    Colormap cmap B32;1790,44891
    CARD16 colors B16,1791,44914
    CARD16 colors B16, red B16,1791,44914
    CARD16 colors B16, red B16, green B16,1791,44914
    CARD16 colors B16, red B16, green B16, blue B16;1791,44914
} xAllocColorPlanesReq;1792,44967
    CARD8 reqType;1795,45013
    BYTE pad;1796,45032
    CARD16 length B16;1797,45046
    Colormap cmap B32;1798,45069
    CARD32 planeMask B32;1799,45092
} xFreeColorsReq;1800,45118
    CARD8 reqType;1803,45158
    BYTE pad;1804,45177
    CARD16 length B16;1805,45191
    Colormap cmap B32;1806,45214
} xStoreColorsReq;1807,45237
    CARD8 reqType;1810,45278
    CARD8 flags;1811,45297
    CARD16 length B16;1812,45363
    Colormap cmap B32;1813,45386
    CARD32 pixel B32;1814,45409
    CARD16 nbytes B16;1815,45431
    BYTE pad1,1816,45509
    BYTE pad1, pad2;1816,45509
    } xStoreNamedColorReq;1817,45530
    CARD8 reqType;1820,45575
    BYTE pad;1821,45594
    CARD16 length B16;1822,45608
    Colormap cmap B32;1823,45631
} xQueryColorsReq;1824,45654
    CARD8 reqType;1827,45738
    BYTE pad;1828,45757
    CARD16 length B16;1829,45771
    Colormap cmap B32;1830,45794
    CARD16 nbytes B16;1831,45817
    BYTE pad1,1832,45889
    BYTE pad1, pad2;1832,45889
} xLookupColorReq;1833,45910
    CARD8 reqType;1836,45951
    BYTE pad;1837,45970
    CARD16 length B16;1838,45984
    Cursor cid B32;1839,46007
    Pixmap source B32,1840,46027
    Pixmap source B32, mask B32;1840,46027
    CARD16 foreRed B16,1841,46060
    CARD16 foreRed B16, foreGreen B16,1841,46060
    CARD16 foreRed B16, foreGreen B16, foreBlue B16;1841,46060
    CARD16 backRed B16,1842,46113
    CARD16 backRed B16, backGreen B16,1842,46113
    CARD16 backRed B16, backGreen B16, backBlue B16;1842,46113
    CARD16 x B16,1843,46166
    CARD16 x B16, y B16;1843,46166
} xCreateCursorReq;1844,46191
    CARD8 reqType;1847,46233
    BYTE pad;1848,46252
    CARD16 length B16;1849,46266
    Cursor cid B32;1850,46289
    Font source B32,1851,46309
    Font source B32, mask B32;1851,46309
    CARD16 sourceChar B16,1852,46340
    CARD16 sourceChar B16, maskChar B16;1852,46340
    CARD16 foreRed B16,1853,46381
    CARD16 foreRed B16, foreGreen B16,1853,46381
    CARD16 foreRed B16, foreGreen B16, foreBlue B16;1853,46381
    CARD16 backRed B16,1854,46434
    CARD16 backRed B16, backGreen B16,1854,46434
    CARD16 backRed B16, backGreen B16, backBlue B16;1854,46434
} xCreateGlyphCursorReq;1855,46487
    CARD8 reqType;1858,46534
    BYTE pad;1859,46553
    CARD16 length B16;1860,46567
    Cursor cursor B32;1861,46590
    CARD16 foreRed B16,1862,46613
    CARD16 foreRed B16, foreGreen B16,1862,46613
    CARD16 foreRed B16, foreGreen B16, foreBlue B16;1862,46613
    CARD16 backRed B16,1863,46666
    CARD16 backRed B16, backGreen B16,1863,46666
    CARD16 backRed B16, backGreen B16, backBlue B16;1863,46666
} xRecolorCursorReq;1864,46719
    CARD8 reqType;1867,46762
    CARD8 c_class;1869,46829
    CARD16 length B16;1873,46878
    Drawable drawable B32;1874,46901
    CARD16 width B16,1875,46928
    CARD16 width B16, height B16;1875,46928
} xQueryBestSizeReq;1876,46962
    CARD8 reqType;1879,47005
    BYTE pad;1880,47024
    CARD16 length B16;1881,47038
    CARD16 nbytes B16;1882,47061
    BYTE pad1,1883,47134
    BYTE pad1, pad2;1883,47134
} xQueryExtensionReq;1884,47155
    CARD8   reqType;1887,47195
    CARD8   numKeyPerModifier;1888,47216
    CARD16  length B16;1889,47247
} xSetModifierMappingReq;1890,47271
    CARD8 reqType;1893,47315
    CARD8 nElts;1894,47334
    CARD16 length B16;1895,47387
} xSetPointerMappingReq;1896,47410
    CARD8 reqType;1899,47453
    BYTE pad;1900,47472
    CARD16 length B16;1901,47486
    KeyCode firstKeyCode;1902,47509
    CARD8 count;1903,47535
    CARD16 pad1 B16;1904,47552
} xGetKeyboardMappingReq;1905,47573
    CARD8 reqType;1908,47621
    CARD8 keyCodes;1909,47640
    CARD16 length B16;1910,47660
    KeyCode firstKeyCode;1911,47683
    CARD8 keySymsPerKeyCode;1912,47709
    CARD16 pad1 B16;1913,47738
} xChangeKeyboardMappingReq;1914,47759
    CARD8 reqType;1917,47806
    BYTE pad;1918,47825
    CARD16 length B16;1919,47839
    CARD32 mask B32;1920,47862
} xChangeKeyboardControlReq;1921,47883
    CARD8 reqType;1924,47934
    INT8 percent;1925,47953
    CARD16 length B16;1926,47990
} xBellReq;1927,48013
    CARD8 reqType;1930,48047
    BYTE pad;1931,48066
    CARD16 length B16;1932,48080
    INT16 accelNum B16,1933,48103
    INT16 accelNum B16, accelDenum B16;1933,48103
    INT16 threshold B16;1934,48143
    BOOL doAccel,1935,48181
    BOOL doAccel, doThresh;1935,48181
} xChangePointerControlReq;1936,48209
    CARD8 reqType;1939,48259
    BYTE pad;1940,48278
    CARD16 length B16;1941,48292
    INT16 timeout B16,1942,48315
    INT16 timeout B16, interval B16;1942,48315
    BYTE preferBlank,1943,48352
    BYTE preferBlank, allowExpose;1943,48352
    CARD16 pad2 B16;1944,48389
} xSetScreenSaverReq;1945,48410
    CARD8 reqType;1948,48454
    BYTE mode;1949,48473
    CARD16 length B16;1950,48488
    CARD8 hostFamily;1951,48511
    BYTE pad;1952,48533
    CARD16 hostLength B16;1953,48547
} xChangeHostsReq;1954,48574
    CARD8 reqType;1957,48615
    BYTE pad;1958,48634
    CARD16 length B16;1959,48648
    } xListHostsReq;1960,48671
    CARD8 reqType;1963,48710
    BYTE mode;1964,48729
    CARD16 length B16;1965,48744
    } xChangeModeReq;1966,48767
typedef xChangeModeReq xSetAccessControlReq;1968,48790
typedef xChangeModeReq xSetCloseDownModeReq;1969,48835
typedef xChangeModeReq xForceScreenSaverReq;1970,48880
    CARD8 reqType;1973,48974
    BYTE pad;1974,48993
    CARD16 length B16;1975,49007
    Window window B32;1976,49030
    CARD16 nAtoms B16;1977,49053
    INT16 nPositions B16;1978,49076
    } xRotatePropertiesReq;1979,49102
#define X_Reply	1985,49157
#define X_Error	1986,49196
#define X_CreateWindow 1990,49250
#define X_ChangeWindowAttributes 1991,49306
#define X_GetWindowAttributes 1992,49356
#define X_DestroyWindow 1993,49403
#define X_DestroySubwindows 1994,49445
#define X_ChangeSaveSet 1995,49490
#define X_ReparentWindow 1996,49532
#define X_MapWindow 1997,49574
#define X_MapSubwindows 1998,49616
#define X_UnmapWindow 1999,49658
#define X_UnmapSubwindows 2000,49700
#define X_ConfigureWindow 2001,49744
#define X_CirculateWindow 2002,49788
#define X_GetGeometry 2003,49832
#define X_QueryTree 2004,49874
#define X_InternAtom 2005,49916
#define X_GetAtomName 2006,49958
#define X_ChangeProperty 2007,50000
#define X_DeleteProperty 2008,50043
#define X_GetProperty 2009,50086
#define X_ListProperties 2010,50128
#define X_SetSelectionOwner 2011,50171
#define X_GetSelectionOwner 2012,50217
#define X_ConvertSelection 2013,50263
#define X_SendEvent 2014,50308
#define X_GrabPointer 2015,50350
#define X_UngrabPointer 2016,50392
#define X_GrabButton 2017,50434
#define X_UngrabButton 2018,50476
#define X_ChangeActivePointerGrab 2019,50518
#define X_GrabKeyboard 2020,50570
#define X_UngrabKeyboard 2021,50612
#define X_GrabKey 2022,50655
#define X_UngrabKey 2023,50697
#define X_AllowEvents 2024,50739
#define X_GrabServer 2025,50788
#define X_UngrabServer 2026,50836
#define X_QueryPointer 2027,50886
#define X_GetMotionEvents 2028,50936
#define X_TranslateCoords 2029,50989
#define X_WarpPointer 2030,51047
#define X_SetInputFocus 2031,51096
#define X_GetInputFocus 2032,51147
#define X_QueryKeymap 2033,51198
#define X_OpenFont 2034,51247
#define X_CloseFont 2035,51293
#define X_QueryFont 2036,51340
#define X_QueryTextExtents 2037,51382
#define X_ListFonts 2038,51429
#define X_ListFontsWithInfo 2039,51473
#define X_SetFontPath 2040,51516
#define X_GetFontPath 2041,51559
#define X_CreatePixmap 2042,51602
#define X_FreePixmap 2043,51652
#define X_CreateGC 2044,51700
#define X_ChangeGC 2045,51746
#define X_CopyGC 2046,51792
#define X_SetDashes 2047,51836
#define X_SetClipRectangles 2048,51883
#define X_FreeGC 2049,51938
#define X_ClearArea 2050,51982
#define X_CopyArea 2051,52037
#define X_CopyPlane 2052,52083
#define X_PolyPoint 2053,52130
#define X_PolyLine 2054,52177
#define X_PolySegment 2055,52223
#define X_PolyRectangle 2056,52272
#define X_PolyArc 2057,52323
#define X_FillPoly 2058,52368
#define X_PolyFillRectangle 2059,52414
#define X_PolyFillArc 2060,52469
#define X_PutImage 2061,52518
#define X_GetImage 2062,52564
#define X_PolyText8 2063,52607
#define X_PolyText16 2064,52654
#define X_ImageText8 2065,52702
#define X_ImageText16 2066,52750
#define X_CreateColormap 2067,52799
#define X_FreeColormap 2068,52851
#define X_CopyColormapAndFree 2069,52901
#define X_InstallColormap 2070,52958
#define X_UninstallColormap 2071,53011
#define X_ListInstalledColormaps 2072,53066
#define X_AllocColor 2073,53126
#define X_AllocNamedColor 2074,53174
#define X_AllocColorCells 2075,53227
#define X_AllocColorPlanes 2076,53280
#define X_FreeColors 2077,53334
#define X_StoreColors 2078,53382
#define X_StoreNamedColor 2079,53431
#define X_QueryColors 2080,53484
#define X_LookupColor 2081,53533
#define X_CreateCursor 2082,53582
#define X_CreateGlyphCursor 2083,53632
#define X_FreeCursor 2084,53687
#define X_RecolorCursor 2085,53735
#define X_QueryBestSize 2086,53786
#define X_QueryExtension 2087,53837
#define X_ListExtensions 2088,53889
#define X_ChangeKeyboardMapping 2089,53941
#define X_GetKeyboardMapping 2090,53984
#define X_ChangeKeyboardControl 2091,54027
#define X_GetKeyboardControl 2092,54086
#define X_Bell 2093,54142
#define X_ChangePointerControl 2094,54185
#define X_GetPointerControl 2095,54228
#define X_SetScreenSaver 2096,54271
#define X_GetScreenSaver 2097,54324
#define X_ChangeHosts 2098,54377
#define X_ListHosts 2099,54427
#define X_SetAccessControl 2100,54475
#define X_SetCloseDownMode 2101,54533
#define X_KillClient 2102,54576
#define X_RotateProperties	2103,54620
#define X_ForceScreenSaver	2104,54658
#define X_SetPointerMapping 2105,54696
#define X_GetPointerMapping 2106,54739
#define X_SetModifierMapping	2107,54782
#define X_GetModifierMapping	2108,54822
#define X_NoOperation 2109,54862
#undef Window2112,54966
#undef Drawable2113,54980
#undef Font2114,54996
#undef Pixmap2115,55008
#undef Cursor2116,55022
#undef Colormap2117,55036
#undef GContext2118,55052
#undef Atom2119,55068
#undef VisualID2120,55080
#undef Time2121,55096
#undef KeyCode2122,55108
#undef KeySym2123,55123

src/cl/c-src/X11/Xos.h,412
#define _XOS_H_25,960
#define word 34,1065
#define __TYPES__37,1147
#undef word39,1177
#define index 66,1769
#define rindex 67,1790
#define __TIMEVAL__96,2199
#define __TIMEVAL__104,2315
struct timeval 105,2335
    long tv_sec;106,2352
    long tv_usec;107,2369
struct timezone 109,2390
    int tz_minuteswest;110,2408
    int tz_dsttime;111,2432
#define SIGCHLD 131,2680
#define sigvec 142,2786

src/cl/pprint/compile-script.lisp,0

src/cl/pprint/package-setup.lisp,0

src/cl/pprint/load-script.lisp,0

src/build/compile-cl-script.lisp,0

src/build/compile-clx-script.lisp,0

src/pcl/precom4.lisp,0

src/pcl/precom1.lisp,0

src/pcl/precom2.lisp,0

src/pcl/compile-script.lisp,0

src/pcl/setup.lisp,0

src/pcl/load-script.lisp,0

src/pcl/compat.lisp,0
